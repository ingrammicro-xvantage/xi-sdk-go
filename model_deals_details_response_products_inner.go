/*
XI Sdk Resellers

For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the DealsDetailsResponseProductsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DealsDetailsResponseProductsInner{}

// DealsDetailsResponseProductsInner struct for DealsDetailsResponseProductsInner
type DealsDetailsResponseProductsInner struct {
	// Unique Ingram part number.
	IngramPartNumber *string `json:"ingramPartNumber,omitempty"`
	// Vendor Part number for the product.
	VendorPartNumber *string `json:"vendorPartNumber,omitempty"`
	// The UPC code for the product. Consists of 12 numeric digits that are uniquely assigned to each trade item.
	Upc *string `json:"upc,omitempty"`
	// Description of the product.
	ProductDescription *string `json:"productDescription,omitempty"`
	// Manufacturer Suggested Retail Price.
	Msrp *float32 `json:"msrp,omitempty"`
	// Extended MSRP - Manufacturer Suggested Retail Price X Quantity.
	ExtendedMSRP *float32 `json:"extendedMSRP,omitempty"`
	// Standard price of the line item.
	StandardPrice *float32 `json:"standardPrice,omitempty"`
	// Total quantity approved for the deal.
	ApprovedQuantity *int32 `json:"approvedQuantity,omitempty"`
	// The quantity remaining as part of the deal for the customer to order.
	RemainingQuantity *int32 `json:"remainingQuantity,omitempty"`
	// Comments of the deal.
	Comments *string `json:"comments,omitempty"`
	// Special conditions of the deal.
	SpecialConditions *string `json:"specialConditions,omitempty"`
	// Start Date.
	StartDate *string `json:"startDate,omitempty"`
	// Expiration date.
	ExpirationDate *string `json:"expirationDate,omitempty"`
	// Number of days remaining before the deal expires.
	DaysRemaining *int32 `json:"daysRemaining,omitempty"`
}

// NewDealsDetailsResponseProductsInner instantiates a new DealsDetailsResponseProductsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDealsDetailsResponseProductsInner() *DealsDetailsResponseProductsInner {
	this := DealsDetailsResponseProductsInner{}
	return &this
}

// NewDealsDetailsResponseProductsInnerWithDefaults instantiates a new DealsDetailsResponseProductsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDealsDetailsResponseProductsInnerWithDefaults() *DealsDetailsResponseProductsInner {
	this := DealsDetailsResponseProductsInner{}
	return &this
}

// GetIngramPartNumber returns the IngramPartNumber field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetIngramPartNumber() string {
	if o == nil || IsNil(o.IngramPartNumber) {
		var ret string
		return ret
	}
	return *o.IngramPartNumber
}

// GetIngramPartNumberOk returns a tuple with the IngramPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetIngramPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.IngramPartNumber) {
		return nil, false
	}
	return o.IngramPartNumber, true
}

// HasIngramPartNumber returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasIngramPartNumber() bool {
	if o != nil && !IsNil(o.IngramPartNumber) {
		return true
	}

	return false
}

// SetIngramPartNumber gets a reference to the given string and assigns it to the IngramPartNumber field.
func (o *DealsDetailsResponseProductsInner) SetIngramPartNumber(v string) {
	o.IngramPartNumber = &v
}

// GetVendorPartNumber returns the VendorPartNumber field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetVendorPartNumber() string {
	if o == nil || IsNil(o.VendorPartNumber) {
		var ret string
		return ret
	}
	return *o.VendorPartNumber
}

// GetVendorPartNumberOk returns a tuple with the VendorPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetVendorPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VendorPartNumber) {
		return nil, false
	}
	return o.VendorPartNumber, true
}

// HasVendorPartNumber returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasVendorPartNumber() bool {
	if o != nil && !IsNil(o.VendorPartNumber) {
		return true
	}

	return false
}

// SetVendorPartNumber gets a reference to the given string and assigns it to the VendorPartNumber field.
func (o *DealsDetailsResponseProductsInner) SetVendorPartNumber(v string) {
	o.VendorPartNumber = &v
}

// GetUpc returns the Upc field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetUpc() string {
	if o == nil || IsNil(o.Upc) {
		var ret string
		return ret
	}
	return *o.Upc
}

// GetUpcOk returns a tuple with the Upc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetUpcOk() (*string, bool) {
	if o == nil || IsNil(o.Upc) {
		return nil, false
	}
	return o.Upc, true
}

// HasUpc returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasUpc() bool {
	if o != nil && !IsNil(o.Upc) {
		return true
	}

	return false
}

// SetUpc gets a reference to the given string and assigns it to the Upc field.
func (o *DealsDetailsResponseProductsInner) SetUpc(v string) {
	o.Upc = &v
}

// GetProductDescription returns the ProductDescription field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetProductDescription() string {
	if o == nil || IsNil(o.ProductDescription) {
		var ret string
		return ret
	}
	return *o.ProductDescription
}

// GetProductDescriptionOk returns a tuple with the ProductDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetProductDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ProductDescription) {
		return nil, false
	}
	return o.ProductDescription, true
}

// HasProductDescription returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasProductDescription() bool {
	if o != nil && !IsNil(o.ProductDescription) {
		return true
	}

	return false
}

// SetProductDescription gets a reference to the given string and assigns it to the ProductDescription field.
func (o *DealsDetailsResponseProductsInner) SetProductDescription(v string) {
	o.ProductDescription = &v
}

// GetMsrp returns the Msrp field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetMsrp() float32 {
	if o == nil || IsNil(o.Msrp) {
		var ret float32
		return ret
	}
	return *o.Msrp
}

// GetMsrpOk returns a tuple with the Msrp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetMsrpOk() (*float32, bool) {
	if o == nil || IsNil(o.Msrp) {
		return nil, false
	}
	return o.Msrp, true
}

// HasMsrp returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasMsrp() bool {
	if o != nil && !IsNil(o.Msrp) {
		return true
	}

	return false
}

// SetMsrp gets a reference to the given float32 and assigns it to the Msrp field.
func (o *DealsDetailsResponseProductsInner) SetMsrp(v float32) {
	o.Msrp = &v
}

// GetExtendedMSRP returns the ExtendedMSRP field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetExtendedMSRP() float32 {
	if o == nil || IsNil(o.ExtendedMSRP) {
		var ret float32
		return ret
	}
	return *o.ExtendedMSRP
}

// GetExtendedMSRPOk returns a tuple with the ExtendedMSRP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetExtendedMSRPOk() (*float32, bool) {
	if o == nil || IsNil(o.ExtendedMSRP) {
		return nil, false
	}
	return o.ExtendedMSRP, true
}

// HasExtendedMSRP returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasExtendedMSRP() bool {
	if o != nil && !IsNil(o.ExtendedMSRP) {
		return true
	}

	return false
}

// SetExtendedMSRP gets a reference to the given float32 and assigns it to the ExtendedMSRP field.
func (o *DealsDetailsResponseProductsInner) SetExtendedMSRP(v float32) {
	o.ExtendedMSRP = &v
}

// GetStandardPrice returns the StandardPrice field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetStandardPrice() float32 {
	if o == nil || IsNil(o.StandardPrice) {
		var ret float32
		return ret
	}
	return *o.StandardPrice
}

// GetStandardPriceOk returns a tuple with the StandardPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetStandardPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.StandardPrice) {
		return nil, false
	}
	return o.StandardPrice, true
}

// HasStandardPrice returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasStandardPrice() bool {
	if o != nil && !IsNil(o.StandardPrice) {
		return true
	}

	return false
}

// SetStandardPrice gets a reference to the given float32 and assigns it to the StandardPrice field.
func (o *DealsDetailsResponseProductsInner) SetStandardPrice(v float32) {
	o.StandardPrice = &v
}

// GetApprovedQuantity returns the ApprovedQuantity field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetApprovedQuantity() int32 {
	if o == nil || IsNil(o.ApprovedQuantity) {
		var ret int32
		return ret
	}
	return *o.ApprovedQuantity
}

// GetApprovedQuantityOk returns a tuple with the ApprovedQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetApprovedQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.ApprovedQuantity) {
		return nil, false
	}
	return o.ApprovedQuantity, true
}

// HasApprovedQuantity returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasApprovedQuantity() bool {
	if o != nil && !IsNil(o.ApprovedQuantity) {
		return true
	}

	return false
}

// SetApprovedQuantity gets a reference to the given int32 and assigns it to the ApprovedQuantity field.
func (o *DealsDetailsResponseProductsInner) SetApprovedQuantity(v int32) {
	o.ApprovedQuantity = &v
}

// GetRemainingQuantity returns the RemainingQuantity field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetRemainingQuantity() int32 {
	if o == nil || IsNil(o.RemainingQuantity) {
		var ret int32
		return ret
	}
	return *o.RemainingQuantity
}

// GetRemainingQuantityOk returns a tuple with the RemainingQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetRemainingQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.RemainingQuantity) {
		return nil, false
	}
	return o.RemainingQuantity, true
}

// HasRemainingQuantity returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasRemainingQuantity() bool {
	if o != nil && !IsNil(o.RemainingQuantity) {
		return true
	}

	return false
}

// SetRemainingQuantity gets a reference to the given int32 and assigns it to the RemainingQuantity field.
func (o *DealsDetailsResponseProductsInner) SetRemainingQuantity(v int32) {
	o.RemainingQuantity = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *DealsDetailsResponseProductsInner) SetComments(v string) {
	o.Comments = &v
}

// GetSpecialConditions returns the SpecialConditions field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetSpecialConditions() string {
	if o == nil || IsNil(o.SpecialConditions) {
		var ret string
		return ret
	}
	return *o.SpecialConditions
}

// GetSpecialConditionsOk returns a tuple with the SpecialConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetSpecialConditionsOk() (*string, bool) {
	if o == nil || IsNil(o.SpecialConditions) {
		return nil, false
	}
	return o.SpecialConditions, true
}

// HasSpecialConditions returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasSpecialConditions() bool {
	if o != nil && !IsNil(o.SpecialConditions) {
		return true
	}

	return false
}

// SetSpecialConditions gets a reference to the given string and assigns it to the SpecialConditions field.
func (o *DealsDetailsResponseProductsInner) SetSpecialConditions(v string) {
	o.SpecialConditions = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *DealsDetailsResponseProductsInner) SetStartDate(v string) {
	o.StartDate = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetExpirationDate() string {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *DealsDetailsResponseProductsInner) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetDaysRemaining returns the DaysRemaining field value if set, zero value otherwise.
func (o *DealsDetailsResponseProductsInner) GetDaysRemaining() int32 {
	if o == nil || IsNil(o.DaysRemaining) {
		var ret int32
		return ret
	}
	return *o.DaysRemaining
}

// GetDaysRemainingOk returns a tuple with the DaysRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealsDetailsResponseProductsInner) GetDaysRemainingOk() (*int32, bool) {
	if o == nil || IsNil(o.DaysRemaining) {
		return nil, false
	}
	return o.DaysRemaining, true
}

// HasDaysRemaining returns a boolean if a field has been set.
func (o *DealsDetailsResponseProductsInner) HasDaysRemaining() bool {
	if o != nil && !IsNil(o.DaysRemaining) {
		return true
	}

	return false
}

// SetDaysRemaining gets a reference to the given int32 and assigns it to the DaysRemaining field.
func (o *DealsDetailsResponseProductsInner) SetDaysRemaining(v int32) {
	o.DaysRemaining = &v
}

func (o DealsDetailsResponseProductsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DealsDetailsResponseProductsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IngramPartNumber) {
		toSerialize["ingramPartNumber"] = o.IngramPartNumber
	}
	if !IsNil(o.VendorPartNumber) {
		toSerialize["vendorPartNumber"] = o.VendorPartNumber
	}
	if !IsNil(o.Upc) {
		toSerialize["upc"] = o.Upc
	}
	if !IsNil(o.ProductDescription) {
		toSerialize["productDescription"] = o.ProductDescription
	}
	if !IsNil(o.Msrp) {
		toSerialize["msrp"] = o.Msrp
	}
	if !IsNil(o.ExtendedMSRP) {
		toSerialize["extendedMSRP"] = o.ExtendedMSRP
	}
	if !IsNil(o.StandardPrice) {
		toSerialize["standardPrice"] = o.StandardPrice
	}
	if !IsNil(o.ApprovedQuantity) {
		toSerialize["approvedQuantity"] = o.ApprovedQuantity
	}
	if !IsNil(o.RemainingQuantity) {
		toSerialize["remainingQuantity"] = o.RemainingQuantity
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.SpecialConditions) {
		toSerialize["specialConditions"] = o.SpecialConditions
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if !IsNil(o.DaysRemaining) {
		toSerialize["daysRemaining"] = o.DaysRemaining
	}
	return toSerialize, nil
}

type NullableDealsDetailsResponseProductsInner struct {
	value *DealsDetailsResponseProductsInner
	isSet bool
}

func (v NullableDealsDetailsResponseProductsInner) Get() *DealsDetailsResponseProductsInner {
	return v.value
}

func (v *NullableDealsDetailsResponseProductsInner) Set(val *DealsDetailsResponseProductsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDealsDetailsResponseProductsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDealsDetailsResponseProductsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDealsDetailsResponseProductsInner(val *DealsDetailsResponseProductsInner) *NullableDealsDetailsResponseProductsInner {
	return &NullableDealsDetailsResponseProductsInner{value: val, isSet: true}
}

func (v NullableDealsDetailsResponseProductsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDealsDetailsResponseProductsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


