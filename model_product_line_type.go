/*
XI Sdk Resellers

For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the ProductLineType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductLineType{}

// ProductLineType Product line items object under each invoice
type ProductLineType struct {
	Linenumber *string `json:"linenumber,omitempty"`
	Linetype *string `json:"linetype,omitempty"`
	Partnumber *string `json:"partnumber,omitempty"`
	Vendorpartnumber *string `json:"vendorpartnumber,omitempty"`
	Partdescription *string `json:"partdescription,omitempty"`
	Shipfrombranch *string `json:"shipfrombranch,omitempty"`
	Shippedquantity *string `json:"shippedquantity,omitempty"`
	Orderedquantity *string `json:"orderedquantity,omitempty"`
	Marginpercent *string `json:"marginpercent,omitempty"`
	Backorderquantity *string `json:"backorderquantity,omitempty"`
	Backorderetadate *string `json:"backorderetadate,omitempty"`
	Extendedprice *string `json:"extendedprice,omitempty"`
	Specialbidnumber *string `json:"specialbidnumber,omitempty"`
	Ordersuffix *string `json:"ordersuffix,omitempty"`
	Isacopapplied *string `json:"isacopapplied,omitempty"`
	Unitprice *string `json:"unitprice,omitempty"`
	Unitofmeasure *string `json:"unitofmeasure,omitempty"`
	Serialnumberdetails []ProductLineTypeSerialnumberdetailsInner `json:"serialnumberdetails,omitempty"`
	Trackingnumberdetails []ProductLineTypeTrackingnumberdetailsInner `json:"trackingnumberdetails,omitempty"`
	Productextendedspecs []InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner `json:"productextendedspecs,omitempty"`
}

// NewProductLineType instantiates a new ProductLineType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductLineType() *ProductLineType {
	this := ProductLineType{}
	return &this
}

// NewProductLineTypeWithDefaults instantiates a new ProductLineType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductLineTypeWithDefaults() *ProductLineType {
	this := ProductLineType{}
	return &this
}

// GetLinenumber returns the Linenumber field value if set, zero value otherwise.
func (o *ProductLineType) GetLinenumber() string {
	if o == nil || IsNil(o.Linenumber) {
		var ret string
		return ret
	}
	return *o.Linenumber
}

// GetLinenumberOk returns a tuple with the Linenumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetLinenumberOk() (*string, bool) {
	if o == nil || IsNil(o.Linenumber) {
		return nil, false
	}
	return o.Linenumber, true
}

// HasLinenumber returns a boolean if a field has been set.
func (o *ProductLineType) HasLinenumber() bool {
	if o != nil && !IsNil(o.Linenumber) {
		return true
	}

	return false
}

// SetLinenumber gets a reference to the given string and assigns it to the Linenumber field.
func (o *ProductLineType) SetLinenumber(v string) {
	o.Linenumber = &v
}

// GetLinetype returns the Linetype field value if set, zero value otherwise.
func (o *ProductLineType) GetLinetype() string {
	if o == nil || IsNil(o.Linetype) {
		var ret string
		return ret
	}
	return *o.Linetype
}

// GetLinetypeOk returns a tuple with the Linetype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetLinetypeOk() (*string, bool) {
	if o == nil || IsNil(o.Linetype) {
		return nil, false
	}
	return o.Linetype, true
}

// HasLinetype returns a boolean if a field has been set.
func (o *ProductLineType) HasLinetype() bool {
	if o != nil && !IsNil(o.Linetype) {
		return true
	}

	return false
}

// SetLinetype gets a reference to the given string and assigns it to the Linetype field.
func (o *ProductLineType) SetLinetype(v string) {
	o.Linetype = &v
}

// GetPartnumber returns the Partnumber field value if set, zero value otherwise.
func (o *ProductLineType) GetPartnumber() string {
	if o == nil || IsNil(o.Partnumber) {
		var ret string
		return ret
	}
	return *o.Partnumber
}

// GetPartnumberOk returns a tuple with the Partnumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetPartnumberOk() (*string, bool) {
	if o == nil || IsNil(o.Partnumber) {
		return nil, false
	}
	return o.Partnumber, true
}

// HasPartnumber returns a boolean if a field has been set.
func (o *ProductLineType) HasPartnumber() bool {
	if o != nil && !IsNil(o.Partnumber) {
		return true
	}

	return false
}

// SetPartnumber gets a reference to the given string and assigns it to the Partnumber field.
func (o *ProductLineType) SetPartnumber(v string) {
	o.Partnumber = &v
}

// GetVendorpartnumber returns the Vendorpartnumber field value if set, zero value otherwise.
func (o *ProductLineType) GetVendorpartnumber() string {
	if o == nil || IsNil(o.Vendorpartnumber) {
		var ret string
		return ret
	}
	return *o.Vendorpartnumber
}

// GetVendorpartnumberOk returns a tuple with the Vendorpartnumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetVendorpartnumberOk() (*string, bool) {
	if o == nil || IsNil(o.Vendorpartnumber) {
		return nil, false
	}
	return o.Vendorpartnumber, true
}

// HasVendorpartnumber returns a boolean if a field has been set.
func (o *ProductLineType) HasVendorpartnumber() bool {
	if o != nil && !IsNil(o.Vendorpartnumber) {
		return true
	}

	return false
}

// SetVendorpartnumber gets a reference to the given string and assigns it to the Vendorpartnumber field.
func (o *ProductLineType) SetVendorpartnumber(v string) {
	o.Vendorpartnumber = &v
}

// GetPartdescription returns the Partdescription field value if set, zero value otherwise.
func (o *ProductLineType) GetPartdescription() string {
	if o == nil || IsNil(o.Partdescription) {
		var ret string
		return ret
	}
	return *o.Partdescription
}

// GetPartdescriptionOk returns a tuple with the Partdescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetPartdescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Partdescription) {
		return nil, false
	}
	return o.Partdescription, true
}

// HasPartdescription returns a boolean if a field has been set.
func (o *ProductLineType) HasPartdescription() bool {
	if o != nil && !IsNil(o.Partdescription) {
		return true
	}

	return false
}

// SetPartdescription gets a reference to the given string and assigns it to the Partdescription field.
func (o *ProductLineType) SetPartdescription(v string) {
	o.Partdescription = &v
}

// GetShipfrombranch returns the Shipfrombranch field value if set, zero value otherwise.
func (o *ProductLineType) GetShipfrombranch() string {
	if o == nil || IsNil(o.Shipfrombranch) {
		var ret string
		return ret
	}
	return *o.Shipfrombranch
}

// GetShipfrombranchOk returns a tuple with the Shipfrombranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetShipfrombranchOk() (*string, bool) {
	if o == nil || IsNil(o.Shipfrombranch) {
		return nil, false
	}
	return o.Shipfrombranch, true
}

// HasShipfrombranch returns a boolean if a field has been set.
func (o *ProductLineType) HasShipfrombranch() bool {
	if o != nil && !IsNil(o.Shipfrombranch) {
		return true
	}

	return false
}

// SetShipfrombranch gets a reference to the given string and assigns it to the Shipfrombranch field.
func (o *ProductLineType) SetShipfrombranch(v string) {
	o.Shipfrombranch = &v
}

// GetShippedquantity returns the Shippedquantity field value if set, zero value otherwise.
func (o *ProductLineType) GetShippedquantity() string {
	if o == nil || IsNil(o.Shippedquantity) {
		var ret string
		return ret
	}
	return *o.Shippedquantity
}

// GetShippedquantityOk returns a tuple with the Shippedquantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetShippedquantityOk() (*string, bool) {
	if o == nil || IsNil(o.Shippedquantity) {
		return nil, false
	}
	return o.Shippedquantity, true
}

// HasShippedquantity returns a boolean if a field has been set.
func (o *ProductLineType) HasShippedquantity() bool {
	if o != nil && !IsNil(o.Shippedquantity) {
		return true
	}

	return false
}

// SetShippedquantity gets a reference to the given string and assigns it to the Shippedquantity field.
func (o *ProductLineType) SetShippedquantity(v string) {
	o.Shippedquantity = &v
}

// GetOrderedquantity returns the Orderedquantity field value if set, zero value otherwise.
func (o *ProductLineType) GetOrderedquantity() string {
	if o == nil || IsNil(o.Orderedquantity) {
		var ret string
		return ret
	}
	return *o.Orderedquantity
}

// GetOrderedquantityOk returns a tuple with the Orderedquantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetOrderedquantityOk() (*string, bool) {
	if o == nil || IsNil(o.Orderedquantity) {
		return nil, false
	}
	return o.Orderedquantity, true
}

// HasOrderedquantity returns a boolean if a field has been set.
func (o *ProductLineType) HasOrderedquantity() bool {
	if o != nil && !IsNil(o.Orderedquantity) {
		return true
	}

	return false
}

// SetOrderedquantity gets a reference to the given string and assigns it to the Orderedquantity field.
func (o *ProductLineType) SetOrderedquantity(v string) {
	o.Orderedquantity = &v
}

// GetMarginpercent returns the Marginpercent field value if set, zero value otherwise.
func (o *ProductLineType) GetMarginpercent() string {
	if o == nil || IsNil(o.Marginpercent) {
		var ret string
		return ret
	}
	return *o.Marginpercent
}

// GetMarginpercentOk returns a tuple with the Marginpercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetMarginpercentOk() (*string, bool) {
	if o == nil || IsNil(o.Marginpercent) {
		return nil, false
	}
	return o.Marginpercent, true
}

// HasMarginpercent returns a boolean if a field has been set.
func (o *ProductLineType) HasMarginpercent() bool {
	if o != nil && !IsNil(o.Marginpercent) {
		return true
	}

	return false
}

// SetMarginpercent gets a reference to the given string and assigns it to the Marginpercent field.
func (o *ProductLineType) SetMarginpercent(v string) {
	o.Marginpercent = &v
}

// GetBackorderquantity returns the Backorderquantity field value if set, zero value otherwise.
func (o *ProductLineType) GetBackorderquantity() string {
	if o == nil || IsNil(o.Backorderquantity) {
		var ret string
		return ret
	}
	return *o.Backorderquantity
}

// GetBackorderquantityOk returns a tuple with the Backorderquantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetBackorderquantityOk() (*string, bool) {
	if o == nil || IsNil(o.Backorderquantity) {
		return nil, false
	}
	return o.Backorderquantity, true
}

// HasBackorderquantity returns a boolean if a field has been set.
func (o *ProductLineType) HasBackorderquantity() bool {
	if o != nil && !IsNil(o.Backorderquantity) {
		return true
	}

	return false
}

// SetBackorderquantity gets a reference to the given string and assigns it to the Backorderquantity field.
func (o *ProductLineType) SetBackorderquantity(v string) {
	o.Backorderquantity = &v
}

// GetBackorderetadate returns the Backorderetadate field value if set, zero value otherwise.
func (o *ProductLineType) GetBackorderetadate() string {
	if o == nil || IsNil(o.Backorderetadate) {
		var ret string
		return ret
	}
	return *o.Backorderetadate
}

// GetBackorderetadateOk returns a tuple with the Backorderetadate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetBackorderetadateOk() (*string, bool) {
	if o == nil || IsNil(o.Backorderetadate) {
		return nil, false
	}
	return o.Backorderetadate, true
}

// HasBackorderetadate returns a boolean if a field has been set.
func (o *ProductLineType) HasBackorderetadate() bool {
	if o != nil && !IsNil(o.Backorderetadate) {
		return true
	}

	return false
}

// SetBackorderetadate gets a reference to the given string and assigns it to the Backorderetadate field.
func (o *ProductLineType) SetBackorderetadate(v string) {
	o.Backorderetadate = &v
}

// GetExtendedprice returns the Extendedprice field value if set, zero value otherwise.
func (o *ProductLineType) GetExtendedprice() string {
	if o == nil || IsNil(o.Extendedprice) {
		var ret string
		return ret
	}
	return *o.Extendedprice
}

// GetExtendedpriceOk returns a tuple with the Extendedprice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetExtendedpriceOk() (*string, bool) {
	if o == nil || IsNil(o.Extendedprice) {
		return nil, false
	}
	return o.Extendedprice, true
}

// HasExtendedprice returns a boolean if a field has been set.
func (o *ProductLineType) HasExtendedprice() bool {
	if o != nil && !IsNil(o.Extendedprice) {
		return true
	}

	return false
}

// SetExtendedprice gets a reference to the given string and assigns it to the Extendedprice field.
func (o *ProductLineType) SetExtendedprice(v string) {
	o.Extendedprice = &v
}

// GetSpecialbidnumber returns the Specialbidnumber field value if set, zero value otherwise.
func (o *ProductLineType) GetSpecialbidnumber() string {
	if o == nil || IsNil(o.Specialbidnumber) {
		var ret string
		return ret
	}
	return *o.Specialbidnumber
}

// GetSpecialbidnumberOk returns a tuple with the Specialbidnumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetSpecialbidnumberOk() (*string, bool) {
	if o == nil || IsNil(o.Specialbidnumber) {
		return nil, false
	}
	return o.Specialbidnumber, true
}

// HasSpecialbidnumber returns a boolean if a field has been set.
func (o *ProductLineType) HasSpecialbidnumber() bool {
	if o != nil && !IsNil(o.Specialbidnumber) {
		return true
	}

	return false
}

// SetSpecialbidnumber gets a reference to the given string and assigns it to the Specialbidnumber field.
func (o *ProductLineType) SetSpecialbidnumber(v string) {
	o.Specialbidnumber = &v
}

// GetOrdersuffix returns the Ordersuffix field value if set, zero value otherwise.
func (o *ProductLineType) GetOrdersuffix() string {
	if o == nil || IsNil(o.Ordersuffix) {
		var ret string
		return ret
	}
	return *o.Ordersuffix
}

// GetOrdersuffixOk returns a tuple with the Ordersuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetOrdersuffixOk() (*string, bool) {
	if o == nil || IsNil(o.Ordersuffix) {
		return nil, false
	}
	return o.Ordersuffix, true
}

// HasOrdersuffix returns a boolean if a field has been set.
func (o *ProductLineType) HasOrdersuffix() bool {
	if o != nil && !IsNil(o.Ordersuffix) {
		return true
	}

	return false
}

// SetOrdersuffix gets a reference to the given string and assigns it to the Ordersuffix field.
func (o *ProductLineType) SetOrdersuffix(v string) {
	o.Ordersuffix = &v
}

// GetIsacopapplied returns the Isacopapplied field value if set, zero value otherwise.
func (o *ProductLineType) GetIsacopapplied() string {
	if o == nil || IsNil(o.Isacopapplied) {
		var ret string
		return ret
	}
	return *o.Isacopapplied
}

// GetIsacopappliedOk returns a tuple with the Isacopapplied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetIsacopappliedOk() (*string, bool) {
	if o == nil || IsNil(o.Isacopapplied) {
		return nil, false
	}
	return o.Isacopapplied, true
}

// HasIsacopapplied returns a boolean if a field has been set.
func (o *ProductLineType) HasIsacopapplied() bool {
	if o != nil && !IsNil(o.Isacopapplied) {
		return true
	}

	return false
}

// SetIsacopapplied gets a reference to the given string and assigns it to the Isacopapplied field.
func (o *ProductLineType) SetIsacopapplied(v string) {
	o.Isacopapplied = &v
}

// GetUnitprice returns the Unitprice field value if set, zero value otherwise.
func (o *ProductLineType) GetUnitprice() string {
	if o == nil || IsNil(o.Unitprice) {
		var ret string
		return ret
	}
	return *o.Unitprice
}

// GetUnitpriceOk returns a tuple with the Unitprice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetUnitpriceOk() (*string, bool) {
	if o == nil || IsNil(o.Unitprice) {
		return nil, false
	}
	return o.Unitprice, true
}

// HasUnitprice returns a boolean if a field has been set.
func (o *ProductLineType) HasUnitprice() bool {
	if o != nil && !IsNil(o.Unitprice) {
		return true
	}

	return false
}

// SetUnitprice gets a reference to the given string and assigns it to the Unitprice field.
func (o *ProductLineType) SetUnitprice(v string) {
	o.Unitprice = &v
}

// GetUnitofmeasure returns the Unitofmeasure field value if set, zero value otherwise.
func (o *ProductLineType) GetUnitofmeasure() string {
	if o == nil || IsNil(o.Unitofmeasure) {
		var ret string
		return ret
	}
	return *o.Unitofmeasure
}

// GetUnitofmeasureOk returns a tuple with the Unitofmeasure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetUnitofmeasureOk() (*string, bool) {
	if o == nil || IsNil(o.Unitofmeasure) {
		return nil, false
	}
	return o.Unitofmeasure, true
}

// HasUnitofmeasure returns a boolean if a field has been set.
func (o *ProductLineType) HasUnitofmeasure() bool {
	if o != nil && !IsNil(o.Unitofmeasure) {
		return true
	}

	return false
}

// SetUnitofmeasure gets a reference to the given string and assigns it to the Unitofmeasure field.
func (o *ProductLineType) SetUnitofmeasure(v string) {
	o.Unitofmeasure = &v
}

// GetSerialnumberdetails returns the Serialnumberdetails field value if set, zero value otherwise.
func (o *ProductLineType) GetSerialnumberdetails() []ProductLineTypeSerialnumberdetailsInner {
	if o == nil || IsNil(o.Serialnumberdetails) {
		var ret []ProductLineTypeSerialnumberdetailsInner
		return ret
	}
	return o.Serialnumberdetails
}

// GetSerialnumberdetailsOk returns a tuple with the Serialnumberdetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetSerialnumberdetailsOk() ([]ProductLineTypeSerialnumberdetailsInner, bool) {
	if o == nil || IsNil(o.Serialnumberdetails) {
		return nil, false
	}
	return o.Serialnumberdetails, true
}

// HasSerialnumberdetails returns a boolean if a field has been set.
func (o *ProductLineType) HasSerialnumberdetails() bool {
	if o != nil && !IsNil(o.Serialnumberdetails) {
		return true
	}

	return false
}

// SetSerialnumberdetails gets a reference to the given []ProductLineTypeSerialnumberdetailsInner and assigns it to the Serialnumberdetails field.
func (o *ProductLineType) SetSerialnumberdetails(v []ProductLineTypeSerialnumberdetailsInner) {
	o.Serialnumberdetails = v
}

// GetTrackingnumberdetails returns the Trackingnumberdetails field value if set, zero value otherwise.
func (o *ProductLineType) GetTrackingnumberdetails() []ProductLineTypeTrackingnumberdetailsInner {
	if o == nil || IsNil(o.Trackingnumberdetails) {
		var ret []ProductLineTypeTrackingnumberdetailsInner
		return ret
	}
	return o.Trackingnumberdetails
}

// GetTrackingnumberdetailsOk returns a tuple with the Trackingnumberdetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetTrackingnumberdetailsOk() ([]ProductLineTypeTrackingnumberdetailsInner, bool) {
	if o == nil || IsNil(o.Trackingnumberdetails) {
		return nil, false
	}
	return o.Trackingnumberdetails, true
}

// HasTrackingnumberdetails returns a boolean if a field has been set.
func (o *ProductLineType) HasTrackingnumberdetails() bool {
	if o != nil && !IsNil(o.Trackingnumberdetails) {
		return true
	}

	return false
}

// SetTrackingnumberdetails gets a reference to the given []ProductLineTypeTrackingnumberdetailsInner and assigns it to the Trackingnumberdetails field.
func (o *ProductLineType) SetTrackingnumberdetails(v []ProductLineTypeTrackingnumberdetailsInner) {
	o.Trackingnumberdetails = v
}

// GetProductextendedspecs returns the Productextendedspecs field value if set, zero value otherwise.
func (o *ProductLineType) GetProductextendedspecs() []InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner {
	if o == nil || IsNil(o.Productextendedspecs) {
		var ret []InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner
		return ret
	}
	return o.Productextendedspecs
}

// GetProductextendedspecsOk returns a tuple with the Productextendedspecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductLineType) GetProductextendedspecsOk() ([]InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner, bool) {
	if o == nil || IsNil(o.Productextendedspecs) {
		return nil, false
	}
	return o.Productextendedspecs, true
}

// HasProductextendedspecs returns a boolean if a field has been set.
func (o *ProductLineType) HasProductextendedspecs() bool {
	if o != nil && !IsNil(o.Productextendedspecs) {
		return true
	}

	return false
}

// SetProductextendedspecs gets a reference to the given []InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner and assigns it to the Productextendedspecs field.
func (o *ProductLineType) SetProductextendedspecs(v []InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner) {
	o.Productextendedspecs = v
}

func (o ProductLineType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductLineType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Linenumber) {
		toSerialize["linenumber"] = o.Linenumber
	}
	if !IsNil(o.Linetype) {
		toSerialize["linetype"] = o.Linetype
	}
	if !IsNil(o.Partnumber) {
		toSerialize["partnumber"] = o.Partnumber
	}
	if !IsNil(o.Vendorpartnumber) {
		toSerialize["vendorpartnumber"] = o.Vendorpartnumber
	}
	if !IsNil(o.Partdescription) {
		toSerialize["partdescription"] = o.Partdescription
	}
	if !IsNil(o.Shipfrombranch) {
		toSerialize["shipfrombranch"] = o.Shipfrombranch
	}
	if !IsNil(o.Shippedquantity) {
		toSerialize["shippedquantity"] = o.Shippedquantity
	}
	if !IsNil(o.Orderedquantity) {
		toSerialize["orderedquantity"] = o.Orderedquantity
	}
	if !IsNil(o.Marginpercent) {
		toSerialize["marginpercent"] = o.Marginpercent
	}
	if !IsNil(o.Backorderquantity) {
		toSerialize["backorderquantity"] = o.Backorderquantity
	}
	if !IsNil(o.Backorderetadate) {
		toSerialize["backorderetadate"] = o.Backorderetadate
	}
	if !IsNil(o.Extendedprice) {
		toSerialize["extendedprice"] = o.Extendedprice
	}
	if !IsNil(o.Specialbidnumber) {
		toSerialize["specialbidnumber"] = o.Specialbidnumber
	}
	if !IsNil(o.Ordersuffix) {
		toSerialize["ordersuffix"] = o.Ordersuffix
	}
	if !IsNil(o.Isacopapplied) {
		toSerialize["isacopapplied"] = o.Isacopapplied
	}
	if !IsNil(o.Unitprice) {
		toSerialize["unitprice"] = o.Unitprice
	}
	if !IsNil(o.Unitofmeasure) {
		toSerialize["unitofmeasure"] = o.Unitofmeasure
	}
	if !IsNil(o.Serialnumberdetails) {
		toSerialize["serialnumberdetails"] = o.Serialnumberdetails
	}
	if !IsNil(o.Trackingnumberdetails) {
		toSerialize["trackingnumberdetails"] = o.Trackingnumberdetails
	}
	if !IsNil(o.Productextendedspecs) {
		toSerialize["productextendedspecs"] = o.Productextendedspecs
	}
	return toSerialize, nil
}

type NullableProductLineType struct {
	value *ProductLineType
	isSet bool
}

func (v NullableProductLineType) Get() *ProductLineType {
	return v.value
}

func (v *NullableProductLineType) Set(val *ProductLineType) {
	v.value = val
	v.isSet = true
}

func (v NullableProductLineType) IsSet() bool {
	return v.isSet
}

func (v *NullableProductLineType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductLineType(val *ProductLineType) *NullableProductLineType {
	return &NullableProductLineType{value: val, isSet: true}
}

func (v NullableProductLineType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductLineType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


