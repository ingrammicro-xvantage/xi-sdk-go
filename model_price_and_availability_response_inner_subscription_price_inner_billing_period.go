/*
XI Sdk Resellers

For Resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod{}

// PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod struct for PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod
type PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod struct {
	// The unit of the billing period.
	BillingPeriodUnit NullableString `json:"billingPeriodUnit,omitempty"`
	// The billing period value.
	BillingPeriod NullableFloat32 `json:"billingPeriod,omitempty"`
}

// NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod instantiates a new PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod {
	this := PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod{}
	return &this
}

// NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriodWithDefaults instantiates a new PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriodWithDefaults() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod {
	this := PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod{}
	return &this
}

// GetBillingPeriodUnit returns the BillingPeriodUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) GetBillingPeriodUnit() string {
	if o == nil || IsNil(o.BillingPeriodUnit.Get()) {
		var ret string
		return ret
	}
	return *o.BillingPeriodUnit.Get()
}

// GetBillingPeriodUnitOk returns a tuple with the BillingPeriodUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) GetBillingPeriodUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingPeriodUnit.Get(), o.BillingPeriodUnit.IsSet()
}

// HasBillingPeriodUnit returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) HasBillingPeriodUnit() bool {
	if o != nil && o.BillingPeriodUnit.IsSet() {
		return true
	}

	return false
}

// SetBillingPeriodUnit gets a reference to the given NullableString and assigns it to the BillingPeriodUnit field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) SetBillingPeriodUnit(v string) {
	o.BillingPeriodUnit.Set(&v)
}
// SetBillingPeriodUnitNil sets the value for BillingPeriodUnit to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) SetBillingPeriodUnitNil() {
	o.BillingPeriodUnit.Set(nil)
}

// UnsetBillingPeriodUnit ensures that no value is present for BillingPeriodUnit, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) UnsetBillingPeriodUnit() {
	o.BillingPeriodUnit.Unset()
}

// GetBillingPeriod returns the BillingPeriod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) GetBillingPeriod() float32 {
	if o == nil || IsNil(o.BillingPeriod.Get()) {
		var ret float32
		return ret
	}
	return *o.BillingPeriod.Get()
}

// GetBillingPeriodOk returns a tuple with the BillingPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) GetBillingPeriodOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingPeriod.Get(), o.BillingPeriod.IsSet()
}

// HasBillingPeriod returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) HasBillingPeriod() bool {
	if o != nil && o.BillingPeriod.IsSet() {
		return true
	}

	return false
}

// SetBillingPeriod gets a reference to the given NullableFloat32 and assigns it to the BillingPeriod field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) SetBillingPeriod(v float32) {
	o.BillingPeriod.Set(&v)
}
// SetBillingPeriodNil sets the value for BillingPeriod to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) SetBillingPeriodNil() {
	o.BillingPeriod.Set(nil)
}

// UnsetBillingPeriod ensures that no value is present for BillingPeriod, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) UnsetBillingPeriod() {
	o.BillingPeriod.Unset()
}

func (o PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BillingPeriodUnit.IsSet() {
		toSerialize["billingPeriodUnit"] = o.BillingPeriodUnit.Get()
	}
	if o.BillingPeriod.IsSet() {
		toSerialize["billingPeriod"] = o.BillingPeriod.Get()
	}
	return toSerialize, nil
}

type NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod struct {
	value *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod
	isSet bool
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) Get() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod {
	return v.value
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) Set(val *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod(val *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod {
	return &NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod{value: val, isSet: true}
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


