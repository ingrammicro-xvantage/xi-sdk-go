/*
XI Sdk Resellers

For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the PriceAndAvailabilityResponseInnerServiceFeesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceAndAvailabilityResponseInnerServiceFeesInner{}

// PriceAndAvailabilityResponseInnerServiceFeesInner struct for PriceAndAvailabilityResponseInnerServiceFeesInner
type PriceAndAvailabilityResponseInnerServiceFeesInner struct {
	// Condition Type of the service fees.
	ConditionType *string `json:"conditionType,omitempty"`
	// Description of the service fees.
	Description *string `json:"description,omitempty"`
	// Amount of the service fees.
	Amount *float32 `json:"amount,omitempty"`
	// End Date of the service fees.
	EndDate *string `json:"endDate,omitempty"`
	// Currency Code of the service fees.
	CurrencyCode *string `json:"currencyCode,omitempty"`
}

// NewPriceAndAvailabilityResponseInnerServiceFeesInner instantiates a new PriceAndAvailabilityResponseInnerServiceFeesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceAndAvailabilityResponseInnerServiceFeesInner() *PriceAndAvailabilityResponseInnerServiceFeesInner {
	this := PriceAndAvailabilityResponseInnerServiceFeesInner{}
	return &this
}

// NewPriceAndAvailabilityResponseInnerServiceFeesInnerWithDefaults instantiates a new PriceAndAvailabilityResponseInnerServiceFeesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceAndAvailabilityResponseInnerServiceFeesInnerWithDefaults() *PriceAndAvailabilityResponseInnerServiceFeesInner {
	this := PriceAndAvailabilityResponseInnerServiceFeesInner{}
	return &this
}

// GetConditionType returns the ConditionType field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) GetConditionType() string {
	if o == nil || IsNil(o.ConditionType) {
		var ret string
		return ret
	}
	return *o.ConditionType
}

// GetConditionTypeOk returns a tuple with the ConditionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) GetConditionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConditionType) {
		return nil, false
	}
	return o.ConditionType, true
}

// HasConditionType returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) HasConditionType() bool {
	if o != nil && !IsNil(o.ConditionType) {
		return true
	}

	return false
}

// SetConditionType gets a reference to the given string and assigns it to the ConditionType field.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) SetConditionType(v string) {
	o.ConditionType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) SetDescription(v string) {
	o.Description = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) SetAmount(v float32) {
	o.Amount = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) SetEndDate(v string) {
	o.EndDate = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *PriceAndAvailabilityResponseInnerServiceFeesInner) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

func (o PriceAndAvailabilityResponseInnerServiceFeesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceAndAvailabilityResponseInnerServiceFeesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConditionType) {
		toSerialize["conditionType"] = o.ConditionType
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	return toSerialize, nil
}

type NullablePriceAndAvailabilityResponseInnerServiceFeesInner struct {
	value *PriceAndAvailabilityResponseInnerServiceFeesInner
	isSet bool
}

func (v NullablePriceAndAvailabilityResponseInnerServiceFeesInner) Get() *PriceAndAvailabilityResponseInnerServiceFeesInner {
	return v.value
}

func (v *NullablePriceAndAvailabilityResponseInnerServiceFeesInner) Set(val *PriceAndAvailabilityResponseInnerServiceFeesInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceAndAvailabilityResponseInnerServiceFeesInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceAndAvailabilityResponseInnerServiceFeesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceAndAvailabilityResponseInnerServiceFeesInner(val *PriceAndAvailabilityResponseInnerServiceFeesInner) *NullablePriceAndAvailabilityResponseInnerServiceFeesInner {
	return &NullablePriceAndAvailabilityResponseInnerServiceFeesInner{value: val, isSet: true}
}

func (v NullablePriceAndAvailabilityResponseInnerServiceFeesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceAndAvailabilityResponseInnerServiceFeesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


