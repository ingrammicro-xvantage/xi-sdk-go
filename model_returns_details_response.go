/*
Reseller API

For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

API version: 6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi.sdk.resellers

import (
	"encoding/json"
)

// checks if the ReturnsDetailsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReturnsDetailsResponse{}

// ReturnsDetailsResponse struct for ReturnsDetailsResponse
type ReturnsDetailsResponse struct {
	// The type of the details. Return or Claim.
	TypeOfDetails *string `json:"typeOfDetails,omitempty"`
	// The rmaClaimId claim id.
	RmaClaimId *string `json:"rmaClaimId,omitempty"`
	// A unique return request number.
	CaseRequestNumber *string `json:"caseRequestNumber,omitempty"`
	// The date on which the return request was created.
	CreatedOn *string `json:"createdOn,omitempty"`
	// The reason for the return.
	ReturnReason *string `json:"returnReason,omitempty"`
	// The reference number for the return.
	ReferenceNumber *string `json:"referenceNumber,omitempty"`
	// The status of the request.
	Status *string `json:"status,omitempty"`
	// The address of the return warehouse.
	ReturnWarehouseAddress *string `json:"returnWarehouseAddress,omitempty"`
	Products []ReturnsDetailsResponseProductsInner `json:"products,omitempty"`
	// Sub total amount of the return request.
	SubTotal *float32 `json:"subTotal,omitempty"`
	// The tax amount of the return request.
	Tax *float32 `json:"tax,omitempty"`
	// The additional fees for the return request.
	AdditionalFees *float32 `json:"additionalFees,omitempty"`
	// The total estimated amount for the return request.
	EstimatedTotal *float32 `json:"estimatedTotal,omitempty"`
}

// NewReturnsDetailsResponse instantiates a new ReturnsDetailsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnsDetailsResponse() *ReturnsDetailsResponse {
	this := ReturnsDetailsResponse{}
	return &this
}

// NewReturnsDetailsResponseWithDefaults instantiates a new ReturnsDetailsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnsDetailsResponseWithDefaults() *ReturnsDetailsResponse {
	this := ReturnsDetailsResponse{}
	return &this
}

// GetTypeOfDetails returns the TypeOfDetails field value if set, zero value otherwise.
func (o *ReturnsDetailsResponse) GetTypeOfDetails() string {
	if o == nil || IsNil(o.TypeOfDetails) {
		var ret string
		return ret
	}
	return *o.TypeOfDetails
}

// GetTypeOfDetailsOk returns a tuple with the TypeOfDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponse) GetTypeOfDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.TypeOfDetails) {
		return nil, false
	}
	return o.TypeOfDetails, true
}

// HasTypeOfDetails returns a boolean if a field has been set.
func (o *ReturnsDetailsResponse) HasTypeOfDetails() bool {
	if o != nil && !IsNil(o.TypeOfDetails) {
		return true
	}

	return false
}

// SetTypeOfDetails gets a reference to the given string and assigns it to the TypeOfDetails field.
func (o *ReturnsDetailsResponse) SetTypeOfDetails(v string) {
	o.TypeOfDetails = &v
}

// GetRmaClaimId returns the RmaClaimId field value if set, zero value otherwise.
func (o *ReturnsDetailsResponse) GetRmaClaimId() string {
	if o == nil || IsNil(o.RmaClaimId) {
		var ret string
		return ret
	}
	return *o.RmaClaimId
}

// GetRmaClaimIdOk returns a tuple with the RmaClaimId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponse) GetRmaClaimIdOk() (*string, bool) {
	if o == nil || IsNil(o.RmaClaimId) {
		return nil, false
	}
	return o.RmaClaimId, true
}

// HasRmaClaimId returns a boolean if a field has been set.
func (o *ReturnsDetailsResponse) HasRmaClaimId() bool {
	if o != nil && !IsNil(o.RmaClaimId) {
		return true
	}

	return false
}

// SetRmaClaimId gets a reference to the given string and assigns it to the RmaClaimId field.
func (o *ReturnsDetailsResponse) SetRmaClaimId(v string) {
	o.RmaClaimId = &v
}

// GetCaseRequestNumber returns the CaseRequestNumber field value if set, zero value otherwise.
func (o *ReturnsDetailsResponse) GetCaseRequestNumber() string {
	if o == nil || IsNil(o.CaseRequestNumber) {
		var ret string
		return ret
	}
	return *o.CaseRequestNumber
}

// GetCaseRequestNumberOk returns a tuple with the CaseRequestNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponse) GetCaseRequestNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CaseRequestNumber) {
		return nil, false
	}
	return o.CaseRequestNumber, true
}

// HasCaseRequestNumber returns a boolean if a field has been set.
func (o *ReturnsDetailsResponse) HasCaseRequestNumber() bool {
	if o != nil && !IsNil(o.CaseRequestNumber) {
		return true
	}

	return false
}

// SetCaseRequestNumber gets a reference to the given string and assigns it to the CaseRequestNumber field.
func (o *ReturnsDetailsResponse) SetCaseRequestNumber(v string) {
	o.CaseRequestNumber = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *ReturnsDetailsResponse) GetCreatedOn() string {
	if o == nil || IsNil(o.CreatedOn) {
		var ret string
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponse) GetCreatedOnOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *ReturnsDetailsResponse) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given string and assigns it to the CreatedOn field.
func (o *ReturnsDetailsResponse) SetCreatedOn(v string) {
	o.CreatedOn = &v
}

// GetReturnReason returns the ReturnReason field value if set, zero value otherwise.
func (o *ReturnsDetailsResponse) GetReturnReason() string {
	if o == nil || IsNil(o.ReturnReason) {
		var ret string
		return ret
	}
	return *o.ReturnReason
}

// GetReturnReasonOk returns a tuple with the ReturnReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponse) GetReturnReasonOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnReason) {
		return nil, false
	}
	return o.ReturnReason, true
}

// HasReturnReason returns a boolean if a field has been set.
func (o *ReturnsDetailsResponse) HasReturnReason() bool {
	if o != nil && !IsNil(o.ReturnReason) {
		return true
	}

	return false
}

// SetReturnReason gets a reference to the given string and assigns it to the ReturnReason field.
func (o *ReturnsDetailsResponse) SetReturnReason(v string) {
	o.ReturnReason = &v
}

// GetReferenceNumber returns the ReferenceNumber field value if set, zero value otherwise.
func (o *ReturnsDetailsResponse) GetReferenceNumber() string {
	if o == nil || IsNil(o.ReferenceNumber) {
		var ret string
		return ret
	}
	return *o.ReferenceNumber
}

// GetReferenceNumberOk returns a tuple with the ReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponse) GetReferenceNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceNumber) {
		return nil, false
	}
	return o.ReferenceNumber, true
}

// HasReferenceNumber returns a boolean if a field has been set.
func (o *ReturnsDetailsResponse) HasReferenceNumber() bool {
	if o != nil && !IsNil(o.ReferenceNumber) {
		return true
	}

	return false
}

// SetReferenceNumber gets a reference to the given string and assigns it to the ReferenceNumber field.
func (o *ReturnsDetailsResponse) SetReferenceNumber(v string) {
	o.ReferenceNumber = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ReturnsDetailsResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ReturnsDetailsResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ReturnsDetailsResponse) SetStatus(v string) {
	o.Status = &v
}

// GetReturnWarehouseAddress returns the ReturnWarehouseAddress field value if set, zero value otherwise.
func (o *ReturnsDetailsResponse) GetReturnWarehouseAddress() string {
	if o == nil || IsNil(o.ReturnWarehouseAddress) {
		var ret string
		return ret
	}
	return *o.ReturnWarehouseAddress
}

// GetReturnWarehouseAddressOk returns a tuple with the ReturnWarehouseAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponse) GetReturnWarehouseAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnWarehouseAddress) {
		return nil, false
	}
	return o.ReturnWarehouseAddress, true
}

// HasReturnWarehouseAddress returns a boolean if a field has been set.
func (o *ReturnsDetailsResponse) HasReturnWarehouseAddress() bool {
	if o != nil && !IsNil(o.ReturnWarehouseAddress) {
		return true
	}

	return false
}

// SetReturnWarehouseAddress gets a reference to the given string and assigns it to the ReturnWarehouseAddress field.
func (o *ReturnsDetailsResponse) SetReturnWarehouseAddress(v string) {
	o.ReturnWarehouseAddress = &v
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *ReturnsDetailsResponse) GetProducts() []ReturnsDetailsResponseProductsInner {
	if o == nil || IsNil(o.Products) {
		var ret []ReturnsDetailsResponseProductsInner
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponse) GetProductsOk() ([]ReturnsDetailsResponseProductsInner, bool) {
	if o == nil || IsNil(o.Products) {
		return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *ReturnsDetailsResponse) HasProducts() bool {
	if o != nil && !IsNil(o.Products) {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []ReturnsDetailsResponseProductsInner and assigns it to the Products field.
func (o *ReturnsDetailsResponse) SetProducts(v []ReturnsDetailsResponseProductsInner) {
	o.Products = v
}

// GetSubTotal returns the SubTotal field value if set, zero value otherwise.
func (o *ReturnsDetailsResponse) GetSubTotal() float32 {
	if o == nil || IsNil(o.SubTotal) {
		var ret float32
		return ret
	}
	return *o.SubTotal
}

// GetSubTotalOk returns a tuple with the SubTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponse) GetSubTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.SubTotal) {
		return nil, false
	}
	return o.SubTotal, true
}

// HasSubTotal returns a boolean if a field has been set.
func (o *ReturnsDetailsResponse) HasSubTotal() bool {
	if o != nil && !IsNil(o.SubTotal) {
		return true
	}

	return false
}

// SetSubTotal gets a reference to the given float32 and assigns it to the SubTotal field.
func (o *ReturnsDetailsResponse) SetSubTotal(v float32) {
	o.SubTotal = &v
}

// GetTax returns the Tax field value if set, zero value otherwise.
func (o *ReturnsDetailsResponse) GetTax() float32 {
	if o == nil || IsNil(o.Tax) {
		var ret float32
		return ret
	}
	return *o.Tax
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponse) GetTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.Tax) {
		return nil, false
	}
	return o.Tax, true
}

// HasTax returns a boolean if a field has been set.
func (o *ReturnsDetailsResponse) HasTax() bool {
	if o != nil && !IsNil(o.Tax) {
		return true
	}

	return false
}

// SetTax gets a reference to the given float32 and assigns it to the Tax field.
func (o *ReturnsDetailsResponse) SetTax(v float32) {
	o.Tax = &v
}

// GetAdditionalFees returns the AdditionalFees field value if set, zero value otherwise.
func (o *ReturnsDetailsResponse) GetAdditionalFees() float32 {
	if o == nil || IsNil(o.AdditionalFees) {
		var ret float32
		return ret
	}
	return *o.AdditionalFees
}

// GetAdditionalFeesOk returns a tuple with the AdditionalFees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponse) GetAdditionalFeesOk() (*float32, bool) {
	if o == nil || IsNil(o.AdditionalFees) {
		return nil, false
	}
	return o.AdditionalFees, true
}

// HasAdditionalFees returns a boolean if a field has been set.
func (o *ReturnsDetailsResponse) HasAdditionalFees() bool {
	if o != nil && !IsNil(o.AdditionalFees) {
		return true
	}

	return false
}

// SetAdditionalFees gets a reference to the given float32 and assigns it to the AdditionalFees field.
func (o *ReturnsDetailsResponse) SetAdditionalFees(v float32) {
	o.AdditionalFees = &v
}

// GetEstimatedTotal returns the EstimatedTotal field value if set, zero value otherwise.
func (o *ReturnsDetailsResponse) GetEstimatedTotal() float32 {
	if o == nil || IsNil(o.EstimatedTotal) {
		var ret float32
		return ret
	}
	return *o.EstimatedTotal
}

// GetEstimatedTotalOk returns a tuple with the EstimatedTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponse) GetEstimatedTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedTotal) {
		return nil, false
	}
	return o.EstimatedTotal, true
}

// HasEstimatedTotal returns a boolean if a field has been set.
func (o *ReturnsDetailsResponse) HasEstimatedTotal() bool {
	if o != nil && !IsNil(o.EstimatedTotal) {
		return true
	}

	return false
}

// SetEstimatedTotal gets a reference to the given float32 and assigns it to the EstimatedTotal field.
func (o *ReturnsDetailsResponse) SetEstimatedTotal(v float32) {
	o.EstimatedTotal = &v
}

func (o ReturnsDetailsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReturnsDetailsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TypeOfDetails) {
		toSerialize["typeOfDetails"] = o.TypeOfDetails
	}
	if !IsNil(o.RmaClaimId) {
		toSerialize["rmaClaimId"] = o.RmaClaimId
	}
	if !IsNil(o.CaseRequestNumber) {
		toSerialize["caseRequestNumber"] = o.CaseRequestNumber
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if !IsNil(o.ReturnReason) {
		toSerialize["returnReason"] = o.ReturnReason
	}
	if !IsNil(o.ReferenceNumber) {
		toSerialize["referenceNumber"] = o.ReferenceNumber
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ReturnWarehouseAddress) {
		toSerialize["returnWarehouseAddress"] = o.ReturnWarehouseAddress
	}
	if !IsNil(o.Products) {
		toSerialize["products"] = o.Products
	}
	if !IsNil(o.SubTotal) {
		toSerialize["subTotal"] = o.SubTotal
	}
	if !IsNil(o.Tax) {
		toSerialize["tax"] = o.Tax
	}
	if !IsNil(o.AdditionalFees) {
		toSerialize["additionalFees"] = o.AdditionalFees
	}
	if !IsNil(o.EstimatedTotal) {
		toSerialize["estimatedTotal"] = o.EstimatedTotal
	}
	return toSerialize, nil
}

type NullableReturnsDetailsResponse struct {
	value *ReturnsDetailsResponse
	isSet bool
}

func (v NullableReturnsDetailsResponse) Get() *ReturnsDetailsResponse {
	return v.value
}

func (v *NullableReturnsDetailsResponse) Set(val *ReturnsDetailsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnsDetailsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnsDetailsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnsDetailsResponse(val *ReturnsDetailsResponse) *NullableReturnsDetailsResponse {
	return &NullableReturnsDetailsResponse{value: val, isSet: true}
}

func (v NullableReturnsDetailsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnsDetailsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


