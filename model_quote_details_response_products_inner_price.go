/*
XI Sdk Resellers

For Resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the QuoteDetailsResponseProductsInnerPrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteDetailsResponseProductsInnerPrice{}

// QuoteDetailsResponseProductsInnerPrice struct for QuoteDetailsResponseProductsInnerPrice
type QuoteDetailsResponseProductsInnerPrice struct {
	// Ingram Micro quoted price specific to the reseller and quote.
	QuotePrice NullableFloat32 `json:"quotePrice,omitempty"`
	// Manufacturer Suggested Retail Price
	Msrp NullableFloat32 `json:"msrp,omitempty"`
	// Extended MSRP - Manufacturer Suggested Retail Price X Quantity
	ExtendedMsrp NullableFloat32 `json:"extendedMsrp,omitempty"`
	// Extended reseller quoted price (cost to reseller) X Quantity
	ExtendedQuotePrice NullableFloat32 `json:"extendedQuotePrice,omitempty"`
	RemainingQuantityExtendedMsrp NullableFloat32 `json:"remainingQuantityExtendedMsrp,omitempty"`
	RemainingQuantityExtendedQuotePrice NullableFloat32 `json:"remainingQuantityExtendedQuotePrice,omitempty"`
	// Discount off list percentage extended
	DiscountOffList NullableString `json:"discountOffList,omitempty"`
	Type *string `json:"type,omitempty"`
	RecurringPriceModel *string `json:"recurringPriceModel,omitempty"`
	UnitOfMeasure *string `json:"unitOfMeasure,omitempty"`
	Tax NullableFloat32 `json:"tax,omitempty"`
	Extrafees NullableFloat32 `json:"extrafees,omitempty"`
	ExtraFeesDetails []QuoteDetailsResponseProductsInnerPriceExtraFeesDetailsInner `json:"extraFeesDetails,omitempty"`
	Discounts []QuoteDetailsResponseProductsInnerPriceDiscountsInner `json:"discounts,omitempty"`
}

// NewQuoteDetailsResponseProductsInnerPrice instantiates a new QuoteDetailsResponseProductsInnerPrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteDetailsResponseProductsInnerPrice() *QuoteDetailsResponseProductsInnerPrice {
	this := QuoteDetailsResponseProductsInnerPrice{}
	return &this
}

// NewQuoteDetailsResponseProductsInnerPriceWithDefaults instantiates a new QuoteDetailsResponseProductsInnerPrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteDetailsResponseProductsInnerPriceWithDefaults() *QuoteDetailsResponseProductsInnerPrice {
	this := QuoteDetailsResponseProductsInnerPrice{}
	return &this
}

// GetQuotePrice returns the QuotePrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteDetailsResponseProductsInnerPrice) GetQuotePrice() float32 {
	if o == nil || IsNil(o.QuotePrice.Get()) {
		var ret float32
		return ret
	}
	return *o.QuotePrice.Get()
}

// GetQuotePriceOk returns a tuple with the QuotePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteDetailsResponseProductsInnerPrice) GetQuotePriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.QuotePrice.Get(), o.QuotePrice.IsSet()
}

// HasQuotePrice returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasQuotePrice() bool {
	if o != nil && o.QuotePrice.IsSet() {
		return true
	}

	return false
}

// SetQuotePrice gets a reference to the given NullableFloat32 and assigns it to the QuotePrice field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetQuotePrice(v float32) {
	o.QuotePrice.Set(&v)
}
// SetQuotePriceNil sets the value for QuotePrice to be an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) SetQuotePriceNil() {
	o.QuotePrice.Set(nil)
}

// UnsetQuotePrice ensures that no value is present for QuotePrice, not even an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) UnsetQuotePrice() {
	o.QuotePrice.Unset()
}

// GetMsrp returns the Msrp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteDetailsResponseProductsInnerPrice) GetMsrp() float32 {
	if o == nil || IsNil(o.Msrp.Get()) {
		var ret float32
		return ret
	}
	return *o.Msrp.Get()
}

// GetMsrpOk returns a tuple with the Msrp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteDetailsResponseProductsInnerPrice) GetMsrpOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Msrp.Get(), o.Msrp.IsSet()
}

// HasMsrp returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasMsrp() bool {
	if o != nil && o.Msrp.IsSet() {
		return true
	}

	return false
}

// SetMsrp gets a reference to the given NullableFloat32 and assigns it to the Msrp field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetMsrp(v float32) {
	o.Msrp.Set(&v)
}
// SetMsrpNil sets the value for Msrp to be an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) SetMsrpNil() {
	o.Msrp.Set(nil)
}

// UnsetMsrp ensures that no value is present for Msrp, not even an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) UnsetMsrp() {
	o.Msrp.Unset()
}

// GetExtendedMsrp returns the ExtendedMsrp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteDetailsResponseProductsInnerPrice) GetExtendedMsrp() float32 {
	if o == nil || IsNil(o.ExtendedMsrp.Get()) {
		var ret float32
		return ret
	}
	return *o.ExtendedMsrp.Get()
}

// GetExtendedMsrpOk returns a tuple with the ExtendedMsrp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteDetailsResponseProductsInnerPrice) GetExtendedMsrpOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtendedMsrp.Get(), o.ExtendedMsrp.IsSet()
}

// HasExtendedMsrp returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasExtendedMsrp() bool {
	if o != nil && o.ExtendedMsrp.IsSet() {
		return true
	}

	return false
}

// SetExtendedMsrp gets a reference to the given NullableFloat32 and assigns it to the ExtendedMsrp field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetExtendedMsrp(v float32) {
	o.ExtendedMsrp.Set(&v)
}
// SetExtendedMsrpNil sets the value for ExtendedMsrp to be an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) SetExtendedMsrpNil() {
	o.ExtendedMsrp.Set(nil)
}

// UnsetExtendedMsrp ensures that no value is present for ExtendedMsrp, not even an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) UnsetExtendedMsrp() {
	o.ExtendedMsrp.Unset()
}

// GetExtendedQuotePrice returns the ExtendedQuotePrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteDetailsResponseProductsInnerPrice) GetExtendedQuotePrice() float32 {
	if o == nil || IsNil(o.ExtendedQuotePrice.Get()) {
		var ret float32
		return ret
	}
	return *o.ExtendedQuotePrice.Get()
}

// GetExtendedQuotePriceOk returns a tuple with the ExtendedQuotePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteDetailsResponseProductsInnerPrice) GetExtendedQuotePriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtendedQuotePrice.Get(), o.ExtendedQuotePrice.IsSet()
}

// HasExtendedQuotePrice returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasExtendedQuotePrice() bool {
	if o != nil && o.ExtendedQuotePrice.IsSet() {
		return true
	}

	return false
}

// SetExtendedQuotePrice gets a reference to the given NullableFloat32 and assigns it to the ExtendedQuotePrice field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetExtendedQuotePrice(v float32) {
	o.ExtendedQuotePrice.Set(&v)
}
// SetExtendedQuotePriceNil sets the value for ExtendedQuotePrice to be an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) SetExtendedQuotePriceNil() {
	o.ExtendedQuotePrice.Set(nil)
}

// UnsetExtendedQuotePrice ensures that no value is present for ExtendedQuotePrice, not even an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) UnsetExtendedQuotePrice() {
	o.ExtendedQuotePrice.Unset()
}

// GetRemainingQuantityExtendedMsrp returns the RemainingQuantityExtendedMsrp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteDetailsResponseProductsInnerPrice) GetRemainingQuantityExtendedMsrp() float32 {
	if o == nil || IsNil(o.RemainingQuantityExtendedMsrp.Get()) {
		var ret float32
		return ret
	}
	return *o.RemainingQuantityExtendedMsrp.Get()
}

// GetRemainingQuantityExtendedMsrpOk returns a tuple with the RemainingQuantityExtendedMsrp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteDetailsResponseProductsInnerPrice) GetRemainingQuantityExtendedMsrpOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemainingQuantityExtendedMsrp.Get(), o.RemainingQuantityExtendedMsrp.IsSet()
}

// HasRemainingQuantityExtendedMsrp returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasRemainingQuantityExtendedMsrp() bool {
	if o != nil && o.RemainingQuantityExtendedMsrp.IsSet() {
		return true
	}

	return false
}

// SetRemainingQuantityExtendedMsrp gets a reference to the given NullableFloat32 and assigns it to the RemainingQuantityExtendedMsrp field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetRemainingQuantityExtendedMsrp(v float32) {
	o.RemainingQuantityExtendedMsrp.Set(&v)
}
// SetRemainingQuantityExtendedMsrpNil sets the value for RemainingQuantityExtendedMsrp to be an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) SetRemainingQuantityExtendedMsrpNil() {
	o.RemainingQuantityExtendedMsrp.Set(nil)
}

// UnsetRemainingQuantityExtendedMsrp ensures that no value is present for RemainingQuantityExtendedMsrp, not even an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) UnsetRemainingQuantityExtendedMsrp() {
	o.RemainingQuantityExtendedMsrp.Unset()
}

// GetRemainingQuantityExtendedQuotePrice returns the RemainingQuantityExtendedQuotePrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteDetailsResponseProductsInnerPrice) GetRemainingQuantityExtendedQuotePrice() float32 {
	if o == nil || IsNil(o.RemainingQuantityExtendedQuotePrice.Get()) {
		var ret float32
		return ret
	}
	return *o.RemainingQuantityExtendedQuotePrice.Get()
}

// GetRemainingQuantityExtendedQuotePriceOk returns a tuple with the RemainingQuantityExtendedQuotePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteDetailsResponseProductsInnerPrice) GetRemainingQuantityExtendedQuotePriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemainingQuantityExtendedQuotePrice.Get(), o.RemainingQuantityExtendedQuotePrice.IsSet()
}

// HasRemainingQuantityExtendedQuotePrice returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasRemainingQuantityExtendedQuotePrice() bool {
	if o != nil && o.RemainingQuantityExtendedQuotePrice.IsSet() {
		return true
	}

	return false
}

// SetRemainingQuantityExtendedQuotePrice gets a reference to the given NullableFloat32 and assigns it to the RemainingQuantityExtendedQuotePrice field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetRemainingQuantityExtendedQuotePrice(v float32) {
	o.RemainingQuantityExtendedQuotePrice.Set(&v)
}
// SetRemainingQuantityExtendedQuotePriceNil sets the value for RemainingQuantityExtendedQuotePrice to be an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) SetRemainingQuantityExtendedQuotePriceNil() {
	o.RemainingQuantityExtendedQuotePrice.Set(nil)
}

// UnsetRemainingQuantityExtendedQuotePrice ensures that no value is present for RemainingQuantityExtendedQuotePrice, not even an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) UnsetRemainingQuantityExtendedQuotePrice() {
	o.RemainingQuantityExtendedQuotePrice.Unset()
}

// GetDiscountOffList returns the DiscountOffList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteDetailsResponseProductsInnerPrice) GetDiscountOffList() string {
	if o == nil || IsNil(o.DiscountOffList.Get()) {
		var ret string
		return ret
	}
	return *o.DiscountOffList.Get()
}

// GetDiscountOffListOk returns a tuple with the DiscountOffList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteDetailsResponseProductsInnerPrice) GetDiscountOffListOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiscountOffList.Get(), o.DiscountOffList.IsSet()
}

// HasDiscountOffList returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasDiscountOffList() bool {
	if o != nil && o.DiscountOffList.IsSet() {
		return true
	}

	return false
}

// SetDiscountOffList gets a reference to the given NullableString and assigns it to the DiscountOffList field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetDiscountOffList(v string) {
	o.DiscountOffList.Set(&v)
}
// SetDiscountOffListNil sets the value for DiscountOffList to be an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) SetDiscountOffListNil() {
	o.DiscountOffList.Set(nil)
}

// UnsetDiscountOffList ensures that no value is present for DiscountOffList, not even an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) UnsetDiscountOffList() {
	o.DiscountOffList.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPrice) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetType(v string) {
	o.Type = &v
}

// GetRecurringPriceModel returns the RecurringPriceModel field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPrice) GetRecurringPriceModel() string {
	if o == nil || IsNil(o.RecurringPriceModel) {
		var ret string
		return ret
	}
	return *o.RecurringPriceModel
}

// GetRecurringPriceModelOk returns a tuple with the RecurringPriceModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) GetRecurringPriceModelOk() (*string, bool) {
	if o == nil || IsNil(o.RecurringPriceModel) {
		return nil, false
	}
	return o.RecurringPriceModel, true
}

// HasRecurringPriceModel returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasRecurringPriceModel() bool {
	if o != nil && !IsNil(o.RecurringPriceModel) {
		return true
	}

	return false
}

// SetRecurringPriceModel gets a reference to the given string and assigns it to the RecurringPriceModel field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetRecurringPriceModel(v string) {
	o.RecurringPriceModel = &v
}

// GetUnitOfMeasure returns the UnitOfMeasure field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPrice) GetUnitOfMeasure() string {
	if o == nil || IsNil(o.UnitOfMeasure) {
		var ret string
		return ret
	}
	return *o.UnitOfMeasure
}

// GetUnitOfMeasureOk returns a tuple with the UnitOfMeasure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) GetUnitOfMeasureOk() (*string, bool) {
	if o == nil || IsNil(o.UnitOfMeasure) {
		return nil, false
	}
	return o.UnitOfMeasure, true
}

// HasUnitOfMeasure returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasUnitOfMeasure() bool {
	if o != nil && !IsNil(o.UnitOfMeasure) {
		return true
	}

	return false
}

// SetUnitOfMeasure gets a reference to the given string and assigns it to the UnitOfMeasure field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetUnitOfMeasure(v string) {
	o.UnitOfMeasure = &v
}

// GetTax returns the Tax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteDetailsResponseProductsInnerPrice) GetTax() float32 {
	if o == nil || IsNil(o.Tax.Get()) {
		var ret float32
		return ret
	}
	return *o.Tax.Get()
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteDetailsResponseProductsInnerPrice) GetTaxOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tax.Get(), o.Tax.IsSet()
}

// HasTax returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasTax() bool {
	if o != nil && o.Tax.IsSet() {
		return true
	}

	return false
}

// SetTax gets a reference to the given NullableFloat32 and assigns it to the Tax field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetTax(v float32) {
	o.Tax.Set(&v)
}
// SetTaxNil sets the value for Tax to be an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) SetTaxNil() {
	o.Tax.Set(nil)
}

// UnsetTax ensures that no value is present for Tax, not even an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) UnsetTax() {
	o.Tax.Unset()
}

// GetExtrafees returns the Extrafees field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuoteDetailsResponseProductsInnerPrice) GetExtrafees() float32 {
	if o == nil || IsNil(o.Extrafees.Get()) {
		var ret float32
		return ret
	}
	return *o.Extrafees.Get()
}

// GetExtrafeesOk returns a tuple with the Extrafees field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuoteDetailsResponseProductsInnerPrice) GetExtrafeesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Extrafees.Get(), o.Extrafees.IsSet()
}

// HasExtrafees returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasExtrafees() bool {
	if o != nil && o.Extrafees.IsSet() {
		return true
	}

	return false
}

// SetExtrafees gets a reference to the given NullableFloat32 and assigns it to the Extrafees field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetExtrafees(v float32) {
	o.Extrafees.Set(&v)
}
// SetExtrafeesNil sets the value for Extrafees to be an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) SetExtrafeesNil() {
	o.Extrafees.Set(nil)
}

// UnsetExtrafees ensures that no value is present for Extrafees, not even an explicit nil
func (o *QuoteDetailsResponseProductsInnerPrice) UnsetExtrafees() {
	o.Extrafees.Unset()
}

// GetExtraFeesDetails returns the ExtraFeesDetails field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPrice) GetExtraFeesDetails() []QuoteDetailsResponseProductsInnerPriceExtraFeesDetailsInner {
	if o == nil || IsNil(o.ExtraFeesDetails) {
		var ret []QuoteDetailsResponseProductsInnerPriceExtraFeesDetailsInner
		return ret
	}
	return o.ExtraFeesDetails
}

// GetExtraFeesDetailsOk returns a tuple with the ExtraFeesDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) GetExtraFeesDetailsOk() ([]QuoteDetailsResponseProductsInnerPriceExtraFeesDetailsInner, bool) {
	if o == nil || IsNil(o.ExtraFeesDetails) {
		return nil, false
	}
	return o.ExtraFeesDetails, true
}

// HasExtraFeesDetails returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasExtraFeesDetails() bool {
	if o != nil && !IsNil(o.ExtraFeesDetails) {
		return true
	}

	return false
}

// SetExtraFeesDetails gets a reference to the given []QuoteDetailsResponseProductsInnerPriceExtraFeesDetailsInner and assigns it to the ExtraFeesDetails field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetExtraFeesDetails(v []QuoteDetailsResponseProductsInnerPriceExtraFeesDetailsInner) {
	o.ExtraFeesDetails = v
}

// GetDiscounts returns the Discounts field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPrice) GetDiscounts() []QuoteDetailsResponseProductsInnerPriceDiscountsInner {
	if o == nil || IsNil(o.Discounts) {
		var ret []QuoteDetailsResponseProductsInnerPriceDiscountsInner
		return ret
	}
	return o.Discounts
}

// GetDiscountsOk returns a tuple with the Discounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) GetDiscountsOk() ([]QuoteDetailsResponseProductsInnerPriceDiscountsInner, bool) {
	if o == nil || IsNil(o.Discounts) {
		return nil, false
	}
	return o.Discounts, true
}

// HasDiscounts returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPrice) HasDiscounts() bool {
	if o != nil && !IsNil(o.Discounts) {
		return true
	}

	return false
}

// SetDiscounts gets a reference to the given []QuoteDetailsResponseProductsInnerPriceDiscountsInner and assigns it to the Discounts field.
func (o *QuoteDetailsResponseProductsInnerPrice) SetDiscounts(v []QuoteDetailsResponseProductsInnerPriceDiscountsInner) {
	o.Discounts = v
}

func (o QuoteDetailsResponseProductsInnerPrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteDetailsResponseProductsInnerPrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.QuotePrice.IsSet() {
		toSerialize["quotePrice"] = o.QuotePrice.Get()
	}
	if o.Msrp.IsSet() {
		toSerialize["msrp"] = o.Msrp.Get()
	}
	if o.ExtendedMsrp.IsSet() {
		toSerialize["extendedMsrp"] = o.ExtendedMsrp.Get()
	}
	if o.ExtendedQuotePrice.IsSet() {
		toSerialize["extendedQuotePrice"] = o.ExtendedQuotePrice.Get()
	}
	if o.RemainingQuantityExtendedMsrp.IsSet() {
		toSerialize["remainingQuantityExtendedMsrp"] = o.RemainingQuantityExtendedMsrp.Get()
	}
	if o.RemainingQuantityExtendedQuotePrice.IsSet() {
		toSerialize["remainingQuantityExtendedQuotePrice"] = o.RemainingQuantityExtendedQuotePrice.Get()
	}
	if o.DiscountOffList.IsSet() {
		toSerialize["discountOffList"] = o.DiscountOffList.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.RecurringPriceModel) {
		toSerialize["recurringPriceModel"] = o.RecurringPriceModel
	}
	if !IsNil(o.UnitOfMeasure) {
		toSerialize["unitOfMeasure"] = o.UnitOfMeasure
	}
	if o.Tax.IsSet() {
		toSerialize["tax"] = o.Tax.Get()
	}
	if o.Extrafees.IsSet() {
		toSerialize["extrafees"] = o.Extrafees.Get()
	}
	if !IsNil(o.ExtraFeesDetails) {
		toSerialize["extraFeesDetails"] = o.ExtraFeesDetails
	}
	if !IsNil(o.Discounts) {
		toSerialize["discounts"] = o.Discounts
	}
	return toSerialize, nil
}

type NullableQuoteDetailsResponseProductsInnerPrice struct {
	value *QuoteDetailsResponseProductsInnerPrice
	isSet bool
}

func (v NullableQuoteDetailsResponseProductsInnerPrice) Get() *QuoteDetailsResponseProductsInnerPrice {
	return v.value
}

func (v *NullableQuoteDetailsResponseProductsInnerPrice) Set(val *QuoteDetailsResponseProductsInnerPrice) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteDetailsResponseProductsInnerPrice) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteDetailsResponseProductsInnerPrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteDetailsResponseProductsInnerPrice(val *QuoteDetailsResponseProductsInnerPrice) *NullableQuoteDetailsResponseProductsInnerPrice {
	return &NullableQuoteDetailsResponseProductsInnerPrice{value: val, isSet: true}
}

func (v NullableQuoteDetailsResponseProductsInnerPrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteDetailsResponseProductsInnerPrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


