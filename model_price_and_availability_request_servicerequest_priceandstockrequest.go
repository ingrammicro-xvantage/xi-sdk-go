/*
Reseller API

For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

API version: 6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the PriceAndAvailabilityRequestServicerequestPriceandstockrequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceAndAvailabilityRequestServicerequestPriceandstockrequest{}

// PriceAndAvailabilityRequestServicerequestPriceandstockrequest struct for PriceAndAvailabilityRequestServicerequestPriceandstockrequest
type PriceAndAvailabilityRequestServicerequestPriceandstockrequest struct {
	// True/false to show the availability of individual warehouses
	Showwarehouseavailability *string `json:"showwarehouseavailability,omitempty"`
	// Y/N to show extra availability flag
	Extravailabilityflag *string `json:"extravailabilityflag,omitempty"`
	// Flag to indicate if the price and stock information is required for all Ingram Micro systems.
	Includeallsystems *bool `json:"includeallsystems,omitempty"`
	Item []PriceAndAvailabilityRequestServicerequestPriceandstockrequestItemInner `json:"item,omitempty"`
}

// NewPriceAndAvailabilityRequestServicerequestPriceandstockrequest instantiates a new PriceAndAvailabilityRequestServicerequestPriceandstockrequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceAndAvailabilityRequestServicerequestPriceandstockrequest() *PriceAndAvailabilityRequestServicerequestPriceandstockrequest {
	this := PriceAndAvailabilityRequestServicerequestPriceandstockrequest{}
	return &this
}

// NewPriceAndAvailabilityRequestServicerequestPriceandstockrequestWithDefaults instantiates a new PriceAndAvailabilityRequestServicerequestPriceandstockrequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceAndAvailabilityRequestServicerequestPriceandstockrequestWithDefaults() *PriceAndAvailabilityRequestServicerequestPriceandstockrequest {
	this := PriceAndAvailabilityRequestServicerequestPriceandstockrequest{}
	return &this
}

// GetShowwarehouseavailability returns the Showwarehouseavailability field value if set, zero value otherwise.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) GetShowwarehouseavailability() string {
	if o == nil || IsNil(o.Showwarehouseavailability) {
		var ret string
		return ret
	}
	return *o.Showwarehouseavailability
}

// GetShowwarehouseavailabilityOk returns a tuple with the Showwarehouseavailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) GetShowwarehouseavailabilityOk() (*string, bool) {
	if o == nil || IsNil(o.Showwarehouseavailability) {
		return nil, false
	}
	return o.Showwarehouseavailability, true
}

// HasShowwarehouseavailability returns a boolean if a field has been set.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) HasShowwarehouseavailability() bool {
	if o != nil && !IsNil(o.Showwarehouseavailability) {
		return true
	}

	return false
}

// SetShowwarehouseavailability gets a reference to the given string and assigns it to the Showwarehouseavailability field.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) SetShowwarehouseavailability(v string) {
	o.Showwarehouseavailability = &v
}

// GetExtravailabilityflag returns the Extravailabilityflag field value if set, zero value otherwise.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) GetExtravailabilityflag() string {
	if o == nil || IsNil(o.Extravailabilityflag) {
		var ret string
		return ret
	}
	return *o.Extravailabilityflag
}

// GetExtravailabilityflagOk returns a tuple with the Extravailabilityflag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) GetExtravailabilityflagOk() (*string, bool) {
	if o == nil || IsNil(o.Extravailabilityflag) {
		return nil, false
	}
	return o.Extravailabilityflag, true
}

// HasExtravailabilityflag returns a boolean if a field has been set.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) HasExtravailabilityflag() bool {
	if o != nil && !IsNil(o.Extravailabilityflag) {
		return true
	}

	return false
}

// SetExtravailabilityflag gets a reference to the given string and assigns it to the Extravailabilityflag field.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) SetExtravailabilityflag(v string) {
	o.Extravailabilityflag = &v
}

// GetIncludeallsystems returns the Includeallsystems field value if set, zero value otherwise.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) GetIncludeallsystems() bool {
	if o == nil || IsNil(o.Includeallsystems) {
		var ret bool
		return ret
	}
	return *o.Includeallsystems
}

// GetIncludeallsystemsOk returns a tuple with the Includeallsystems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) GetIncludeallsystemsOk() (*bool, bool) {
	if o == nil || IsNil(o.Includeallsystems) {
		return nil, false
	}
	return o.Includeallsystems, true
}

// HasIncludeallsystems returns a boolean if a field has been set.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) HasIncludeallsystems() bool {
	if o != nil && !IsNil(o.Includeallsystems) {
		return true
	}

	return false
}

// SetIncludeallsystems gets a reference to the given bool and assigns it to the Includeallsystems field.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) SetIncludeallsystems(v bool) {
	o.Includeallsystems = &v
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) GetItem() []PriceAndAvailabilityRequestServicerequestPriceandstockrequestItemInner {
	if o == nil || IsNil(o.Item) {
		var ret []PriceAndAvailabilityRequestServicerequestPriceandstockrequestItemInner
		return ret
	}
	return o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) GetItemOk() ([]PriceAndAvailabilityRequestServicerequestPriceandstockrequestItemInner, bool) {
	if o == nil || IsNil(o.Item) {
		return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) HasItem() bool {
	if o != nil && !IsNil(o.Item) {
		return true
	}

	return false
}

// SetItem gets a reference to the given []PriceAndAvailabilityRequestServicerequestPriceandstockrequestItemInner and assigns it to the Item field.
func (o *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) SetItem(v []PriceAndAvailabilityRequestServicerequestPriceandstockrequestItemInner) {
	o.Item = v
}

func (o PriceAndAvailabilityRequestServicerequestPriceandstockrequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceAndAvailabilityRequestServicerequestPriceandstockrequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Showwarehouseavailability) {
		toSerialize["showwarehouseavailability"] = o.Showwarehouseavailability
	}
	if !IsNil(o.Extravailabilityflag) {
		toSerialize["extravailabilityflag"] = o.Extravailabilityflag
	}
	if !IsNil(o.Includeallsystems) {
		toSerialize["includeallsystems"] = o.Includeallsystems
	}
	if !IsNil(o.Item) {
		toSerialize["item"] = o.Item
	}
	return toSerialize, nil
}

type NullablePriceAndAvailabilityRequestServicerequestPriceandstockrequest struct {
	value *PriceAndAvailabilityRequestServicerequestPriceandstockrequest
	isSet bool
}

func (v NullablePriceAndAvailabilityRequestServicerequestPriceandstockrequest) Get() *PriceAndAvailabilityRequestServicerequestPriceandstockrequest {
	return v.value
}

func (v *NullablePriceAndAvailabilityRequestServicerequestPriceandstockrequest) Set(val *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceAndAvailabilityRequestServicerequestPriceandstockrequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceAndAvailabilityRequestServicerequestPriceandstockrequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceAndAvailabilityRequestServicerequestPriceandstockrequest(val *PriceAndAvailabilityRequestServicerequestPriceandstockrequest) *NullablePriceAndAvailabilityRequestServicerequestPriceandstockrequest {
	return &NullablePriceAndAvailabilityRequestServicerequestPriceandstockrequest{value: val, isSet: true}
}

func (v NullablePriceAndAvailabilityRequestServicerequestPriceandstockrequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceAndAvailabilityRequestServicerequestPriceandstockrequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


