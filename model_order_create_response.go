/*
XI Sdk Resellers

For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the OrderCreateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderCreateResponse{}

// OrderCreateResponse struct for OrderCreateResponse
type OrderCreateResponse struct {
	// The reseller's unique PO/Order number.
	CustomerOrderNumber *string `json:"customerOrderNumber,omitempty"`
	// The end user/customer's Purchase Order number.
	EndCustomerOrderNumber *string `json:"endCustomerOrderNumber,omitempty"`
	// Suffix used to identify billing address. Created during onboarding. Resellers are provided with one or more address IDs depending on how many bill to addresses they need for various flooring companies they are using for credit
	BillToAddressId *string `json:"billToAddressId,omitempty"`
	// The bid number provided to the reseller by the vendor for special pricing and discounts. Line-level bid numbers take precedence over header-level bid numbers.
	SpecialBidNumber *string `json:"specialBidNumber,omitempty"`
	// true for multiple orders
	OrderSplit *bool `json:"orderSplit,omitempty"`
	// true for partial order succesfully placed
	ProcessedPartially *bool `json:"processedPartially,omitempty"`
	// Total of all the orders including taxes and fees.
	PurchaseOrderTotal *float32 `json:"purchaseOrderTotal,omitempty"`
	ShipToInfo *OrderCreateResponseShipToInfo `json:"shipToInfo,omitempty"`
	EndUserInfo *OrderCreateResponseEndUserInfo `json:"endUserInfo,omitempty"`
	// Order-level details.
	Orders []OrderCreateResponseOrdersInner `json:"orders,omitempty"`
}

// NewOrderCreateResponse instantiates a new OrderCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderCreateResponse() *OrderCreateResponse {
	this := OrderCreateResponse{}
	return &this
}

// NewOrderCreateResponseWithDefaults instantiates a new OrderCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderCreateResponseWithDefaults() *OrderCreateResponse {
	this := OrderCreateResponse{}
	return &this
}

// GetCustomerOrderNumber returns the CustomerOrderNumber field value if set, zero value otherwise.
func (o *OrderCreateResponse) GetCustomerOrderNumber() string {
	if o == nil || IsNil(o.CustomerOrderNumber) {
		var ret string
		return ret
	}
	return *o.CustomerOrderNumber
}

// GetCustomerOrderNumberOk returns a tuple with the CustomerOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateResponse) GetCustomerOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerOrderNumber) {
		return nil, false
	}
	return o.CustomerOrderNumber, true
}

// HasCustomerOrderNumber returns a boolean if a field has been set.
func (o *OrderCreateResponse) HasCustomerOrderNumber() bool {
	if o != nil && !IsNil(o.CustomerOrderNumber) {
		return true
	}

	return false
}

// SetCustomerOrderNumber gets a reference to the given string and assigns it to the CustomerOrderNumber field.
func (o *OrderCreateResponse) SetCustomerOrderNumber(v string) {
	o.CustomerOrderNumber = &v
}

// GetEndCustomerOrderNumber returns the EndCustomerOrderNumber field value if set, zero value otherwise.
func (o *OrderCreateResponse) GetEndCustomerOrderNumber() string {
	if o == nil || IsNil(o.EndCustomerOrderNumber) {
		var ret string
		return ret
	}
	return *o.EndCustomerOrderNumber
}

// GetEndCustomerOrderNumberOk returns a tuple with the EndCustomerOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateResponse) GetEndCustomerOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EndCustomerOrderNumber) {
		return nil, false
	}
	return o.EndCustomerOrderNumber, true
}

// HasEndCustomerOrderNumber returns a boolean if a field has been set.
func (o *OrderCreateResponse) HasEndCustomerOrderNumber() bool {
	if o != nil && !IsNil(o.EndCustomerOrderNumber) {
		return true
	}

	return false
}

// SetEndCustomerOrderNumber gets a reference to the given string and assigns it to the EndCustomerOrderNumber field.
func (o *OrderCreateResponse) SetEndCustomerOrderNumber(v string) {
	o.EndCustomerOrderNumber = &v
}

// GetBillToAddressId returns the BillToAddressId field value if set, zero value otherwise.
func (o *OrderCreateResponse) GetBillToAddressId() string {
	if o == nil || IsNil(o.BillToAddressId) {
		var ret string
		return ret
	}
	return *o.BillToAddressId
}

// GetBillToAddressIdOk returns a tuple with the BillToAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateResponse) GetBillToAddressIdOk() (*string, bool) {
	if o == nil || IsNil(o.BillToAddressId) {
		return nil, false
	}
	return o.BillToAddressId, true
}

// HasBillToAddressId returns a boolean if a field has been set.
func (o *OrderCreateResponse) HasBillToAddressId() bool {
	if o != nil && !IsNil(o.BillToAddressId) {
		return true
	}

	return false
}

// SetBillToAddressId gets a reference to the given string and assigns it to the BillToAddressId field.
func (o *OrderCreateResponse) SetBillToAddressId(v string) {
	o.BillToAddressId = &v
}

// GetSpecialBidNumber returns the SpecialBidNumber field value if set, zero value otherwise.
func (o *OrderCreateResponse) GetSpecialBidNumber() string {
	if o == nil || IsNil(o.SpecialBidNumber) {
		var ret string
		return ret
	}
	return *o.SpecialBidNumber
}

// GetSpecialBidNumberOk returns a tuple with the SpecialBidNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateResponse) GetSpecialBidNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SpecialBidNumber) {
		return nil, false
	}
	return o.SpecialBidNumber, true
}

// HasSpecialBidNumber returns a boolean if a field has been set.
func (o *OrderCreateResponse) HasSpecialBidNumber() bool {
	if o != nil && !IsNil(o.SpecialBidNumber) {
		return true
	}

	return false
}

// SetSpecialBidNumber gets a reference to the given string and assigns it to the SpecialBidNumber field.
func (o *OrderCreateResponse) SetSpecialBidNumber(v string) {
	o.SpecialBidNumber = &v
}

// GetOrderSplit returns the OrderSplit field value if set, zero value otherwise.
func (o *OrderCreateResponse) GetOrderSplit() bool {
	if o == nil || IsNil(o.OrderSplit) {
		var ret bool
		return ret
	}
	return *o.OrderSplit
}

// GetOrderSplitOk returns a tuple with the OrderSplit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateResponse) GetOrderSplitOk() (*bool, bool) {
	if o == nil || IsNil(o.OrderSplit) {
		return nil, false
	}
	return o.OrderSplit, true
}

// HasOrderSplit returns a boolean if a field has been set.
func (o *OrderCreateResponse) HasOrderSplit() bool {
	if o != nil && !IsNil(o.OrderSplit) {
		return true
	}

	return false
}

// SetOrderSplit gets a reference to the given bool and assigns it to the OrderSplit field.
func (o *OrderCreateResponse) SetOrderSplit(v bool) {
	o.OrderSplit = &v
}

// GetProcessedPartially returns the ProcessedPartially field value if set, zero value otherwise.
func (o *OrderCreateResponse) GetProcessedPartially() bool {
	if o == nil || IsNil(o.ProcessedPartially) {
		var ret bool
		return ret
	}
	return *o.ProcessedPartially
}

// GetProcessedPartiallyOk returns a tuple with the ProcessedPartially field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateResponse) GetProcessedPartiallyOk() (*bool, bool) {
	if o == nil || IsNil(o.ProcessedPartially) {
		return nil, false
	}
	return o.ProcessedPartially, true
}

// HasProcessedPartially returns a boolean if a field has been set.
func (o *OrderCreateResponse) HasProcessedPartially() bool {
	if o != nil && !IsNil(o.ProcessedPartially) {
		return true
	}

	return false
}

// SetProcessedPartially gets a reference to the given bool and assigns it to the ProcessedPartially field.
func (o *OrderCreateResponse) SetProcessedPartially(v bool) {
	o.ProcessedPartially = &v
}

// GetPurchaseOrderTotal returns the PurchaseOrderTotal field value if set, zero value otherwise.
func (o *OrderCreateResponse) GetPurchaseOrderTotal() float32 {
	if o == nil || IsNil(o.PurchaseOrderTotal) {
		var ret float32
		return ret
	}
	return *o.PurchaseOrderTotal
}

// GetPurchaseOrderTotalOk returns a tuple with the PurchaseOrderTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateResponse) GetPurchaseOrderTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.PurchaseOrderTotal) {
		return nil, false
	}
	return o.PurchaseOrderTotal, true
}

// HasPurchaseOrderTotal returns a boolean if a field has been set.
func (o *OrderCreateResponse) HasPurchaseOrderTotal() bool {
	if o != nil && !IsNil(o.PurchaseOrderTotal) {
		return true
	}

	return false
}

// SetPurchaseOrderTotal gets a reference to the given float32 and assigns it to the PurchaseOrderTotal field.
func (o *OrderCreateResponse) SetPurchaseOrderTotal(v float32) {
	o.PurchaseOrderTotal = &v
}

// GetShipToInfo returns the ShipToInfo field value if set, zero value otherwise.
func (o *OrderCreateResponse) GetShipToInfo() OrderCreateResponseShipToInfo {
	if o == nil || IsNil(o.ShipToInfo) {
		var ret OrderCreateResponseShipToInfo
		return ret
	}
	return *o.ShipToInfo
}

// GetShipToInfoOk returns a tuple with the ShipToInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateResponse) GetShipToInfoOk() (*OrderCreateResponseShipToInfo, bool) {
	if o == nil || IsNil(o.ShipToInfo) {
		return nil, false
	}
	return o.ShipToInfo, true
}

// HasShipToInfo returns a boolean if a field has been set.
func (o *OrderCreateResponse) HasShipToInfo() bool {
	if o != nil && !IsNil(o.ShipToInfo) {
		return true
	}

	return false
}

// SetShipToInfo gets a reference to the given OrderCreateResponseShipToInfo and assigns it to the ShipToInfo field.
func (o *OrderCreateResponse) SetShipToInfo(v OrderCreateResponseShipToInfo) {
	o.ShipToInfo = &v
}

// GetEndUserInfo returns the EndUserInfo field value if set, zero value otherwise.
func (o *OrderCreateResponse) GetEndUserInfo() OrderCreateResponseEndUserInfo {
	if o == nil || IsNil(o.EndUserInfo) {
		var ret OrderCreateResponseEndUserInfo
		return ret
	}
	return *o.EndUserInfo
}

// GetEndUserInfoOk returns a tuple with the EndUserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateResponse) GetEndUserInfoOk() (*OrderCreateResponseEndUserInfo, bool) {
	if o == nil || IsNil(o.EndUserInfo) {
		return nil, false
	}
	return o.EndUserInfo, true
}

// HasEndUserInfo returns a boolean if a field has been set.
func (o *OrderCreateResponse) HasEndUserInfo() bool {
	if o != nil && !IsNil(o.EndUserInfo) {
		return true
	}

	return false
}

// SetEndUserInfo gets a reference to the given OrderCreateResponseEndUserInfo and assigns it to the EndUserInfo field.
func (o *OrderCreateResponse) SetEndUserInfo(v OrderCreateResponseEndUserInfo) {
	o.EndUserInfo = &v
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *OrderCreateResponse) GetOrders() []OrderCreateResponseOrdersInner {
	if o == nil || IsNil(o.Orders) {
		var ret []OrderCreateResponseOrdersInner
		return ret
	}
	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateResponse) GetOrdersOk() ([]OrderCreateResponseOrdersInner, bool) {
	if o == nil || IsNil(o.Orders) {
		return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *OrderCreateResponse) HasOrders() bool {
	if o != nil && !IsNil(o.Orders) {
		return true
	}

	return false
}

// SetOrders gets a reference to the given []OrderCreateResponseOrdersInner and assigns it to the Orders field.
func (o *OrderCreateResponse) SetOrders(v []OrderCreateResponseOrdersInner) {
	o.Orders = v
}

func (o OrderCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderCreateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerOrderNumber) {
		toSerialize["customerOrderNumber"] = o.CustomerOrderNumber
	}
	if !IsNil(o.EndCustomerOrderNumber) {
		toSerialize["endCustomerOrderNumber"] = o.EndCustomerOrderNumber
	}
	if !IsNil(o.BillToAddressId) {
		toSerialize["billToAddressId"] = o.BillToAddressId
	}
	if !IsNil(o.SpecialBidNumber) {
		toSerialize["specialBidNumber"] = o.SpecialBidNumber
	}
	if !IsNil(o.OrderSplit) {
		toSerialize["orderSplit"] = o.OrderSplit
	}
	if !IsNil(o.ProcessedPartially) {
		toSerialize["processedPartially"] = o.ProcessedPartially
	}
	if !IsNil(o.PurchaseOrderTotal) {
		toSerialize["purchaseOrderTotal"] = o.PurchaseOrderTotal
	}
	if !IsNil(o.ShipToInfo) {
		toSerialize["shipToInfo"] = o.ShipToInfo
	}
	if !IsNil(o.EndUserInfo) {
		toSerialize["endUserInfo"] = o.EndUserInfo
	}
	if !IsNil(o.Orders) {
		toSerialize["orders"] = o.Orders
	}
	return toSerialize, nil
}

type NullableOrderCreateResponse struct {
	value *OrderCreateResponse
	isSet bool
}

func (v NullableOrderCreateResponse) Get() *OrderCreateResponse {
	return v.value
}

func (v *NullableOrderCreateResponse) Set(val *OrderCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderCreateResponse(val *OrderCreateResponse) *NullableOrderCreateResponse {
	return &NullableOrderCreateResponse{value: val, isSet: true}
}

func (v NullableOrderCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


