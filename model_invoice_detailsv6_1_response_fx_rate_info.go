/*
XI Sdk Resellers

For Ingram Micro Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the InvoiceDetailsv61ResponseFxRateInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceDetailsv61ResponseFxRateInfo{}

// InvoiceDetailsv61ResponseFxRateInfo struct for InvoiceDetailsv61ResponseFxRateInfo
type InvoiceDetailsv61ResponseFxRateInfo struct {
	// Currency code.
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// Company currency code.
	CompanyCurrency *string `json:"companyCurrency,omitempty"`
	// Invoice currency.
	InvoiceCurrency *string `json:"invoiceCurrency,omitempty"`
	// Currency FX rate.
	CurrencyFxRate *float64 `json:"currencyFxRate,omitempty"`
}

// NewInvoiceDetailsv61ResponseFxRateInfo instantiates a new InvoiceDetailsv61ResponseFxRateInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceDetailsv61ResponseFxRateInfo() *InvoiceDetailsv61ResponseFxRateInfo {
	this := InvoiceDetailsv61ResponseFxRateInfo{}
	return &this
}

// NewInvoiceDetailsv61ResponseFxRateInfoWithDefaults instantiates a new InvoiceDetailsv61ResponseFxRateInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceDetailsv61ResponseFxRateInfoWithDefaults() *InvoiceDetailsv61ResponseFxRateInfo {
	this := InvoiceDetailsv61ResponseFxRateInfo{}
	return &this
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseFxRateInfo) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseFxRateInfo) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseFxRateInfo) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *InvoiceDetailsv61ResponseFxRateInfo) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetCompanyCurrency returns the CompanyCurrency field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseFxRateInfo) GetCompanyCurrency() string {
	if o == nil || IsNil(o.CompanyCurrency) {
		var ret string
		return ret
	}
	return *o.CompanyCurrency
}

// GetCompanyCurrencyOk returns a tuple with the CompanyCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseFxRateInfo) GetCompanyCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyCurrency) {
		return nil, false
	}
	return o.CompanyCurrency, true
}

// HasCompanyCurrency returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseFxRateInfo) HasCompanyCurrency() bool {
	if o != nil && !IsNil(o.CompanyCurrency) {
		return true
	}

	return false
}

// SetCompanyCurrency gets a reference to the given string and assigns it to the CompanyCurrency field.
func (o *InvoiceDetailsv61ResponseFxRateInfo) SetCompanyCurrency(v string) {
	o.CompanyCurrency = &v
}

// GetInvoiceCurrency returns the InvoiceCurrency field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseFxRateInfo) GetInvoiceCurrency() string {
	if o == nil || IsNil(o.InvoiceCurrency) {
		var ret string
		return ret
	}
	return *o.InvoiceCurrency
}

// GetInvoiceCurrencyOk returns a tuple with the InvoiceCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseFxRateInfo) GetInvoiceCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceCurrency) {
		return nil, false
	}
	return o.InvoiceCurrency, true
}

// HasInvoiceCurrency returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseFxRateInfo) HasInvoiceCurrency() bool {
	if o != nil && !IsNil(o.InvoiceCurrency) {
		return true
	}

	return false
}

// SetInvoiceCurrency gets a reference to the given string and assigns it to the InvoiceCurrency field.
func (o *InvoiceDetailsv61ResponseFxRateInfo) SetInvoiceCurrency(v string) {
	o.InvoiceCurrency = &v
}

// GetCurrencyFxRate returns the CurrencyFxRate field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseFxRateInfo) GetCurrencyFxRate() float64 {
	if o == nil || IsNil(o.CurrencyFxRate) {
		var ret float64
		return ret
	}
	return *o.CurrencyFxRate
}

// GetCurrencyFxRateOk returns a tuple with the CurrencyFxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseFxRateInfo) GetCurrencyFxRateOk() (*float64, bool) {
	if o == nil || IsNil(o.CurrencyFxRate) {
		return nil, false
	}
	return o.CurrencyFxRate, true
}

// HasCurrencyFxRate returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseFxRateInfo) HasCurrencyFxRate() bool {
	if o != nil && !IsNil(o.CurrencyFxRate) {
		return true
	}

	return false
}

// SetCurrencyFxRate gets a reference to the given float64 and assigns it to the CurrencyFxRate field.
func (o *InvoiceDetailsv61ResponseFxRateInfo) SetCurrencyFxRate(v float64) {
	o.CurrencyFxRate = &v
}

func (o InvoiceDetailsv61ResponseFxRateInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceDetailsv61ResponseFxRateInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.CompanyCurrency) {
		toSerialize["companyCurrency"] = o.CompanyCurrency
	}
	if !IsNil(o.InvoiceCurrency) {
		toSerialize["invoiceCurrency"] = o.InvoiceCurrency
	}
	if !IsNil(o.CurrencyFxRate) {
		toSerialize["currencyFxRate"] = o.CurrencyFxRate
	}
	return toSerialize, nil
}

type NullableInvoiceDetailsv61ResponseFxRateInfo struct {
	value *InvoiceDetailsv61ResponseFxRateInfo
	isSet bool
}

func (v NullableInvoiceDetailsv61ResponseFxRateInfo) Get() *InvoiceDetailsv61ResponseFxRateInfo {
	return v.value
}

func (v *NullableInvoiceDetailsv61ResponseFxRateInfo) Set(val *InvoiceDetailsv61ResponseFxRateInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceDetailsv61ResponseFxRateInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceDetailsv61ResponseFxRateInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceDetailsv61ResponseFxRateInfo(val *InvoiceDetailsv61ResponseFxRateInfo) *NullableInvoiceDetailsv61ResponseFxRateInfo {
	return &NullableInvoiceDetailsv61ResponseFxRateInfo{value: val, isSet: true}
}

func (v NullableInvoiceDetailsv61ResponseFxRateInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceDetailsv61ResponseFxRateInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


