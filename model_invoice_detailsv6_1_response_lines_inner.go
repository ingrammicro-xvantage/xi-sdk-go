/*
Reseller API Documentation

For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

API version: 6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi-sdk-resellers-go

import (
	"encoding/json"
)

// checks if the InvoiceDetailsv61ResponseLinesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceDetailsv61ResponseLinesInner{}

// InvoiceDetailsv61ResponseLinesInner struct for InvoiceDetailsv61ResponseLinesInner
type InvoiceDetailsv61ResponseLinesInner struct {
	// Unique line number from Ingram.
	IngramLineNumber *string `json:"ingramLineNumber,omitempty"`
	// Line number passes by customer while creating an order.
	CustomerLineNumber *string `json:"customerLineNumber,omitempty"`
	// Ingram Micro SKU (stock keeping unit). An identification, usually alphanumeric, of a particular product that allows it to be tracked for inventory purposes.
	IngramPartNumber *string `json:"ingramPartNumber,omitempty"`
	// Vendor Part Number.
	VendorPartNumber *string `json:"vendorPartNumber,omitempty"`
	// Part number from customer's system.
	CustomerPartNumber *string `json:"customerPartNumber,omitempty"`
	// Name of the vendor.
	VendorName *string `json:"vendorName,omitempty"`
	// Description of the product.
	ProductDescription *string `json:"productDescription,omitempty"`
	// Weight of the product.
	UnitWeight *string `json:"unitWeight,omitempty"`
	// Quantity of the product.
	Quantity *int32 `json:"quantity,omitempty"`
	// Unit price of the product.
	UnitPrice *float64 `json:"unitPrice,omitempty"`
	// Unit of measure of the product.
	UnitOfMeasure *string `json:"unitOfMeasure,omitempty"`
	// Currency code.
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// Extended price of the product.
	ExtendedPrice *float64 `json:"extendedPrice,omitempty"`
	// Tax percentage
	TaxPercentage *float64 `json:"taxPercentage,omitempty"`
	// Tax rate
	TaxRate *float64 `json:"taxRate,omitempty"`
	// Line level tax amount.
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	SerialNumbers []InvoiceDetailsv61ResponseLinesInnerSerialNumbersInner `json:"serialNumbers,omitempty"`
	// Quantity ordered by the customer.
	QuantityOrdered *int32 `json:"quantityOrdered,omitempty"`
	// Quantity shipped to the customer.
	QuantityShipped *int32 `json:"quantityShipped,omitempty"`
}

// NewInvoiceDetailsv61ResponseLinesInner instantiates a new InvoiceDetailsv61ResponseLinesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceDetailsv61ResponseLinesInner() *InvoiceDetailsv61ResponseLinesInner {
	this := InvoiceDetailsv61ResponseLinesInner{}
	var customerLineNumber string = "0"
	this.CustomerLineNumber = &customerLineNumber
	return &this
}

// NewInvoiceDetailsv61ResponseLinesInnerWithDefaults instantiates a new InvoiceDetailsv61ResponseLinesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceDetailsv61ResponseLinesInnerWithDefaults() *InvoiceDetailsv61ResponseLinesInner {
	this := InvoiceDetailsv61ResponseLinesInner{}
	var customerLineNumber string = "0"
	this.CustomerLineNumber = &customerLineNumber
	return &this
}

// GetIngramLineNumber returns the IngramLineNumber field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetIngramLineNumber() string {
	if o == nil || IsNil(o.IngramLineNumber) {
		var ret string
		return ret
	}
	return *o.IngramLineNumber
}

// GetIngramLineNumberOk returns a tuple with the IngramLineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetIngramLineNumberOk() (*string, bool) {
	if o == nil || IsNil(o.IngramLineNumber) {
		return nil, false
	}
	return o.IngramLineNumber, true
}

// HasIngramLineNumber returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasIngramLineNumber() bool {
	if o != nil && !IsNil(o.IngramLineNumber) {
		return true
	}

	return false
}

// SetIngramLineNumber gets a reference to the given string and assigns it to the IngramLineNumber field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetIngramLineNumber(v string) {
	o.IngramLineNumber = &v
}

// GetCustomerLineNumber returns the CustomerLineNumber field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetCustomerLineNumber() string {
	if o == nil || IsNil(o.CustomerLineNumber) {
		var ret string
		return ret
	}
	return *o.CustomerLineNumber
}

// GetCustomerLineNumberOk returns a tuple with the CustomerLineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetCustomerLineNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerLineNumber) {
		return nil, false
	}
	return o.CustomerLineNumber, true
}

// HasCustomerLineNumber returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasCustomerLineNumber() bool {
	if o != nil && !IsNil(o.CustomerLineNumber) {
		return true
	}

	return false
}

// SetCustomerLineNumber gets a reference to the given string and assigns it to the CustomerLineNumber field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetCustomerLineNumber(v string) {
	o.CustomerLineNumber = &v
}

// GetIngramPartNumber returns the IngramPartNumber field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetIngramPartNumber() string {
	if o == nil || IsNil(o.IngramPartNumber) {
		var ret string
		return ret
	}
	return *o.IngramPartNumber
}

// GetIngramPartNumberOk returns a tuple with the IngramPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetIngramPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.IngramPartNumber) {
		return nil, false
	}
	return o.IngramPartNumber, true
}

// HasIngramPartNumber returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasIngramPartNumber() bool {
	if o != nil && !IsNil(o.IngramPartNumber) {
		return true
	}

	return false
}

// SetIngramPartNumber gets a reference to the given string and assigns it to the IngramPartNumber field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetIngramPartNumber(v string) {
	o.IngramPartNumber = &v
}

// GetVendorPartNumber returns the VendorPartNumber field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetVendorPartNumber() string {
	if o == nil || IsNil(o.VendorPartNumber) {
		var ret string
		return ret
	}
	return *o.VendorPartNumber
}

// GetVendorPartNumberOk returns a tuple with the VendorPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetVendorPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VendorPartNumber) {
		return nil, false
	}
	return o.VendorPartNumber, true
}

// HasVendorPartNumber returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasVendorPartNumber() bool {
	if o != nil && !IsNil(o.VendorPartNumber) {
		return true
	}

	return false
}

// SetVendorPartNumber gets a reference to the given string and assigns it to the VendorPartNumber field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetVendorPartNumber(v string) {
	o.VendorPartNumber = &v
}

// GetCustomerPartNumber returns the CustomerPartNumber field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetCustomerPartNumber() string {
	if o == nil || IsNil(o.CustomerPartNumber) {
		var ret string
		return ret
	}
	return *o.CustomerPartNumber
}

// GetCustomerPartNumberOk returns a tuple with the CustomerPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetCustomerPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerPartNumber) {
		return nil, false
	}
	return o.CustomerPartNumber, true
}

// HasCustomerPartNumber returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasCustomerPartNumber() bool {
	if o != nil && !IsNil(o.CustomerPartNumber) {
		return true
	}

	return false
}

// SetCustomerPartNumber gets a reference to the given string and assigns it to the CustomerPartNumber field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetCustomerPartNumber(v string) {
	o.CustomerPartNumber = &v
}

// GetVendorName returns the VendorName field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetVendorName() string {
	if o == nil || IsNil(o.VendorName) {
		var ret string
		return ret
	}
	return *o.VendorName
}

// GetVendorNameOk returns a tuple with the VendorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetVendorNameOk() (*string, bool) {
	if o == nil || IsNil(o.VendorName) {
		return nil, false
	}
	return o.VendorName, true
}

// HasVendorName returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasVendorName() bool {
	if o != nil && !IsNil(o.VendorName) {
		return true
	}

	return false
}

// SetVendorName gets a reference to the given string and assigns it to the VendorName field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetVendorName(v string) {
	o.VendorName = &v
}

// GetProductDescription returns the ProductDescription field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetProductDescription() string {
	if o == nil || IsNil(o.ProductDescription) {
		var ret string
		return ret
	}
	return *o.ProductDescription
}

// GetProductDescriptionOk returns a tuple with the ProductDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetProductDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ProductDescription) {
		return nil, false
	}
	return o.ProductDescription, true
}

// HasProductDescription returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasProductDescription() bool {
	if o != nil && !IsNil(o.ProductDescription) {
		return true
	}

	return false
}

// SetProductDescription gets a reference to the given string and assigns it to the ProductDescription field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetProductDescription(v string) {
	o.ProductDescription = &v
}

// GetUnitWeight returns the UnitWeight field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetUnitWeight() string {
	if o == nil || IsNil(o.UnitWeight) {
		var ret string
		return ret
	}
	return *o.UnitWeight
}

// GetUnitWeightOk returns a tuple with the UnitWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetUnitWeightOk() (*string, bool) {
	if o == nil || IsNil(o.UnitWeight) {
		return nil, false
	}
	return o.UnitWeight, true
}

// HasUnitWeight returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasUnitWeight() bool {
	if o != nil && !IsNil(o.UnitWeight) {
		return true
	}

	return false
}

// SetUnitWeight gets a reference to the given string and assigns it to the UnitWeight field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetUnitWeight(v string) {
	o.UnitWeight = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetUnitPrice returns the UnitPrice field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetUnitPrice() float64 {
	if o == nil || IsNil(o.UnitPrice) {
		var ret float64
		return ret
	}
	return *o.UnitPrice
}

// GetUnitPriceOk returns a tuple with the UnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetUnitPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.UnitPrice) {
		return nil, false
	}
	return o.UnitPrice, true
}

// HasUnitPrice returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasUnitPrice() bool {
	if o != nil && !IsNil(o.UnitPrice) {
		return true
	}

	return false
}

// SetUnitPrice gets a reference to the given float64 and assigns it to the UnitPrice field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetUnitPrice(v float64) {
	o.UnitPrice = &v
}

// GetUnitOfMeasure returns the UnitOfMeasure field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetUnitOfMeasure() string {
	if o == nil || IsNil(o.UnitOfMeasure) {
		var ret string
		return ret
	}
	return *o.UnitOfMeasure
}

// GetUnitOfMeasureOk returns a tuple with the UnitOfMeasure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetUnitOfMeasureOk() (*string, bool) {
	if o == nil || IsNil(o.UnitOfMeasure) {
		return nil, false
	}
	return o.UnitOfMeasure, true
}

// HasUnitOfMeasure returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasUnitOfMeasure() bool {
	if o != nil && !IsNil(o.UnitOfMeasure) {
		return true
	}

	return false
}

// SetUnitOfMeasure gets a reference to the given string and assigns it to the UnitOfMeasure field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetUnitOfMeasure(v string) {
	o.UnitOfMeasure = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetExtendedPrice returns the ExtendedPrice field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetExtendedPrice() float64 {
	if o == nil || IsNil(o.ExtendedPrice) {
		var ret float64
		return ret
	}
	return *o.ExtendedPrice
}

// GetExtendedPriceOk returns a tuple with the ExtendedPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetExtendedPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.ExtendedPrice) {
		return nil, false
	}
	return o.ExtendedPrice, true
}

// HasExtendedPrice returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasExtendedPrice() bool {
	if o != nil && !IsNil(o.ExtendedPrice) {
		return true
	}

	return false
}

// SetExtendedPrice gets a reference to the given float64 and assigns it to the ExtendedPrice field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetExtendedPrice(v float64) {
	o.ExtendedPrice = &v
}

// GetTaxPercentage returns the TaxPercentage field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetTaxPercentage() float64 {
	if o == nil || IsNil(o.TaxPercentage) {
		var ret float64
		return ret
	}
	return *o.TaxPercentage
}

// GetTaxPercentageOk returns a tuple with the TaxPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetTaxPercentageOk() (*float64, bool) {
	if o == nil || IsNil(o.TaxPercentage) {
		return nil, false
	}
	return o.TaxPercentage, true
}

// HasTaxPercentage returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasTaxPercentage() bool {
	if o != nil && !IsNil(o.TaxPercentage) {
		return true
	}

	return false
}

// SetTaxPercentage gets a reference to the given float64 and assigns it to the TaxPercentage field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetTaxPercentage(v float64) {
	o.TaxPercentage = &v
}

// GetTaxRate returns the TaxRate field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetTaxRate() float64 {
	if o == nil || IsNil(o.TaxRate) {
		var ret float64
		return ret
	}
	return *o.TaxRate
}

// GetTaxRateOk returns a tuple with the TaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetTaxRateOk() (*float64, bool) {
	if o == nil || IsNil(o.TaxRate) {
		return nil, false
	}
	return o.TaxRate, true
}

// HasTaxRate returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasTaxRate() bool {
	if o != nil && !IsNil(o.TaxRate) {
		return true
	}

	return false
}

// SetTaxRate gets a reference to the given float64 and assigns it to the TaxRate field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetTaxRate(v float64) {
	o.TaxRate = &v
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetTaxAmount() float64 {
	if o == nil || IsNil(o.TaxAmount) {
		var ret float64
		return ret
	}
	return *o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetTaxAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.TaxAmount) {
		return nil, false
	}
	return o.TaxAmount, true
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasTaxAmount() bool {
	if o != nil && !IsNil(o.TaxAmount) {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given float64 and assigns it to the TaxAmount field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetTaxAmount(v float64) {
	o.TaxAmount = &v
}

// GetSerialNumbers returns the SerialNumbers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDetailsv61ResponseLinesInner) GetSerialNumbers() []InvoiceDetailsv61ResponseLinesInnerSerialNumbersInner {
	if o == nil {
		var ret []InvoiceDetailsv61ResponseLinesInnerSerialNumbersInner
		return ret
	}
	return o.SerialNumbers
}

// GetSerialNumbersOk returns a tuple with the SerialNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDetailsv61ResponseLinesInner) GetSerialNumbersOk() ([]InvoiceDetailsv61ResponseLinesInnerSerialNumbersInner, bool) {
	if o == nil || IsNil(o.SerialNumbers) {
		return nil, false
	}
	return o.SerialNumbers, true
}

// HasSerialNumbers returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasSerialNumbers() bool {
	if o != nil && IsNil(o.SerialNumbers) {
		return true
	}

	return false
}

// SetSerialNumbers gets a reference to the given []InvoiceDetailsv61ResponseLinesInnerSerialNumbersInner and assigns it to the SerialNumbers field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetSerialNumbers(v []InvoiceDetailsv61ResponseLinesInnerSerialNumbersInner) {
	o.SerialNumbers = v
}

// GetQuantityOrdered returns the QuantityOrdered field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetQuantityOrdered() int32 {
	if o == nil || IsNil(o.QuantityOrdered) {
		var ret int32
		return ret
	}
	return *o.QuantityOrdered
}

// GetQuantityOrderedOk returns a tuple with the QuantityOrdered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetQuantityOrderedOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityOrdered) {
		return nil, false
	}
	return o.QuantityOrdered, true
}

// HasQuantityOrdered returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasQuantityOrdered() bool {
	if o != nil && !IsNil(o.QuantityOrdered) {
		return true
	}

	return false
}

// SetQuantityOrdered gets a reference to the given int32 and assigns it to the QuantityOrdered field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetQuantityOrdered(v int32) {
	o.QuantityOrdered = &v
}

// GetQuantityShipped returns the QuantityShipped field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseLinesInner) GetQuantityShipped() int32 {
	if o == nil || IsNil(o.QuantityShipped) {
		var ret int32
		return ret
	}
	return *o.QuantityShipped
}

// GetQuantityShippedOk returns a tuple with the QuantityShipped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) GetQuantityShippedOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityShipped) {
		return nil, false
	}
	return o.QuantityShipped, true
}

// HasQuantityShipped returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseLinesInner) HasQuantityShipped() bool {
	if o != nil && !IsNil(o.QuantityShipped) {
		return true
	}

	return false
}

// SetQuantityShipped gets a reference to the given int32 and assigns it to the QuantityShipped field.
func (o *InvoiceDetailsv61ResponseLinesInner) SetQuantityShipped(v int32) {
	o.QuantityShipped = &v
}

func (o InvoiceDetailsv61ResponseLinesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceDetailsv61ResponseLinesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IngramLineNumber) {
		toSerialize["ingramLineNumber"] = o.IngramLineNumber
	}
	if !IsNil(o.CustomerLineNumber) {
		toSerialize["customerLineNumber"] = o.CustomerLineNumber
	}
	if !IsNil(o.IngramPartNumber) {
		toSerialize["ingramPartNumber"] = o.IngramPartNumber
	}
	if !IsNil(o.VendorPartNumber) {
		toSerialize["vendorPartNumber"] = o.VendorPartNumber
	}
	if !IsNil(o.CustomerPartNumber) {
		toSerialize["customerPartNumber"] = o.CustomerPartNumber
	}
	if !IsNil(o.VendorName) {
		toSerialize["vendorName"] = o.VendorName
	}
	if !IsNil(o.ProductDescription) {
		toSerialize["productDescription"] = o.ProductDescription
	}
	if !IsNil(o.UnitWeight) {
		toSerialize["unitWeight"] = o.UnitWeight
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.UnitPrice) {
		toSerialize["unitPrice"] = o.UnitPrice
	}
	if !IsNil(o.UnitOfMeasure) {
		toSerialize["unitOfMeasure"] = o.UnitOfMeasure
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.ExtendedPrice) {
		toSerialize["extendedPrice"] = o.ExtendedPrice
	}
	if !IsNil(o.TaxPercentage) {
		toSerialize["taxPercentage"] = o.TaxPercentage
	}
	if !IsNil(o.TaxRate) {
		toSerialize["taxRate"] = o.TaxRate
	}
	if !IsNil(o.TaxAmount) {
		toSerialize["taxAmount"] = o.TaxAmount
	}
	if o.SerialNumbers != nil {
		toSerialize["serialNumbers"] = o.SerialNumbers
	}
	if !IsNil(o.QuantityOrdered) {
		toSerialize["quantityOrdered"] = o.QuantityOrdered
	}
	if !IsNil(o.QuantityShipped) {
		toSerialize["quantityShipped"] = o.QuantityShipped
	}
	return toSerialize, nil
}

type NullableInvoiceDetailsv61ResponseLinesInner struct {
	value *InvoiceDetailsv61ResponseLinesInner
	isSet bool
}

func (v NullableInvoiceDetailsv61ResponseLinesInner) Get() *InvoiceDetailsv61ResponseLinesInner {
	return v.value
}

func (v *NullableInvoiceDetailsv61ResponseLinesInner) Set(val *InvoiceDetailsv61ResponseLinesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceDetailsv61ResponseLinesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceDetailsv61ResponseLinesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceDetailsv61ResponseLinesInner(val *InvoiceDetailsv61ResponseLinesInner) *NullableInvoiceDetailsv61ResponseLinesInner {
	return &NullableInvoiceDetailsv61ResponseLinesInner{value: val, isSet: true}
}

func (v NullableInvoiceDetailsv61ResponseLinesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceDetailsv61ResponseLinesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


