/*
XI Sdk Resellers

For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the ProductDetailResponseIndicators type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductDetailResponseIndicators{}

// ProductDetailResponseIndicators struct for ProductDetailResponseIndicators
type ProductDetailResponseIndicators struct {
	// Boolean that indicates whether product has a warranty.
	HasWarranty *bool `json:"hasWarranty,omitempty"`
	// Boolean that indicates whether it’s a new product. 
	IsNewProduct *bool `json:"isNewProduct,omitempty"`
	// Boolean that indicates whether there is any limit to return the product.
	HasReturnLimits *bool `json:"HasReturnLimits,omitempty"`
	// Boolean that indicates whether back order is allowed for the product.
	IsBackOrderAllowed *bool `json:"IsBackOrderAllowed,omitempty"`
	// Boolean that indicates whether product is shipped from the partner.
	IsShippedFromPartner *bool `json:"isShippedFromPartner,omitempty"`
	// Boolean that indicates whether product is a replacement product.
	IsReplacementProduct *bool `json:"isReplacementProduct,omitempty"`
	// Boolean that indicates whether it’s a direct ship product.
	IsDirectship *bool `json:"isDirectship,omitempty"`
	// Boolean that indicates whether product is downloadable.
	IsDownloadable *bool `json:"isDownloadable,omitempty"`
	// Boolean that indicates whether it’s a digital product. 
	IsDigitalType *bool `json:"isDigitalType,omitempty"`
	// skutype
	SkuType *string `json:"skuType,omitempty"`
	// Boolean that indicates whether product has any standard special price.
	HasStdSpecialPrice *bool `json:"hasStdSpecialPrice,omitempty"`
	// Boolean that indicates whether product has any ACOP special price.
	HasAcopSpecialPrice *bool `json:"hasAcopSpecialPrice,omitempty"`
	// Boolean that indicates whether product has any ACOP quantity break.
	HasAcopQuantityBreak *bool `json:"hasAcopQuantityBreak,omitempty"`
	// Boolean that indicates whether product has any standard web discount.
	HasStdWebDiscount *bool `json:"hasStdWebDiscount,omitempty"`
	// Boolean that indicates whether product has any special bid.
	HasSpecialBid *bool `json:"hasSpecialBid,omitempty"`
	// Boolean that indicates whether product is exportable.
	IsExportableToCountry *bool `json:"isExportableToCountry,omitempty"`
	// Boolean that indicates whether it’s a discontinued product.
	IsDiscontinuedProduct *bool `json:"isDiscontinuedProduct,omitempty"`
	// Boolean that indicates whether product is refurbished.
	IsRefurbishedProduct *bool `json:"isRefurbishedProduct,omitempty"`
	// Boolean that indicates if the product can be returned.
	IsReturnableProduct *bool `json:"isReturnableProduct,omitempty"`
	// Boolean that indicates whether it’s a Ingram shipped product.
	IsIngramShip *bool `json:"isIngramShip,omitempty"`
	// Do vendor requires Enduser name required to create an order.
	IsEnduserRequired *bool `json:"isEnduserRequired,omitempty"`
	// Boolean that indicates whether it’s  heavy weight product.
	IsHeavyWeight *bool `json:"isHeavyWeight,omitempty"`
	// Boolean that indicates whether it hasLtl or not.
	HasLtl *bool `json:"hasLtl,omitempty"`
	// Boolean that indicates whether it’s clearnce product.
	IsClearanceProduct *bool `json:"isClearanceProduct,omitempty"`
	// Boolean that indicates whether it’s a bundled product.
	HasBundle *bool `json:"hasBundle,omitempty"`
	// Boolean that indicates whether it’s oversized product.
	IsOversizeProduct *bool `json:"isOversizeProduct,omitempty"`
	// Boolean that indicates whether it’s a preorder product.
	IsPreorderProduct *bool `json:"isPreorderProduct,omitempty"`
	// Boolean that indicates whether it’s a licened product.
	IsLicenseProduct *bool `json:"isLicenseProduct,omitempty"`
	// Boolean that indicates whether product is directship orderable.
	IsDirectshipOrderable *bool `json:"isDirectshipOrderable,omitempty"`
	// Boolean that indicates whether product is service SKU.
	IsServiceSku *bool `json:"isServiceSku,omitempty"`
	// Boolean that indicates whether product is configurable.
	IsConfigurable *bool `json:"isConfigurable,omitempty"`
}

// NewProductDetailResponseIndicators instantiates a new ProductDetailResponseIndicators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductDetailResponseIndicators() *ProductDetailResponseIndicators {
	this := ProductDetailResponseIndicators{}
	return &this
}

// NewProductDetailResponseIndicatorsWithDefaults instantiates a new ProductDetailResponseIndicators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductDetailResponseIndicatorsWithDefaults() *ProductDetailResponseIndicators {
	this := ProductDetailResponseIndicators{}
	return &this
}

// GetHasWarranty returns the HasWarranty field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetHasWarranty() bool {
	if o == nil || IsNil(o.HasWarranty) {
		var ret bool
		return ret
	}
	return *o.HasWarranty
}

// GetHasWarrantyOk returns a tuple with the HasWarranty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetHasWarrantyOk() (*bool, bool) {
	if o == nil || IsNil(o.HasWarranty) {
		return nil, false
	}
	return o.HasWarranty, true
}

// HasHasWarranty returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasHasWarranty() bool {
	if o != nil && !IsNil(o.HasWarranty) {
		return true
	}

	return false
}

// SetHasWarranty gets a reference to the given bool and assigns it to the HasWarranty field.
func (o *ProductDetailResponseIndicators) SetHasWarranty(v bool) {
	o.HasWarranty = &v
}

// GetIsNewProduct returns the IsNewProduct field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsNewProduct() bool {
	if o == nil || IsNil(o.IsNewProduct) {
		var ret bool
		return ret
	}
	return *o.IsNewProduct
}

// GetIsNewProductOk returns a tuple with the IsNewProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsNewProductOk() (*bool, bool) {
	if o == nil || IsNil(o.IsNewProduct) {
		return nil, false
	}
	return o.IsNewProduct, true
}

// HasIsNewProduct returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsNewProduct() bool {
	if o != nil && !IsNil(o.IsNewProduct) {
		return true
	}

	return false
}

// SetIsNewProduct gets a reference to the given bool and assigns it to the IsNewProduct field.
func (o *ProductDetailResponseIndicators) SetIsNewProduct(v bool) {
	o.IsNewProduct = &v
}

// GetHasReturnLimits returns the HasReturnLimits field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetHasReturnLimits() bool {
	if o == nil || IsNil(o.HasReturnLimits) {
		var ret bool
		return ret
	}
	return *o.HasReturnLimits
}

// GetHasReturnLimitsOk returns a tuple with the HasReturnLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetHasReturnLimitsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasReturnLimits) {
		return nil, false
	}
	return o.HasReturnLimits, true
}

// HasHasReturnLimits returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasHasReturnLimits() bool {
	if o != nil && !IsNil(o.HasReturnLimits) {
		return true
	}

	return false
}

// SetHasReturnLimits gets a reference to the given bool and assigns it to the HasReturnLimits field.
func (o *ProductDetailResponseIndicators) SetHasReturnLimits(v bool) {
	o.HasReturnLimits = &v
}

// GetIsBackOrderAllowed returns the IsBackOrderAllowed field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsBackOrderAllowed() bool {
	if o == nil || IsNil(o.IsBackOrderAllowed) {
		var ret bool
		return ret
	}
	return *o.IsBackOrderAllowed
}

// GetIsBackOrderAllowedOk returns a tuple with the IsBackOrderAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsBackOrderAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBackOrderAllowed) {
		return nil, false
	}
	return o.IsBackOrderAllowed, true
}

// HasIsBackOrderAllowed returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsBackOrderAllowed() bool {
	if o != nil && !IsNil(o.IsBackOrderAllowed) {
		return true
	}

	return false
}

// SetIsBackOrderAllowed gets a reference to the given bool and assigns it to the IsBackOrderAllowed field.
func (o *ProductDetailResponseIndicators) SetIsBackOrderAllowed(v bool) {
	o.IsBackOrderAllowed = &v
}

// GetIsShippedFromPartner returns the IsShippedFromPartner field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsShippedFromPartner() bool {
	if o == nil || IsNil(o.IsShippedFromPartner) {
		var ret bool
		return ret
	}
	return *o.IsShippedFromPartner
}

// GetIsShippedFromPartnerOk returns a tuple with the IsShippedFromPartner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsShippedFromPartnerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsShippedFromPartner) {
		return nil, false
	}
	return o.IsShippedFromPartner, true
}

// HasIsShippedFromPartner returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsShippedFromPartner() bool {
	if o != nil && !IsNil(o.IsShippedFromPartner) {
		return true
	}

	return false
}

// SetIsShippedFromPartner gets a reference to the given bool and assigns it to the IsShippedFromPartner field.
func (o *ProductDetailResponseIndicators) SetIsShippedFromPartner(v bool) {
	o.IsShippedFromPartner = &v
}

// GetIsReplacementProduct returns the IsReplacementProduct field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsReplacementProduct() bool {
	if o == nil || IsNil(o.IsReplacementProduct) {
		var ret bool
		return ret
	}
	return *o.IsReplacementProduct
}

// GetIsReplacementProductOk returns a tuple with the IsReplacementProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsReplacementProductOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReplacementProduct) {
		return nil, false
	}
	return o.IsReplacementProduct, true
}

// HasIsReplacementProduct returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsReplacementProduct() bool {
	if o != nil && !IsNil(o.IsReplacementProduct) {
		return true
	}

	return false
}

// SetIsReplacementProduct gets a reference to the given bool and assigns it to the IsReplacementProduct field.
func (o *ProductDetailResponseIndicators) SetIsReplacementProduct(v bool) {
	o.IsReplacementProduct = &v
}

// GetIsDirectship returns the IsDirectship field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsDirectship() bool {
	if o == nil || IsNil(o.IsDirectship) {
		var ret bool
		return ret
	}
	return *o.IsDirectship
}

// GetIsDirectshipOk returns a tuple with the IsDirectship field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsDirectshipOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDirectship) {
		return nil, false
	}
	return o.IsDirectship, true
}

// HasIsDirectship returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsDirectship() bool {
	if o != nil && !IsNil(o.IsDirectship) {
		return true
	}

	return false
}

// SetIsDirectship gets a reference to the given bool and assigns it to the IsDirectship field.
func (o *ProductDetailResponseIndicators) SetIsDirectship(v bool) {
	o.IsDirectship = &v
}

// GetIsDownloadable returns the IsDownloadable field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsDownloadable() bool {
	if o == nil || IsNil(o.IsDownloadable) {
		var ret bool
		return ret
	}
	return *o.IsDownloadable
}

// GetIsDownloadableOk returns a tuple with the IsDownloadable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsDownloadableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDownloadable) {
		return nil, false
	}
	return o.IsDownloadable, true
}

// HasIsDownloadable returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsDownloadable() bool {
	if o != nil && !IsNil(o.IsDownloadable) {
		return true
	}

	return false
}

// SetIsDownloadable gets a reference to the given bool and assigns it to the IsDownloadable field.
func (o *ProductDetailResponseIndicators) SetIsDownloadable(v bool) {
	o.IsDownloadable = &v
}

// GetIsDigitalType returns the IsDigitalType field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsDigitalType() bool {
	if o == nil || IsNil(o.IsDigitalType) {
		var ret bool
		return ret
	}
	return *o.IsDigitalType
}

// GetIsDigitalTypeOk returns a tuple with the IsDigitalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsDigitalTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDigitalType) {
		return nil, false
	}
	return o.IsDigitalType, true
}

// HasIsDigitalType returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsDigitalType() bool {
	if o != nil && !IsNil(o.IsDigitalType) {
		return true
	}

	return false
}

// SetIsDigitalType gets a reference to the given bool and assigns it to the IsDigitalType field.
func (o *ProductDetailResponseIndicators) SetIsDigitalType(v bool) {
	o.IsDigitalType = &v
}

// GetSkuType returns the SkuType field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetSkuType() string {
	if o == nil || IsNil(o.SkuType) {
		var ret string
		return ret
	}
	return *o.SkuType
}

// GetSkuTypeOk returns a tuple with the SkuType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetSkuTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SkuType) {
		return nil, false
	}
	return o.SkuType, true
}

// HasSkuType returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasSkuType() bool {
	if o != nil && !IsNil(o.SkuType) {
		return true
	}

	return false
}

// SetSkuType gets a reference to the given string and assigns it to the SkuType field.
func (o *ProductDetailResponseIndicators) SetSkuType(v string) {
	o.SkuType = &v
}

// GetHasStdSpecialPrice returns the HasStdSpecialPrice field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetHasStdSpecialPrice() bool {
	if o == nil || IsNil(o.HasStdSpecialPrice) {
		var ret bool
		return ret
	}
	return *o.HasStdSpecialPrice
}

// GetHasStdSpecialPriceOk returns a tuple with the HasStdSpecialPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetHasStdSpecialPriceOk() (*bool, bool) {
	if o == nil || IsNil(o.HasStdSpecialPrice) {
		return nil, false
	}
	return o.HasStdSpecialPrice, true
}

// HasHasStdSpecialPrice returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasHasStdSpecialPrice() bool {
	if o != nil && !IsNil(o.HasStdSpecialPrice) {
		return true
	}

	return false
}

// SetHasStdSpecialPrice gets a reference to the given bool and assigns it to the HasStdSpecialPrice field.
func (o *ProductDetailResponseIndicators) SetHasStdSpecialPrice(v bool) {
	o.HasStdSpecialPrice = &v
}

// GetHasAcopSpecialPrice returns the HasAcopSpecialPrice field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetHasAcopSpecialPrice() bool {
	if o == nil || IsNil(o.HasAcopSpecialPrice) {
		var ret bool
		return ret
	}
	return *o.HasAcopSpecialPrice
}

// GetHasAcopSpecialPriceOk returns a tuple with the HasAcopSpecialPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetHasAcopSpecialPriceOk() (*bool, bool) {
	if o == nil || IsNil(o.HasAcopSpecialPrice) {
		return nil, false
	}
	return o.HasAcopSpecialPrice, true
}

// HasHasAcopSpecialPrice returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasHasAcopSpecialPrice() bool {
	if o != nil && !IsNil(o.HasAcopSpecialPrice) {
		return true
	}

	return false
}

// SetHasAcopSpecialPrice gets a reference to the given bool and assigns it to the HasAcopSpecialPrice field.
func (o *ProductDetailResponseIndicators) SetHasAcopSpecialPrice(v bool) {
	o.HasAcopSpecialPrice = &v
}

// GetHasAcopQuantityBreak returns the HasAcopQuantityBreak field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetHasAcopQuantityBreak() bool {
	if o == nil || IsNil(o.HasAcopQuantityBreak) {
		var ret bool
		return ret
	}
	return *o.HasAcopQuantityBreak
}

// GetHasAcopQuantityBreakOk returns a tuple with the HasAcopQuantityBreak field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetHasAcopQuantityBreakOk() (*bool, bool) {
	if o == nil || IsNil(o.HasAcopQuantityBreak) {
		return nil, false
	}
	return o.HasAcopQuantityBreak, true
}

// HasHasAcopQuantityBreak returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasHasAcopQuantityBreak() bool {
	if o != nil && !IsNil(o.HasAcopQuantityBreak) {
		return true
	}

	return false
}

// SetHasAcopQuantityBreak gets a reference to the given bool and assigns it to the HasAcopQuantityBreak field.
func (o *ProductDetailResponseIndicators) SetHasAcopQuantityBreak(v bool) {
	o.HasAcopQuantityBreak = &v
}

// GetHasStdWebDiscount returns the HasStdWebDiscount field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetHasStdWebDiscount() bool {
	if o == nil || IsNil(o.HasStdWebDiscount) {
		var ret bool
		return ret
	}
	return *o.HasStdWebDiscount
}

// GetHasStdWebDiscountOk returns a tuple with the HasStdWebDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetHasStdWebDiscountOk() (*bool, bool) {
	if o == nil || IsNil(o.HasStdWebDiscount) {
		return nil, false
	}
	return o.HasStdWebDiscount, true
}

// HasHasStdWebDiscount returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasHasStdWebDiscount() bool {
	if o != nil && !IsNil(o.HasStdWebDiscount) {
		return true
	}

	return false
}

// SetHasStdWebDiscount gets a reference to the given bool and assigns it to the HasStdWebDiscount field.
func (o *ProductDetailResponseIndicators) SetHasStdWebDiscount(v bool) {
	o.HasStdWebDiscount = &v
}

// GetHasSpecialBid returns the HasSpecialBid field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetHasSpecialBid() bool {
	if o == nil || IsNil(o.HasSpecialBid) {
		var ret bool
		return ret
	}
	return *o.HasSpecialBid
}

// GetHasSpecialBidOk returns a tuple with the HasSpecialBid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetHasSpecialBidOk() (*bool, bool) {
	if o == nil || IsNil(o.HasSpecialBid) {
		return nil, false
	}
	return o.HasSpecialBid, true
}

// HasHasSpecialBid returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasHasSpecialBid() bool {
	if o != nil && !IsNil(o.HasSpecialBid) {
		return true
	}

	return false
}

// SetHasSpecialBid gets a reference to the given bool and assigns it to the HasSpecialBid field.
func (o *ProductDetailResponseIndicators) SetHasSpecialBid(v bool) {
	o.HasSpecialBid = &v
}

// GetIsExportableToCountry returns the IsExportableToCountry field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsExportableToCountry() bool {
	if o == nil || IsNil(o.IsExportableToCountry) {
		var ret bool
		return ret
	}
	return *o.IsExportableToCountry
}

// GetIsExportableToCountryOk returns a tuple with the IsExportableToCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsExportableToCountryOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExportableToCountry) {
		return nil, false
	}
	return o.IsExportableToCountry, true
}

// HasIsExportableToCountry returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsExportableToCountry() bool {
	if o != nil && !IsNil(o.IsExportableToCountry) {
		return true
	}

	return false
}

// SetIsExportableToCountry gets a reference to the given bool and assigns it to the IsExportableToCountry field.
func (o *ProductDetailResponseIndicators) SetIsExportableToCountry(v bool) {
	o.IsExportableToCountry = &v
}

// GetIsDiscontinuedProduct returns the IsDiscontinuedProduct field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsDiscontinuedProduct() bool {
	if o == nil || IsNil(o.IsDiscontinuedProduct) {
		var ret bool
		return ret
	}
	return *o.IsDiscontinuedProduct
}

// GetIsDiscontinuedProductOk returns a tuple with the IsDiscontinuedProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsDiscontinuedProductOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDiscontinuedProduct) {
		return nil, false
	}
	return o.IsDiscontinuedProduct, true
}

// HasIsDiscontinuedProduct returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsDiscontinuedProduct() bool {
	if o != nil && !IsNil(o.IsDiscontinuedProduct) {
		return true
	}

	return false
}

// SetIsDiscontinuedProduct gets a reference to the given bool and assigns it to the IsDiscontinuedProduct field.
func (o *ProductDetailResponseIndicators) SetIsDiscontinuedProduct(v bool) {
	o.IsDiscontinuedProduct = &v
}

// GetIsRefurbishedProduct returns the IsRefurbishedProduct field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsRefurbishedProduct() bool {
	if o == nil || IsNil(o.IsRefurbishedProduct) {
		var ret bool
		return ret
	}
	return *o.IsRefurbishedProduct
}

// GetIsRefurbishedProductOk returns a tuple with the IsRefurbishedProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsRefurbishedProductOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRefurbishedProduct) {
		return nil, false
	}
	return o.IsRefurbishedProduct, true
}

// HasIsRefurbishedProduct returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsRefurbishedProduct() bool {
	if o != nil && !IsNil(o.IsRefurbishedProduct) {
		return true
	}

	return false
}

// SetIsRefurbishedProduct gets a reference to the given bool and assigns it to the IsRefurbishedProduct field.
func (o *ProductDetailResponseIndicators) SetIsRefurbishedProduct(v bool) {
	o.IsRefurbishedProduct = &v
}

// GetIsReturnableProduct returns the IsReturnableProduct field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsReturnableProduct() bool {
	if o == nil || IsNil(o.IsReturnableProduct) {
		var ret bool
		return ret
	}
	return *o.IsReturnableProduct
}

// GetIsReturnableProductOk returns a tuple with the IsReturnableProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsReturnableProductOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReturnableProduct) {
		return nil, false
	}
	return o.IsReturnableProduct, true
}

// HasIsReturnableProduct returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsReturnableProduct() bool {
	if o != nil && !IsNil(o.IsReturnableProduct) {
		return true
	}

	return false
}

// SetIsReturnableProduct gets a reference to the given bool and assigns it to the IsReturnableProduct field.
func (o *ProductDetailResponseIndicators) SetIsReturnableProduct(v bool) {
	o.IsReturnableProduct = &v
}

// GetIsIngramShip returns the IsIngramShip field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsIngramShip() bool {
	if o == nil || IsNil(o.IsIngramShip) {
		var ret bool
		return ret
	}
	return *o.IsIngramShip
}

// GetIsIngramShipOk returns a tuple with the IsIngramShip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsIngramShipOk() (*bool, bool) {
	if o == nil || IsNil(o.IsIngramShip) {
		return nil, false
	}
	return o.IsIngramShip, true
}

// HasIsIngramShip returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsIngramShip() bool {
	if o != nil && !IsNil(o.IsIngramShip) {
		return true
	}

	return false
}

// SetIsIngramShip gets a reference to the given bool and assigns it to the IsIngramShip field.
func (o *ProductDetailResponseIndicators) SetIsIngramShip(v bool) {
	o.IsIngramShip = &v
}

// GetIsEnduserRequired returns the IsEnduserRequired field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsEnduserRequired() bool {
	if o == nil || IsNil(o.IsEnduserRequired) {
		var ret bool
		return ret
	}
	return *o.IsEnduserRequired
}

// GetIsEnduserRequiredOk returns a tuple with the IsEnduserRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsEnduserRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnduserRequired) {
		return nil, false
	}
	return o.IsEnduserRequired, true
}

// HasIsEnduserRequired returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsEnduserRequired() bool {
	if o != nil && !IsNil(o.IsEnduserRequired) {
		return true
	}

	return false
}

// SetIsEnduserRequired gets a reference to the given bool and assigns it to the IsEnduserRequired field.
func (o *ProductDetailResponseIndicators) SetIsEnduserRequired(v bool) {
	o.IsEnduserRequired = &v
}

// GetIsHeavyWeight returns the IsHeavyWeight field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsHeavyWeight() bool {
	if o == nil || IsNil(o.IsHeavyWeight) {
		var ret bool
		return ret
	}
	return *o.IsHeavyWeight
}

// GetIsHeavyWeightOk returns a tuple with the IsHeavyWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsHeavyWeightOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHeavyWeight) {
		return nil, false
	}
	return o.IsHeavyWeight, true
}

// HasIsHeavyWeight returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsHeavyWeight() bool {
	if o != nil && !IsNil(o.IsHeavyWeight) {
		return true
	}

	return false
}

// SetIsHeavyWeight gets a reference to the given bool and assigns it to the IsHeavyWeight field.
func (o *ProductDetailResponseIndicators) SetIsHeavyWeight(v bool) {
	o.IsHeavyWeight = &v
}

// GetHasLtl returns the HasLtl field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetHasLtl() bool {
	if o == nil || IsNil(o.HasLtl) {
		var ret bool
		return ret
	}
	return *o.HasLtl
}

// GetHasLtlOk returns a tuple with the HasLtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetHasLtlOk() (*bool, bool) {
	if o == nil || IsNil(o.HasLtl) {
		return nil, false
	}
	return o.HasLtl, true
}

// HasHasLtl returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasHasLtl() bool {
	if o != nil && !IsNil(o.HasLtl) {
		return true
	}

	return false
}

// SetHasLtl gets a reference to the given bool and assigns it to the HasLtl field.
func (o *ProductDetailResponseIndicators) SetHasLtl(v bool) {
	o.HasLtl = &v
}

// GetIsClearanceProduct returns the IsClearanceProduct field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsClearanceProduct() bool {
	if o == nil || IsNil(o.IsClearanceProduct) {
		var ret bool
		return ret
	}
	return *o.IsClearanceProduct
}

// GetIsClearanceProductOk returns a tuple with the IsClearanceProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsClearanceProductOk() (*bool, bool) {
	if o == nil || IsNil(o.IsClearanceProduct) {
		return nil, false
	}
	return o.IsClearanceProduct, true
}

// HasIsClearanceProduct returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsClearanceProduct() bool {
	if o != nil && !IsNil(o.IsClearanceProduct) {
		return true
	}

	return false
}

// SetIsClearanceProduct gets a reference to the given bool and assigns it to the IsClearanceProduct field.
func (o *ProductDetailResponseIndicators) SetIsClearanceProduct(v bool) {
	o.IsClearanceProduct = &v
}

// GetHasBundle returns the HasBundle field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetHasBundle() bool {
	if o == nil || IsNil(o.HasBundle) {
		var ret bool
		return ret
	}
	return *o.HasBundle
}

// GetHasBundleOk returns a tuple with the HasBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetHasBundleOk() (*bool, bool) {
	if o == nil || IsNil(o.HasBundle) {
		return nil, false
	}
	return o.HasBundle, true
}

// HasHasBundle returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasHasBundle() bool {
	if o != nil && !IsNil(o.HasBundle) {
		return true
	}

	return false
}

// SetHasBundle gets a reference to the given bool and assigns it to the HasBundle field.
func (o *ProductDetailResponseIndicators) SetHasBundle(v bool) {
	o.HasBundle = &v
}

// GetIsOversizeProduct returns the IsOversizeProduct field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsOversizeProduct() bool {
	if o == nil || IsNil(o.IsOversizeProduct) {
		var ret bool
		return ret
	}
	return *o.IsOversizeProduct
}

// GetIsOversizeProductOk returns a tuple with the IsOversizeProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsOversizeProductOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOversizeProduct) {
		return nil, false
	}
	return o.IsOversizeProduct, true
}

// HasIsOversizeProduct returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsOversizeProduct() bool {
	if o != nil && !IsNil(o.IsOversizeProduct) {
		return true
	}

	return false
}

// SetIsOversizeProduct gets a reference to the given bool and assigns it to the IsOversizeProduct field.
func (o *ProductDetailResponseIndicators) SetIsOversizeProduct(v bool) {
	o.IsOversizeProduct = &v
}

// GetIsPreorderProduct returns the IsPreorderProduct field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsPreorderProduct() bool {
	if o == nil || IsNil(o.IsPreorderProduct) {
		var ret bool
		return ret
	}
	return *o.IsPreorderProduct
}

// GetIsPreorderProductOk returns a tuple with the IsPreorderProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsPreorderProductOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPreorderProduct) {
		return nil, false
	}
	return o.IsPreorderProduct, true
}

// HasIsPreorderProduct returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsPreorderProduct() bool {
	if o != nil && !IsNil(o.IsPreorderProduct) {
		return true
	}

	return false
}

// SetIsPreorderProduct gets a reference to the given bool and assigns it to the IsPreorderProduct field.
func (o *ProductDetailResponseIndicators) SetIsPreorderProduct(v bool) {
	o.IsPreorderProduct = &v
}

// GetIsLicenseProduct returns the IsLicenseProduct field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsLicenseProduct() bool {
	if o == nil || IsNil(o.IsLicenseProduct) {
		var ret bool
		return ret
	}
	return *o.IsLicenseProduct
}

// GetIsLicenseProductOk returns a tuple with the IsLicenseProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsLicenseProductOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLicenseProduct) {
		return nil, false
	}
	return o.IsLicenseProduct, true
}

// HasIsLicenseProduct returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsLicenseProduct() bool {
	if o != nil && !IsNil(o.IsLicenseProduct) {
		return true
	}

	return false
}

// SetIsLicenseProduct gets a reference to the given bool and assigns it to the IsLicenseProduct field.
func (o *ProductDetailResponseIndicators) SetIsLicenseProduct(v bool) {
	o.IsLicenseProduct = &v
}

// GetIsDirectshipOrderable returns the IsDirectshipOrderable field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsDirectshipOrderable() bool {
	if o == nil || IsNil(o.IsDirectshipOrderable) {
		var ret bool
		return ret
	}
	return *o.IsDirectshipOrderable
}

// GetIsDirectshipOrderableOk returns a tuple with the IsDirectshipOrderable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsDirectshipOrderableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDirectshipOrderable) {
		return nil, false
	}
	return o.IsDirectshipOrderable, true
}

// HasIsDirectshipOrderable returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsDirectshipOrderable() bool {
	if o != nil && !IsNil(o.IsDirectshipOrderable) {
		return true
	}

	return false
}

// SetIsDirectshipOrderable gets a reference to the given bool and assigns it to the IsDirectshipOrderable field.
func (o *ProductDetailResponseIndicators) SetIsDirectshipOrderable(v bool) {
	o.IsDirectshipOrderable = &v
}

// GetIsServiceSku returns the IsServiceSku field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsServiceSku() bool {
	if o == nil || IsNil(o.IsServiceSku) {
		var ret bool
		return ret
	}
	return *o.IsServiceSku
}

// GetIsServiceSkuOk returns a tuple with the IsServiceSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsServiceSkuOk() (*bool, bool) {
	if o == nil || IsNil(o.IsServiceSku) {
		return nil, false
	}
	return o.IsServiceSku, true
}

// HasIsServiceSku returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsServiceSku() bool {
	if o != nil && !IsNil(o.IsServiceSku) {
		return true
	}

	return false
}

// SetIsServiceSku gets a reference to the given bool and assigns it to the IsServiceSku field.
func (o *ProductDetailResponseIndicators) SetIsServiceSku(v bool) {
	o.IsServiceSku = &v
}

// GetIsConfigurable returns the IsConfigurable field value if set, zero value otherwise.
func (o *ProductDetailResponseIndicators) GetIsConfigurable() bool {
	if o == nil || IsNil(o.IsConfigurable) {
		var ret bool
		return ret
	}
	return *o.IsConfigurable
}

// GetIsConfigurableOk returns a tuple with the IsConfigurable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseIndicators) GetIsConfigurableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsConfigurable) {
		return nil, false
	}
	return o.IsConfigurable, true
}

// HasIsConfigurable returns a boolean if a field has been set.
func (o *ProductDetailResponseIndicators) HasIsConfigurable() bool {
	if o != nil && !IsNil(o.IsConfigurable) {
		return true
	}

	return false
}

// SetIsConfigurable gets a reference to the given bool and assigns it to the IsConfigurable field.
func (o *ProductDetailResponseIndicators) SetIsConfigurable(v bool) {
	o.IsConfigurable = &v
}

func (o ProductDetailResponseIndicators) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductDetailResponseIndicators) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HasWarranty) {
		toSerialize["hasWarranty"] = o.HasWarranty
	}
	if !IsNil(o.IsNewProduct) {
		toSerialize["isNewProduct"] = o.IsNewProduct
	}
	if !IsNil(o.HasReturnLimits) {
		toSerialize["HasReturnLimits"] = o.HasReturnLimits
	}
	if !IsNil(o.IsBackOrderAllowed) {
		toSerialize["IsBackOrderAllowed"] = o.IsBackOrderAllowed
	}
	if !IsNil(o.IsShippedFromPartner) {
		toSerialize["isShippedFromPartner"] = o.IsShippedFromPartner
	}
	if !IsNil(o.IsReplacementProduct) {
		toSerialize["isReplacementProduct"] = o.IsReplacementProduct
	}
	if !IsNil(o.IsDirectship) {
		toSerialize["isDirectship"] = o.IsDirectship
	}
	if !IsNil(o.IsDownloadable) {
		toSerialize["isDownloadable"] = o.IsDownloadable
	}
	if !IsNil(o.IsDigitalType) {
		toSerialize["isDigitalType"] = o.IsDigitalType
	}
	if !IsNil(o.SkuType) {
		toSerialize["skuType"] = o.SkuType
	}
	if !IsNil(o.HasStdSpecialPrice) {
		toSerialize["hasStdSpecialPrice"] = o.HasStdSpecialPrice
	}
	if !IsNil(o.HasAcopSpecialPrice) {
		toSerialize["hasAcopSpecialPrice"] = o.HasAcopSpecialPrice
	}
	if !IsNil(o.HasAcopQuantityBreak) {
		toSerialize["hasAcopQuantityBreak"] = o.HasAcopQuantityBreak
	}
	if !IsNil(o.HasStdWebDiscount) {
		toSerialize["hasStdWebDiscount"] = o.HasStdWebDiscount
	}
	if !IsNil(o.HasSpecialBid) {
		toSerialize["hasSpecialBid"] = o.HasSpecialBid
	}
	if !IsNil(o.IsExportableToCountry) {
		toSerialize["isExportableToCountry"] = o.IsExportableToCountry
	}
	if !IsNil(o.IsDiscontinuedProduct) {
		toSerialize["isDiscontinuedProduct"] = o.IsDiscontinuedProduct
	}
	if !IsNil(o.IsRefurbishedProduct) {
		toSerialize["isRefurbishedProduct"] = o.IsRefurbishedProduct
	}
	if !IsNil(o.IsReturnableProduct) {
		toSerialize["isReturnableProduct"] = o.IsReturnableProduct
	}
	if !IsNil(o.IsIngramShip) {
		toSerialize["isIngramShip"] = o.IsIngramShip
	}
	if !IsNil(o.IsEnduserRequired) {
		toSerialize["isEnduserRequired"] = o.IsEnduserRequired
	}
	if !IsNil(o.IsHeavyWeight) {
		toSerialize["isHeavyWeight"] = o.IsHeavyWeight
	}
	if !IsNil(o.HasLtl) {
		toSerialize["hasLtl"] = o.HasLtl
	}
	if !IsNil(o.IsClearanceProduct) {
		toSerialize["isClearanceProduct"] = o.IsClearanceProduct
	}
	if !IsNil(o.HasBundle) {
		toSerialize["hasBundle"] = o.HasBundle
	}
	if !IsNil(o.IsOversizeProduct) {
		toSerialize["isOversizeProduct"] = o.IsOversizeProduct
	}
	if !IsNil(o.IsPreorderProduct) {
		toSerialize["isPreorderProduct"] = o.IsPreorderProduct
	}
	if !IsNil(o.IsLicenseProduct) {
		toSerialize["isLicenseProduct"] = o.IsLicenseProduct
	}
	if !IsNil(o.IsDirectshipOrderable) {
		toSerialize["isDirectshipOrderable"] = o.IsDirectshipOrderable
	}
	if !IsNil(o.IsServiceSku) {
		toSerialize["isServiceSku"] = o.IsServiceSku
	}
	if !IsNil(o.IsConfigurable) {
		toSerialize["isConfigurable"] = o.IsConfigurable
	}
	return toSerialize, nil
}

type NullableProductDetailResponseIndicators struct {
	value *ProductDetailResponseIndicators
	isSet bool
}

func (v NullableProductDetailResponseIndicators) Get() *ProductDetailResponseIndicators {
	return v.value
}

func (v *NullableProductDetailResponseIndicators) Set(val *ProductDetailResponseIndicators) {
	v.value = val
	v.isSet = true
}

func (v NullableProductDetailResponseIndicators) IsSet() bool {
	return v.isSet
}

func (v *NullableProductDetailResponseIndicators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductDetailResponseIndicators(val *ProductDetailResponseIndicators) *NullableProductDetailResponseIndicators {
	return &NullableProductDetailResponseIndicators{value: val, isSet: true}
}

func (v NullableProductDetailResponseIndicators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductDetailResponseIndicators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


