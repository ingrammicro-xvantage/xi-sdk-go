/*
XI Sdk Resellers

For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner{}

// PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner struct for PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner
type PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner struct {
	ResourceId NullableString `json:"resourceId,omitempty"`
	// The resource id of the subscription product.
	ResourceUId NullableString `json:"resourceUId,omitempty"`
	// The name of the resource of the subscription product.
	ResourceName NullableString `json:"resourceName,omitempty"`
	// Vendorâ€™s part number for the subscription product.
	VendorPartNumber NullableString `json:"vendorPartNumber,omitempty"`
	// Minimum unit needs to purchased.
	MinUnits NullableFloat32 `json:"minUnits,omitempty"`
	// Maximum unit available for a purchase.
	MaxUnits NullableFloat32 `json:"maxUnits,omitempty"`
	// Recurring price model
	Recurringpricemodel NullableString `json:"recurringpricemodel,omitempty"`
	// Unit of mesaure for a subscription product.
	UnitOfMeasure NullableString `json:"unitOfMeasure,omitempty"`
	ResourcePricing []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerResourcePricingInner `json:"resourcePricing,omitempty"`
	Discounts []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInner `json:"discounts,omitempty"`
	Fees []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerFeesInner `json:"fees,omitempty"`
}

// NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner instantiates a new PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner {
	this := PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner{}
	return &this
}

// NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerWithDefaults instantiates a new PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerWithDefaults() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner {
	this := PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner{}
	return &this
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourceId() string {
	if o == nil || IsNil(o.ResourceId.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceId.Get()
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceId.Get(), o.ResourceId.IsSet()
}

// HasResourceId returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasResourceId() bool {
	if o != nil && o.ResourceId.IsSet() {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given NullableString and assigns it to the ResourceId field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetResourceId(v string) {
	o.ResourceId.Set(&v)
}
// SetResourceIdNil sets the value for ResourceId to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetResourceIdNil() {
	o.ResourceId.Set(nil)
}

// UnsetResourceId ensures that no value is present for ResourceId, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) UnsetResourceId() {
	o.ResourceId.Unset()
}

// GetResourceUId returns the ResourceUId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourceUId() string {
	if o == nil || IsNil(o.ResourceUId.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceUId.Get()
}

// GetResourceUIdOk returns a tuple with the ResourceUId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourceUIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceUId.Get(), o.ResourceUId.IsSet()
}

// HasResourceUId returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasResourceUId() bool {
	if o != nil && o.ResourceUId.IsSet() {
		return true
	}

	return false
}

// SetResourceUId gets a reference to the given NullableString and assigns it to the ResourceUId field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetResourceUId(v string) {
	o.ResourceUId.Set(&v)
}
// SetResourceUIdNil sets the value for ResourceUId to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetResourceUIdNil() {
	o.ResourceUId.Set(nil)
}

// UnsetResourceUId ensures that no value is present for ResourceUId, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) UnsetResourceUId() {
	o.ResourceUId.Unset()
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceName.Get()
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceName.Get(), o.ResourceName.IsSet()
}

// HasResourceName returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasResourceName() bool {
	if o != nil && o.ResourceName.IsSet() {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given NullableString and assigns it to the ResourceName field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetResourceName(v string) {
	o.ResourceName.Set(&v)
}
// SetResourceNameNil sets the value for ResourceName to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetResourceNameNil() {
	o.ResourceName.Set(nil)
}

// UnsetResourceName ensures that no value is present for ResourceName, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) UnsetResourceName() {
	o.ResourceName.Unset()
}

// GetVendorPartNumber returns the VendorPartNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetVendorPartNumber() string {
	if o == nil || IsNil(o.VendorPartNumber.Get()) {
		var ret string
		return ret
	}
	return *o.VendorPartNumber.Get()
}

// GetVendorPartNumberOk returns a tuple with the VendorPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetVendorPartNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VendorPartNumber.Get(), o.VendorPartNumber.IsSet()
}

// HasVendorPartNumber returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasVendorPartNumber() bool {
	if o != nil && o.VendorPartNumber.IsSet() {
		return true
	}

	return false
}

// SetVendorPartNumber gets a reference to the given NullableString and assigns it to the VendorPartNumber field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetVendorPartNumber(v string) {
	o.VendorPartNumber.Set(&v)
}
// SetVendorPartNumberNil sets the value for VendorPartNumber to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetVendorPartNumberNil() {
	o.VendorPartNumber.Set(nil)
}

// UnsetVendorPartNumber ensures that no value is present for VendorPartNumber, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) UnsetVendorPartNumber() {
	o.VendorPartNumber.Unset()
}

// GetMinUnits returns the MinUnits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetMinUnits() float32 {
	if o == nil || IsNil(o.MinUnits.Get()) {
		var ret float32
		return ret
	}
	return *o.MinUnits.Get()
}

// GetMinUnitsOk returns a tuple with the MinUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetMinUnitsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinUnits.Get(), o.MinUnits.IsSet()
}

// HasMinUnits returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasMinUnits() bool {
	if o != nil && o.MinUnits.IsSet() {
		return true
	}

	return false
}

// SetMinUnits gets a reference to the given NullableFloat32 and assigns it to the MinUnits field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetMinUnits(v float32) {
	o.MinUnits.Set(&v)
}
// SetMinUnitsNil sets the value for MinUnits to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetMinUnitsNil() {
	o.MinUnits.Set(nil)
}

// UnsetMinUnits ensures that no value is present for MinUnits, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) UnsetMinUnits() {
	o.MinUnits.Unset()
}

// GetMaxUnits returns the MaxUnits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetMaxUnits() float32 {
	if o == nil || IsNil(o.MaxUnits.Get()) {
		var ret float32
		return ret
	}
	return *o.MaxUnits.Get()
}

// GetMaxUnitsOk returns a tuple with the MaxUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetMaxUnitsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxUnits.Get(), o.MaxUnits.IsSet()
}

// HasMaxUnits returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasMaxUnits() bool {
	if o != nil && o.MaxUnits.IsSet() {
		return true
	}

	return false
}

// SetMaxUnits gets a reference to the given NullableFloat32 and assigns it to the MaxUnits field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetMaxUnits(v float32) {
	o.MaxUnits.Set(&v)
}
// SetMaxUnitsNil sets the value for MaxUnits to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetMaxUnitsNil() {
	o.MaxUnits.Set(nil)
}

// UnsetMaxUnits ensures that no value is present for MaxUnits, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) UnsetMaxUnits() {
	o.MaxUnits.Unset()
}

// GetRecurringpricemodel returns the Recurringpricemodel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetRecurringpricemodel() string {
	if o == nil || IsNil(o.Recurringpricemodel.Get()) {
		var ret string
		return ret
	}
	return *o.Recurringpricemodel.Get()
}

// GetRecurringpricemodelOk returns a tuple with the Recurringpricemodel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetRecurringpricemodelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recurringpricemodel.Get(), o.Recurringpricemodel.IsSet()
}

// HasRecurringpricemodel returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasRecurringpricemodel() bool {
	if o != nil && o.Recurringpricemodel.IsSet() {
		return true
	}

	return false
}

// SetRecurringpricemodel gets a reference to the given NullableString and assigns it to the Recurringpricemodel field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetRecurringpricemodel(v string) {
	o.Recurringpricemodel.Set(&v)
}
// SetRecurringpricemodelNil sets the value for Recurringpricemodel to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetRecurringpricemodelNil() {
	o.Recurringpricemodel.Set(nil)
}

// UnsetRecurringpricemodel ensures that no value is present for Recurringpricemodel, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) UnsetRecurringpricemodel() {
	o.Recurringpricemodel.Unset()
}

// GetUnitOfMeasure returns the UnitOfMeasure field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetUnitOfMeasure() string {
	if o == nil || IsNil(o.UnitOfMeasure.Get()) {
		var ret string
		return ret
	}
	return *o.UnitOfMeasure.Get()
}

// GetUnitOfMeasureOk returns a tuple with the UnitOfMeasure field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetUnitOfMeasureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitOfMeasure.Get(), o.UnitOfMeasure.IsSet()
}

// HasUnitOfMeasure returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasUnitOfMeasure() bool {
	if o != nil && o.UnitOfMeasure.IsSet() {
		return true
	}

	return false
}

// SetUnitOfMeasure gets a reference to the given NullableString and assigns it to the UnitOfMeasure field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetUnitOfMeasure(v string) {
	o.UnitOfMeasure.Set(&v)
}
// SetUnitOfMeasureNil sets the value for UnitOfMeasure to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetUnitOfMeasureNil() {
	o.UnitOfMeasure.Set(nil)
}

// UnsetUnitOfMeasure ensures that no value is present for UnitOfMeasure, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) UnsetUnitOfMeasure() {
	o.UnitOfMeasure.Unset()
}

// GetResourcePricing returns the ResourcePricing field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourcePricing() []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerResourcePricingInner {
	if o == nil || IsNil(o.ResourcePricing) {
		var ret []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerResourcePricingInner
		return ret
	}
	return o.ResourcePricing
}

// GetResourcePricingOk returns a tuple with the ResourcePricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourcePricingOk() ([]PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerResourcePricingInner, bool) {
	if o == nil || IsNil(o.ResourcePricing) {
		return nil, false
	}
	return o.ResourcePricing, true
}

// HasResourcePricing returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasResourcePricing() bool {
	if o != nil && !IsNil(o.ResourcePricing) {
		return true
	}

	return false
}

// SetResourcePricing gets a reference to the given []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerResourcePricingInner and assigns it to the ResourcePricing field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetResourcePricing(v []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerResourcePricingInner) {
	o.ResourcePricing = v
}

// GetDiscounts returns the Discounts field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetDiscounts() []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInner {
	if o == nil || IsNil(o.Discounts) {
		var ret []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInner
		return ret
	}
	return o.Discounts
}

// GetDiscountsOk returns a tuple with the Discounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetDiscountsOk() ([]PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInner, bool) {
	if o == nil || IsNil(o.Discounts) {
		return nil, false
	}
	return o.Discounts, true
}

// HasDiscounts returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasDiscounts() bool {
	if o != nil && !IsNil(o.Discounts) {
		return true
	}

	return false
}

// SetDiscounts gets a reference to the given []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInner and assigns it to the Discounts field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetDiscounts(v []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInner) {
	o.Discounts = v
}

// GetFees returns the Fees field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetFees() []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerFeesInner {
	if o == nil || IsNil(o.Fees) {
		var ret []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerFeesInner
		return ret
	}
	return o.Fees
}

// GetFeesOk returns a tuple with the Fees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetFeesOk() ([]PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerFeesInner, bool) {
	if o == nil || IsNil(o.Fees) {
		return nil, false
	}
	return o.Fees, true
}

// HasFees returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasFees() bool {
	if o != nil && !IsNil(o.Fees) {
		return true
	}

	return false
}

// SetFees gets a reference to the given []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerFeesInner and assigns it to the Fees field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetFees(v []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerFeesInner) {
	o.Fees = v
}

func (o PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceId.IsSet() {
		toSerialize["resourceId"] = o.ResourceId.Get()
	}
	if o.ResourceUId.IsSet() {
		toSerialize["resourceUId"] = o.ResourceUId.Get()
	}
	if o.ResourceName.IsSet() {
		toSerialize["resourceName"] = o.ResourceName.Get()
	}
	if o.VendorPartNumber.IsSet() {
		toSerialize["vendorPartNumber"] = o.VendorPartNumber.Get()
	}
	if o.MinUnits.IsSet() {
		toSerialize["minUnits"] = o.MinUnits.Get()
	}
	if o.MaxUnits.IsSet() {
		toSerialize["maxUnits"] = o.MaxUnits.Get()
	}
	if o.Recurringpricemodel.IsSet() {
		toSerialize["recurringpricemodel"] = o.Recurringpricemodel.Get()
	}
	if o.UnitOfMeasure.IsSet() {
		toSerialize["unitOfMeasure"] = o.UnitOfMeasure.Get()
	}
	if !IsNil(o.ResourcePricing) {
		toSerialize["resourcePricing"] = o.ResourcePricing
	}
	if !IsNil(o.Discounts) {
		toSerialize["discounts"] = o.Discounts
	}
	if !IsNil(o.Fees) {
		toSerialize["fees"] = o.Fees
	}
	return toSerialize, nil
}

type NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner struct {
	value *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner
	isSet bool
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) Get() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner {
	return v.value
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) Set(val *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner(val *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner {
	return &NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner{value: val, isSet: true}
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


