/*
XI Sdk Resellers

For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner{}

// PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner struct for PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner
type PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner struct {
	ResourceId *string `json:"resourceId,omitempty"`
	// The resource id of the subscription product.
	ResourceUId *string `json:"resourceUId,omitempty"`
	// The name of the resource of the subscription product.
	ResourceName *string `json:"resourceName,omitempty"`
	// Vendorâ€™s part number for the subscription product.
	VendorPartNumber *string `json:"vendorPartNumber,omitempty"`
	// Minimum unit needs to purchased.
	MinUnits *float32 `json:"minUnits,omitempty"`
	// Maximum unit available for a purchase.
	MaxUnits *float32 `json:"maxUnits,omitempty"`
	// Recurring price model
	Recurringpricemodel *string `json:"recurringpricemodel,omitempty"`
	// Unit of mesaure for a subscription product.
	UnitOfMeasure *string `json:"unitOfMeasure,omitempty"`
	ResourcePricing []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerResourcePricingInner `json:"resourcePricing,omitempty"`
	Discounts []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInner `json:"discounts,omitempty"`
	Fees []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerFeesInner `json:"fees,omitempty"`
}

// NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner instantiates a new PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner {
	this := PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner{}
	return &this
}

// NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerWithDefaults instantiates a new PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerWithDefaults() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner {
	this := PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner{}
	return &this
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourceId() string {
	if o == nil || IsNil(o.ResourceId) {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasResourceId() bool {
	if o != nil && !IsNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetResourceUId returns the ResourceUId field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourceUId() string {
	if o == nil || IsNil(o.ResourceUId) {
		var ret string
		return ret
	}
	return *o.ResourceUId
}

// GetResourceUIdOk returns a tuple with the ResourceUId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourceUIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceUId) {
		return nil, false
	}
	return o.ResourceUId, true
}

// HasResourceUId returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasResourceUId() bool {
	if o != nil && !IsNil(o.ResourceUId) {
		return true
	}

	return false
}

// SetResourceUId gets a reference to the given string and assigns it to the ResourceUId field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetResourceUId(v string) {
	o.ResourceUId = &v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceName) {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasResourceName() bool {
	if o != nil && !IsNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetVendorPartNumber returns the VendorPartNumber field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetVendorPartNumber() string {
	if o == nil || IsNil(o.VendorPartNumber) {
		var ret string
		return ret
	}
	return *o.VendorPartNumber
}

// GetVendorPartNumberOk returns a tuple with the VendorPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetVendorPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VendorPartNumber) {
		return nil, false
	}
	return o.VendorPartNumber, true
}

// HasVendorPartNumber returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasVendorPartNumber() bool {
	if o != nil && !IsNil(o.VendorPartNumber) {
		return true
	}

	return false
}

// SetVendorPartNumber gets a reference to the given string and assigns it to the VendorPartNumber field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetVendorPartNumber(v string) {
	o.VendorPartNumber = &v
}

// GetMinUnits returns the MinUnits field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetMinUnits() float32 {
	if o == nil || IsNil(o.MinUnits) {
		var ret float32
		return ret
	}
	return *o.MinUnits
}

// GetMinUnitsOk returns a tuple with the MinUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetMinUnitsOk() (*float32, bool) {
	if o == nil || IsNil(o.MinUnits) {
		return nil, false
	}
	return o.MinUnits, true
}

// HasMinUnits returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasMinUnits() bool {
	if o != nil && !IsNil(o.MinUnits) {
		return true
	}

	return false
}

// SetMinUnits gets a reference to the given float32 and assigns it to the MinUnits field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetMinUnits(v float32) {
	o.MinUnits = &v
}

// GetMaxUnits returns the MaxUnits field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetMaxUnits() float32 {
	if o == nil || IsNil(o.MaxUnits) {
		var ret float32
		return ret
	}
	return *o.MaxUnits
}

// GetMaxUnitsOk returns a tuple with the MaxUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetMaxUnitsOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxUnits) {
		return nil, false
	}
	return o.MaxUnits, true
}

// HasMaxUnits returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasMaxUnits() bool {
	if o != nil && !IsNil(o.MaxUnits) {
		return true
	}

	return false
}

// SetMaxUnits gets a reference to the given float32 and assigns it to the MaxUnits field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetMaxUnits(v float32) {
	o.MaxUnits = &v
}

// GetRecurringpricemodel returns the Recurringpricemodel field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetRecurringpricemodel() string {
	if o == nil || IsNil(o.Recurringpricemodel) {
		var ret string
		return ret
	}
	return *o.Recurringpricemodel
}

// GetRecurringpricemodelOk returns a tuple with the Recurringpricemodel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetRecurringpricemodelOk() (*string, bool) {
	if o == nil || IsNil(o.Recurringpricemodel) {
		return nil, false
	}
	return o.Recurringpricemodel, true
}

// HasRecurringpricemodel returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasRecurringpricemodel() bool {
	if o != nil && !IsNil(o.Recurringpricemodel) {
		return true
	}

	return false
}

// SetRecurringpricemodel gets a reference to the given string and assigns it to the Recurringpricemodel field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetRecurringpricemodel(v string) {
	o.Recurringpricemodel = &v
}

// GetUnitOfMeasure returns the UnitOfMeasure field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetUnitOfMeasure() string {
	if o == nil || IsNil(o.UnitOfMeasure) {
		var ret string
		return ret
	}
	return *o.UnitOfMeasure
}

// GetUnitOfMeasureOk returns a tuple with the UnitOfMeasure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetUnitOfMeasureOk() (*string, bool) {
	if o == nil || IsNil(o.UnitOfMeasure) {
		return nil, false
	}
	return o.UnitOfMeasure, true
}

// HasUnitOfMeasure returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasUnitOfMeasure() bool {
	if o != nil && !IsNil(o.UnitOfMeasure) {
		return true
	}

	return false
}

// SetUnitOfMeasure gets a reference to the given string and assigns it to the UnitOfMeasure field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetUnitOfMeasure(v string) {
	o.UnitOfMeasure = &v
}

// GetResourcePricing returns the ResourcePricing field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourcePricing() []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerResourcePricingInner {
	if o == nil || IsNil(o.ResourcePricing) {
		var ret []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerResourcePricingInner
		return ret
	}
	return o.ResourcePricing
}

// GetResourcePricingOk returns a tuple with the ResourcePricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetResourcePricingOk() ([]PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerResourcePricingInner, bool) {
	if o == nil || IsNil(o.ResourcePricing) {
		return nil, false
	}
	return o.ResourcePricing, true
}

// HasResourcePricing returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasResourcePricing() bool {
	if o != nil && !IsNil(o.ResourcePricing) {
		return true
	}

	return false
}

// SetResourcePricing gets a reference to the given []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerResourcePricingInner and assigns it to the ResourcePricing field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetResourcePricing(v []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerResourcePricingInner) {
	o.ResourcePricing = v
}

// GetDiscounts returns the Discounts field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetDiscounts() []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInner {
	if o == nil || IsNil(o.Discounts) {
		var ret []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInner
		return ret
	}
	return o.Discounts
}

// GetDiscountsOk returns a tuple with the Discounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetDiscountsOk() ([]PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInner, bool) {
	if o == nil || IsNil(o.Discounts) {
		return nil, false
	}
	return o.Discounts, true
}

// HasDiscounts returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasDiscounts() bool {
	if o != nil && !IsNil(o.Discounts) {
		return true
	}

	return false
}

// SetDiscounts gets a reference to the given []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInner and assigns it to the Discounts field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetDiscounts(v []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInner) {
	o.Discounts = v
}

// GetFees returns the Fees field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetFees() []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerFeesInner {
	if o == nil || IsNil(o.Fees) {
		var ret []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerFeesInner
		return ret
	}
	return o.Fees
}

// GetFeesOk returns a tuple with the Fees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) GetFeesOk() ([]PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerFeesInner, bool) {
	if o == nil || IsNil(o.Fees) {
		return nil, false
	}
	return o.Fees, true
}

// HasFees returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) HasFees() bool {
	if o != nil && !IsNil(o.Fees) {
		return true
	}

	return false
}

// SetFees gets a reference to the given []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerFeesInner and assigns it to the Fees field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) SetFees(v []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerFeesInner) {
	o.Fees = v
}

func (o PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResourceId) {
		toSerialize["resourceId"] = o.ResourceId
	}
	if !IsNil(o.ResourceUId) {
		toSerialize["resourceUId"] = o.ResourceUId
	}
	if !IsNil(o.ResourceName) {
		toSerialize["resourceName"] = o.ResourceName
	}
	if !IsNil(o.VendorPartNumber) {
		toSerialize["vendorPartNumber"] = o.VendorPartNumber
	}
	if !IsNil(o.MinUnits) {
		toSerialize["minUnits"] = o.MinUnits
	}
	if !IsNil(o.MaxUnits) {
		toSerialize["maxUnits"] = o.MaxUnits
	}
	if !IsNil(o.Recurringpricemodel) {
		toSerialize["recurringpricemodel"] = o.Recurringpricemodel
	}
	if !IsNil(o.UnitOfMeasure) {
		toSerialize["unitOfMeasure"] = o.UnitOfMeasure
	}
	if !IsNil(o.ResourcePricing) {
		toSerialize["resourcePricing"] = o.ResourcePricing
	}
	if !IsNil(o.Discounts) {
		toSerialize["discounts"] = o.Discounts
	}
	if !IsNil(o.Fees) {
		toSerialize["fees"] = o.Fees
	}
	return toSerialize, nil
}

type NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner struct {
	value *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner
	isSet bool
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) Get() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner {
	return v.value
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) Set(val *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner(val *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner {
	return &NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner{value: val, isSet: true}
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


