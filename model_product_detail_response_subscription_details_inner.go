/*
XI Sdk Resellers

For Resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the ProductDetailResponseSubscriptionDetailsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductDetailResponseSubscriptionDetailsInner{}

// ProductDetailResponseSubscriptionDetailsInner struct for ProductDetailResponseSubscriptionDetailsInner
type ProductDetailResponseSubscriptionDetailsInner struct {
	// ID of the subscription plan.
	PlanId *string `json:"planId,omitempty"`
	// Name of the subscription plan.
	PlanName *string `json:"planName,omitempty"`
	// Description of the subscription plan.
	PlanDescription *string `json:"planDescription,omitempty"`
	// Details of the groups subscription product part of.
	Groups []ProductDetailResponseSubscriptionDetailsInnerGroupsInner `json:"groups,omitempty"`
	// Details of the subscription period.
	SubscriptionPeriod []ProductDetailResponseSubscriptionDetailsInnerSubscriptionPeriodInner `json:"subscriptionPeriod,omitempty"`
	BillingPeriod *ProductDetailResponseSubscriptionDetailsInnerBillingPeriod `json:"billingPeriod,omitempty"`
	// Details of the resources available.
	Options []ProductDetailResponseSubscriptionDetailsInnerOptionsInner `json:"options,omitempty"`
	Links []ProductSearchResponseSubscriptionCatalogInnerPlansInnerLinksInner `json:"links,omitempty"`
	// link/URL for accessing next page.
	NextPage *string `json:"nextPage,omitempty"`
	// link/URL for accessing previous page.
	PreviousPage *string `json:"previousPage,omitempty"`
}

// NewProductDetailResponseSubscriptionDetailsInner instantiates a new ProductDetailResponseSubscriptionDetailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductDetailResponseSubscriptionDetailsInner() *ProductDetailResponseSubscriptionDetailsInner {
	this := ProductDetailResponseSubscriptionDetailsInner{}
	return &this
}

// NewProductDetailResponseSubscriptionDetailsInnerWithDefaults instantiates a new ProductDetailResponseSubscriptionDetailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductDetailResponseSubscriptionDetailsInnerWithDefaults() *ProductDetailResponseSubscriptionDetailsInner {
	this := ProductDetailResponseSubscriptionDetailsInner{}
	return &this
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetPlanId() string {
	if o == nil || IsNil(o.PlanId) {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *ProductDetailResponseSubscriptionDetailsInner) SetPlanId(v string) {
	o.PlanId = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetPlanName() string {
	if o == nil || IsNil(o.PlanName) {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanName) {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) HasPlanName() bool {
	if o != nil && !IsNil(o.PlanName) {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *ProductDetailResponseSubscriptionDetailsInner) SetPlanName(v string) {
	o.PlanName = &v
}

// GetPlanDescription returns the PlanDescription field value if set, zero value otherwise.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetPlanDescription() string {
	if o == nil || IsNil(o.PlanDescription) {
		var ret string
		return ret
	}
	return *o.PlanDescription
}

// GetPlanDescriptionOk returns a tuple with the PlanDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetPlanDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.PlanDescription) {
		return nil, false
	}
	return o.PlanDescription, true
}

// HasPlanDescription returns a boolean if a field has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) HasPlanDescription() bool {
	if o != nil && !IsNil(o.PlanDescription) {
		return true
	}

	return false
}

// SetPlanDescription gets a reference to the given string and assigns it to the PlanDescription field.
func (o *ProductDetailResponseSubscriptionDetailsInner) SetPlanDescription(v string) {
	o.PlanDescription = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetGroups() []ProductDetailResponseSubscriptionDetailsInnerGroupsInner {
	if o == nil || IsNil(o.Groups) {
		var ret []ProductDetailResponseSubscriptionDetailsInnerGroupsInner
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetGroupsOk() ([]ProductDetailResponseSubscriptionDetailsInnerGroupsInner, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []ProductDetailResponseSubscriptionDetailsInnerGroupsInner and assigns it to the Groups field.
func (o *ProductDetailResponseSubscriptionDetailsInner) SetGroups(v []ProductDetailResponseSubscriptionDetailsInnerGroupsInner) {
	o.Groups = v
}

// GetSubscriptionPeriod returns the SubscriptionPeriod field value if set, zero value otherwise.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetSubscriptionPeriod() []ProductDetailResponseSubscriptionDetailsInnerSubscriptionPeriodInner {
	if o == nil || IsNil(o.SubscriptionPeriod) {
		var ret []ProductDetailResponseSubscriptionDetailsInnerSubscriptionPeriodInner
		return ret
	}
	return o.SubscriptionPeriod
}

// GetSubscriptionPeriodOk returns a tuple with the SubscriptionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetSubscriptionPeriodOk() ([]ProductDetailResponseSubscriptionDetailsInnerSubscriptionPeriodInner, bool) {
	if o == nil || IsNil(o.SubscriptionPeriod) {
		return nil, false
	}
	return o.SubscriptionPeriod, true
}

// HasSubscriptionPeriod returns a boolean if a field has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) HasSubscriptionPeriod() bool {
	if o != nil && !IsNil(o.SubscriptionPeriod) {
		return true
	}

	return false
}

// SetSubscriptionPeriod gets a reference to the given []ProductDetailResponseSubscriptionDetailsInnerSubscriptionPeriodInner and assigns it to the SubscriptionPeriod field.
func (o *ProductDetailResponseSubscriptionDetailsInner) SetSubscriptionPeriod(v []ProductDetailResponseSubscriptionDetailsInnerSubscriptionPeriodInner) {
	o.SubscriptionPeriod = v
}

// GetBillingPeriod returns the BillingPeriod field value if set, zero value otherwise.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetBillingPeriod() ProductDetailResponseSubscriptionDetailsInnerBillingPeriod {
	if o == nil || IsNil(o.BillingPeriod) {
		var ret ProductDetailResponseSubscriptionDetailsInnerBillingPeriod
		return ret
	}
	return *o.BillingPeriod
}

// GetBillingPeriodOk returns a tuple with the BillingPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetBillingPeriodOk() (*ProductDetailResponseSubscriptionDetailsInnerBillingPeriod, bool) {
	if o == nil || IsNil(o.BillingPeriod) {
		return nil, false
	}
	return o.BillingPeriod, true
}

// HasBillingPeriod returns a boolean if a field has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) HasBillingPeriod() bool {
	if o != nil && !IsNil(o.BillingPeriod) {
		return true
	}

	return false
}

// SetBillingPeriod gets a reference to the given ProductDetailResponseSubscriptionDetailsInnerBillingPeriod and assigns it to the BillingPeriod field.
func (o *ProductDetailResponseSubscriptionDetailsInner) SetBillingPeriod(v ProductDetailResponseSubscriptionDetailsInnerBillingPeriod) {
	o.BillingPeriod = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetOptions() []ProductDetailResponseSubscriptionDetailsInnerOptionsInner {
	if o == nil || IsNil(o.Options) {
		var ret []ProductDetailResponseSubscriptionDetailsInnerOptionsInner
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetOptionsOk() ([]ProductDetailResponseSubscriptionDetailsInnerOptionsInner, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []ProductDetailResponseSubscriptionDetailsInnerOptionsInner and assigns it to the Options field.
func (o *ProductDetailResponseSubscriptionDetailsInner) SetOptions(v []ProductDetailResponseSubscriptionDetailsInnerOptionsInner) {
	o.Options = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetLinks() []ProductSearchResponseSubscriptionCatalogInnerPlansInnerLinksInner {
	if o == nil || IsNil(o.Links) {
		var ret []ProductSearchResponseSubscriptionCatalogInnerPlansInnerLinksInner
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetLinksOk() ([]ProductSearchResponseSubscriptionCatalogInnerPlansInnerLinksInner, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ProductSearchResponseSubscriptionCatalogInnerPlansInnerLinksInner and assigns it to the Links field.
func (o *ProductDetailResponseSubscriptionDetailsInner) SetLinks(v []ProductSearchResponseSubscriptionCatalogInnerPlansInnerLinksInner) {
	o.Links = v
}

// GetNextPage returns the NextPage field value if set, zero value otherwise.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetNextPage() string {
	if o == nil || IsNil(o.NextPage) {
		var ret string
		return ret
	}
	return *o.NextPage
}

// GetNextPageOk returns a tuple with the NextPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetNextPageOk() (*string, bool) {
	if o == nil || IsNil(o.NextPage) {
		return nil, false
	}
	return o.NextPage, true
}

// HasNextPage returns a boolean if a field has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) HasNextPage() bool {
	if o != nil && !IsNil(o.NextPage) {
		return true
	}

	return false
}

// SetNextPage gets a reference to the given string and assigns it to the NextPage field.
func (o *ProductDetailResponseSubscriptionDetailsInner) SetNextPage(v string) {
	o.NextPage = &v
}

// GetPreviousPage returns the PreviousPage field value if set, zero value otherwise.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetPreviousPage() string {
	if o == nil || IsNil(o.PreviousPage) {
		var ret string
		return ret
	}
	return *o.PreviousPage
}

// GetPreviousPageOk returns a tuple with the PreviousPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) GetPreviousPageOk() (*string, bool) {
	if o == nil || IsNil(o.PreviousPage) {
		return nil, false
	}
	return o.PreviousPage, true
}

// HasPreviousPage returns a boolean if a field has been set.
func (o *ProductDetailResponseSubscriptionDetailsInner) HasPreviousPage() bool {
	if o != nil && !IsNil(o.PreviousPage) {
		return true
	}

	return false
}

// SetPreviousPage gets a reference to the given string and assigns it to the PreviousPage field.
func (o *ProductDetailResponseSubscriptionDetailsInner) SetPreviousPage(v string) {
	o.PreviousPage = &v
}

func (o ProductDetailResponseSubscriptionDetailsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductDetailResponseSubscriptionDetailsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PlanId) {
		toSerialize["planId"] = o.PlanId
	}
	if !IsNil(o.PlanName) {
		toSerialize["planName"] = o.PlanName
	}
	if !IsNil(o.PlanDescription) {
		toSerialize["planDescription"] = o.PlanDescription
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.SubscriptionPeriod) {
		toSerialize["subscriptionPeriod"] = o.SubscriptionPeriod
	}
	if !IsNil(o.BillingPeriod) {
		toSerialize["billingPeriod"] = o.BillingPeriod
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.NextPage) {
		toSerialize["nextPage"] = o.NextPage
	}
	if !IsNil(o.PreviousPage) {
		toSerialize["previousPage"] = o.PreviousPage
	}
	return toSerialize, nil
}

type NullableProductDetailResponseSubscriptionDetailsInner struct {
	value *ProductDetailResponseSubscriptionDetailsInner
	isSet bool
}

func (v NullableProductDetailResponseSubscriptionDetailsInner) Get() *ProductDetailResponseSubscriptionDetailsInner {
	return v.value
}

func (v *NullableProductDetailResponseSubscriptionDetailsInner) Set(val *ProductDetailResponseSubscriptionDetailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProductDetailResponseSubscriptionDetailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProductDetailResponseSubscriptionDetailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductDetailResponseSubscriptionDetailsInner(val *ProductDetailResponseSubscriptionDetailsInner) *NullableProductDetailResponseSubscriptionDetailsInner {
	return &NullableProductDetailResponseSubscriptionDetailsInner{value: val, isSet: true}
}

func (v NullableProductDetailResponseSubscriptionDetailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductDetailResponseSubscriptionDetailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


