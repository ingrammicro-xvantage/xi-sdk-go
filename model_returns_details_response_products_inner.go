/*
Reseller API

For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

API version: 6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the ReturnsDetailsResponseProductsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReturnsDetailsResponseProductsInner{}

// ReturnsDetailsResponseProductsInner struct for ReturnsDetailsResponseProductsInner
type ReturnsDetailsResponseProductsInner struct {
	// Unique Ingram Micro line number.
	IngramLineNumber *string `json:"ingramLineNumber,omitempty"`
	// The description of the line item product.
	Description *string `json:"description,omitempty"`
	// Unique IngramMicro part number.
	IngramPartNumber *string `json:"ingramPartNumber,omitempty"`
	// The vendor's part number for the line item.
	VendorPartNumber *string `json:"vendorPartNumber,omitempty"`
	// The UPC code of a product.
	Upc *string `json:"upc,omitempty"`
	// The date of the invoice.
	InvoiceDate *string `json:"invoiceDate,omitempty"`
	// Ingram micro Invoice number.
	InvoiceNumber *string `json:"invoiceNumber,omitempty"`
	// The reseller's order number for reference in their system.
	CustomerOrderNumber *int32 `json:"customerOrderNumber,omitempty"`
	// Request details.
	RequestDetails *int32 `json:"requestDetails,omitempty"`
	// The quantity of the line item.
	Quantity *int32 `json:"quantity,omitempty"`
	// The unit price of the line item.
	UnitPrice *float32 `json:"unitPrice,omitempty"`
	// Unit price X quantity for the line item.
	ExtendedPrice *float32 `json:"extendedPrice,omitempty"`
	// The status of the line item.
	Status *string `json:"status,omitempty"`
	// The code of the return branch.
	ReturnBranch *int32 `json:"returnBranch,omitempty"`
	// The code of the ship from branch.
	ShipFromBranch *int32 `json:"shipFromBranch,omitempty"`
}

// NewReturnsDetailsResponseProductsInner instantiates a new ReturnsDetailsResponseProductsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnsDetailsResponseProductsInner() *ReturnsDetailsResponseProductsInner {
	this := ReturnsDetailsResponseProductsInner{}
	return &this
}

// NewReturnsDetailsResponseProductsInnerWithDefaults instantiates a new ReturnsDetailsResponseProductsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnsDetailsResponseProductsInnerWithDefaults() *ReturnsDetailsResponseProductsInner {
	this := ReturnsDetailsResponseProductsInner{}
	return &this
}

// GetIngramLineNumber returns the IngramLineNumber field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetIngramLineNumber() string {
	if o == nil || IsNil(o.IngramLineNumber) {
		var ret string
		return ret
	}
	return *o.IngramLineNumber
}

// GetIngramLineNumberOk returns a tuple with the IngramLineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetIngramLineNumberOk() (*string, bool) {
	if o == nil || IsNil(o.IngramLineNumber) {
		return nil, false
	}
	return o.IngramLineNumber, true
}

// HasIngramLineNumber returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasIngramLineNumber() bool {
	if o != nil && !IsNil(o.IngramLineNumber) {
		return true
	}

	return false
}

// SetIngramLineNumber gets a reference to the given string and assigns it to the IngramLineNumber field.
func (o *ReturnsDetailsResponseProductsInner) SetIngramLineNumber(v string) {
	o.IngramLineNumber = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ReturnsDetailsResponseProductsInner) SetDescription(v string) {
	o.Description = &v
}

// GetIngramPartNumber returns the IngramPartNumber field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetIngramPartNumber() string {
	if o == nil || IsNil(o.IngramPartNumber) {
		var ret string
		return ret
	}
	return *o.IngramPartNumber
}

// GetIngramPartNumberOk returns a tuple with the IngramPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetIngramPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.IngramPartNumber) {
		return nil, false
	}
	return o.IngramPartNumber, true
}

// HasIngramPartNumber returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasIngramPartNumber() bool {
	if o != nil && !IsNil(o.IngramPartNumber) {
		return true
	}

	return false
}

// SetIngramPartNumber gets a reference to the given string and assigns it to the IngramPartNumber field.
func (o *ReturnsDetailsResponseProductsInner) SetIngramPartNumber(v string) {
	o.IngramPartNumber = &v
}

// GetVendorPartNumber returns the VendorPartNumber field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetVendorPartNumber() string {
	if o == nil || IsNil(o.VendorPartNumber) {
		var ret string
		return ret
	}
	return *o.VendorPartNumber
}

// GetVendorPartNumberOk returns a tuple with the VendorPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetVendorPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VendorPartNumber) {
		return nil, false
	}
	return o.VendorPartNumber, true
}

// HasVendorPartNumber returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasVendorPartNumber() bool {
	if o != nil && !IsNil(o.VendorPartNumber) {
		return true
	}

	return false
}

// SetVendorPartNumber gets a reference to the given string and assigns it to the VendorPartNumber field.
func (o *ReturnsDetailsResponseProductsInner) SetVendorPartNumber(v string) {
	o.VendorPartNumber = &v
}

// GetUpc returns the Upc field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetUpc() string {
	if o == nil || IsNil(o.Upc) {
		var ret string
		return ret
	}
	return *o.Upc
}

// GetUpcOk returns a tuple with the Upc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetUpcOk() (*string, bool) {
	if o == nil || IsNil(o.Upc) {
		return nil, false
	}
	return o.Upc, true
}

// HasUpc returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasUpc() bool {
	if o != nil && !IsNil(o.Upc) {
		return true
	}

	return false
}

// SetUpc gets a reference to the given string and assigns it to the Upc field.
func (o *ReturnsDetailsResponseProductsInner) SetUpc(v string) {
	o.Upc = &v
}

// GetInvoiceDate returns the InvoiceDate field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetInvoiceDate() string {
	if o == nil || IsNil(o.InvoiceDate) {
		var ret string
		return ret
	}
	return *o.InvoiceDate
}

// GetInvoiceDateOk returns a tuple with the InvoiceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetInvoiceDateOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceDate) {
		return nil, false
	}
	return o.InvoiceDate, true
}

// HasInvoiceDate returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasInvoiceDate() bool {
	if o != nil && !IsNil(o.InvoiceDate) {
		return true
	}

	return false
}

// SetInvoiceDate gets a reference to the given string and assigns it to the InvoiceDate field.
func (o *ReturnsDetailsResponseProductsInner) SetInvoiceDate(v string) {
	o.InvoiceDate = &v
}

// GetInvoiceNumber returns the InvoiceNumber field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetInvoiceNumber() string {
	if o == nil || IsNil(o.InvoiceNumber) {
		var ret string
		return ret
	}
	return *o.InvoiceNumber
}

// GetInvoiceNumberOk returns a tuple with the InvoiceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetInvoiceNumberOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceNumber) {
		return nil, false
	}
	return o.InvoiceNumber, true
}

// HasInvoiceNumber returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasInvoiceNumber() bool {
	if o != nil && !IsNil(o.InvoiceNumber) {
		return true
	}

	return false
}

// SetInvoiceNumber gets a reference to the given string and assigns it to the InvoiceNumber field.
func (o *ReturnsDetailsResponseProductsInner) SetInvoiceNumber(v string) {
	o.InvoiceNumber = &v
}

// GetCustomerOrderNumber returns the CustomerOrderNumber field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetCustomerOrderNumber() int32 {
	if o == nil || IsNil(o.CustomerOrderNumber) {
		var ret int32
		return ret
	}
	return *o.CustomerOrderNumber
}

// GetCustomerOrderNumberOk returns a tuple with the CustomerOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetCustomerOrderNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerOrderNumber) {
		return nil, false
	}
	return o.CustomerOrderNumber, true
}

// HasCustomerOrderNumber returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasCustomerOrderNumber() bool {
	if o != nil && !IsNil(o.CustomerOrderNumber) {
		return true
	}

	return false
}

// SetCustomerOrderNumber gets a reference to the given int32 and assigns it to the CustomerOrderNumber field.
func (o *ReturnsDetailsResponseProductsInner) SetCustomerOrderNumber(v int32) {
	o.CustomerOrderNumber = &v
}

// GetRequestDetails returns the RequestDetails field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetRequestDetails() int32 {
	if o == nil || IsNil(o.RequestDetails) {
		var ret int32
		return ret
	}
	return *o.RequestDetails
}

// GetRequestDetailsOk returns a tuple with the RequestDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetRequestDetailsOk() (*int32, bool) {
	if o == nil || IsNil(o.RequestDetails) {
		return nil, false
	}
	return o.RequestDetails, true
}

// HasRequestDetails returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasRequestDetails() bool {
	if o != nil && !IsNil(o.RequestDetails) {
		return true
	}

	return false
}

// SetRequestDetails gets a reference to the given int32 and assigns it to the RequestDetails field.
func (o *ReturnsDetailsResponseProductsInner) SetRequestDetails(v int32) {
	o.RequestDetails = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ReturnsDetailsResponseProductsInner) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetUnitPrice returns the UnitPrice field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetUnitPrice() float32 {
	if o == nil || IsNil(o.UnitPrice) {
		var ret float32
		return ret
	}
	return *o.UnitPrice
}

// GetUnitPriceOk returns a tuple with the UnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetUnitPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.UnitPrice) {
		return nil, false
	}
	return o.UnitPrice, true
}

// HasUnitPrice returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasUnitPrice() bool {
	if o != nil && !IsNil(o.UnitPrice) {
		return true
	}

	return false
}

// SetUnitPrice gets a reference to the given float32 and assigns it to the UnitPrice field.
func (o *ReturnsDetailsResponseProductsInner) SetUnitPrice(v float32) {
	o.UnitPrice = &v
}

// GetExtendedPrice returns the ExtendedPrice field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetExtendedPrice() float32 {
	if o == nil || IsNil(o.ExtendedPrice) {
		var ret float32
		return ret
	}
	return *o.ExtendedPrice
}

// GetExtendedPriceOk returns a tuple with the ExtendedPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetExtendedPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.ExtendedPrice) {
		return nil, false
	}
	return o.ExtendedPrice, true
}

// HasExtendedPrice returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasExtendedPrice() bool {
	if o != nil && !IsNil(o.ExtendedPrice) {
		return true
	}

	return false
}

// SetExtendedPrice gets a reference to the given float32 and assigns it to the ExtendedPrice field.
func (o *ReturnsDetailsResponseProductsInner) SetExtendedPrice(v float32) {
	o.ExtendedPrice = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ReturnsDetailsResponseProductsInner) SetStatus(v string) {
	o.Status = &v
}

// GetReturnBranch returns the ReturnBranch field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetReturnBranch() int32 {
	if o == nil || IsNil(o.ReturnBranch) {
		var ret int32
		return ret
	}
	return *o.ReturnBranch
}

// GetReturnBranchOk returns a tuple with the ReturnBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetReturnBranchOk() (*int32, bool) {
	if o == nil || IsNil(o.ReturnBranch) {
		return nil, false
	}
	return o.ReturnBranch, true
}

// HasReturnBranch returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasReturnBranch() bool {
	if o != nil && !IsNil(o.ReturnBranch) {
		return true
	}

	return false
}

// SetReturnBranch gets a reference to the given int32 and assigns it to the ReturnBranch field.
func (o *ReturnsDetailsResponseProductsInner) SetReturnBranch(v int32) {
	o.ReturnBranch = &v
}

// GetShipFromBranch returns the ShipFromBranch field value if set, zero value otherwise.
func (o *ReturnsDetailsResponseProductsInner) GetShipFromBranch() int32 {
	if o == nil || IsNil(o.ShipFromBranch) {
		var ret int32
		return ret
	}
	return *o.ShipFromBranch
}

// GetShipFromBranchOk returns a tuple with the ShipFromBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnsDetailsResponseProductsInner) GetShipFromBranchOk() (*int32, bool) {
	if o == nil || IsNil(o.ShipFromBranch) {
		return nil, false
	}
	return o.ShipFromBranch, true
}

// HasShipFromBranch returns a boolean if a field has been set.
func (o *ReturnsDetailsResponseProductsInner) HasShipFromBranch() bool {
	if o != nil && !IsNil(o.ShipFromBranch) {
		return true
	}

	return false
}

// SetShipFromBranch gets a reference to the given int32 and assigns it to the ShipFromBranch field.
func (o *ReturnsDetailsResponseProductsInner) SetShipFromBranch(v int32) {
	o.ShipFromBranch = &v
}

func (o ReturnsDetailsResponseProductsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReturnsDetailsResponseProductsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IngramLineNumber) {
		toSerialize["ingramLineNumber"] = o.IngramLineNumber
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.IngramPartNumber) {
		toSerialize["ingramPartNumber"] = o.IngramPartNumber
	}
	if !IsNil(o.VendorPartNumber) {
		toSerialize["vendorPartNumber"] = o.VendorPartNumber
	}
	if !IsNil(o.Upc) {
		toSerialize["upc"] = o.Upc
	}
	if !IsNil(o.InvoiceDate) {
		toSerialize["invoiceDate"] = o.InvoiceDate
	}
	if !IsNil(o.InvoiceNumber) {
		toSerialize["invoiceNumber"] = o.InvoiceNumber
	}
	if !IsNil(o.CustomerOrderNumber) {
		toSerialize["customerOrderNumber"] = o.CustomerOrderNumber
	}
	if !IsNil(o.RequestDetails) {
		toSerialize["requestDetails"] = o.RequestDetails
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.UnitPrice) {
		toSerialize["unitPrice"] = o.UnitPrice
	}
	if !IsNil(o.ExtendedPrice) {
		toSerialize["extendedPrice"] = o.ExtendedPrice
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ReturnBranch) {
		toSerialize["returnBranch"] = o.ReturnBranch
	}
	if !IsNil(o.ShipFromBranch) {
		toSerialize["shipFromBranch"] = o.ShipFromBranch
	}
	return toSerialize, nil
}

type NullableReturnsDetailsResponseProductsInner struct {
	value *ReturnsDetailsResponseProductsInner
	isSet bool
}

func (v NullableReturnsDetailsResponseProductsInner) Get() *ReturnsDetailsResponseProductsInner {
	return v.value
}

func (v *NullableReturnsDetailsResponseProductsInner) Set(val *ReturnsDetailsResponseProductsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnsDetailsResponseProductsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnsDetailsResponseProductsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnsDetailsResponseProductsInner(val *ReturnsDetailsResponseProductsInner) *NullableReturnsDetailsResponseProductsInner {
	return &NullableReturnsDetailsResponseProductsInner{value: val, isSet: true}
}

func (v NullableReturnsDetailsResponseProductsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnsDetailsResponseProductsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


