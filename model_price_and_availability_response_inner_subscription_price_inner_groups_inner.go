/*
XI Sdk Resellers

For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner{}

// PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner struct for PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner
type PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner struct {
	// The name of the group
	GroupName NullableString `json:"groupName,omitempty"`
	// The description of the group.
	GroupDescription NullableString `json:"groupDescription,omitempty"`
}

// NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner instantiates a new PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner {
	this := PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner{}
	return &this
}

// NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInnerWithDefaults instantiates a new PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInnerWithDefaults() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner {
	this := PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner{}
	return &this
}

// GetGroupName returns the GroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) GetGroupName() string {
	if o == nil || IsNil(o.GroupName.Get()) {
		var ret string
		return ret
	}
	return *o.GroupName.Get()
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) GetGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupName.Get(), o.GroupName.IsSet()
}

// HasGroupName returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) HasGroupName() bool {
	if o != nil && o.GroupName.IsSet() {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given NullableString and assigns it to the GroupName field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) SetGroupName(v string) {
	o.GroupName.Set(&v)
}
// SetGroupNameNil sets the value for GroupName to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) SetGroupNameNil() {
	o.GroupName.Set(nil)
}

// UnsetGroupName ensures that no value is present for GroupName, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) UnsetGroupName() {
	o.GroupName.Unset()
}

// GetGroupDescription returns the GroupDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) GetGroupDescription() string {
	if o == nil || IsNil(o.GroupDescription.Get()) {
		var ret string
		return ret
	}
	return *o.GroupDescription.Get()
}

// GetGroupDescriptionOk returns a tuple with the GroupDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) GetGroupDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupDescription.Get(), o.GroupDescription.IsSet()
}

// HasGroupDescription returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) HasGroupDescription() bool {
	if o != nil && o.GroupDescription.IsSet() {
		return true
	}

	return false
}

// SetGroupDescription gets a reference to the given NullableString and assigns it to the GroupDescription field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) SetGroupDescription(v string) {
	o.GroupDescription.Set(&v)
}
// SetGroupDescriptionNil sets the value for GroupDescription to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) SetGroupDescriptionNil() {
	o.GroupDescription.Set(nil)
}

// UnsetGroupDescription ensures that no value is present for GroupDescription, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) UnsetGroupDescription() {
	o.GroupDescription.Unset()
}

func (o PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.GroupName.IsSet() {
		toSerialize["groupName"] = o.GroupName.Get()
	}
	if o.GroupDescription.IsSet() {
		toSerialize["groupDescription"] = o.GroupDescription.Get()
	}
	return toSerialize, nil
}

type NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner struct {
	value *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner
	isSet bool
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) Get() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner {
	return v.value
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) Set(val *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner(val *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner {
	return &NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner{value: val, isSet: true}
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


