/*
XI Sdk Resellers

For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the AsyncOrderCreateDTOLinesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AsyncOrderCreateDTOLinesInner{}

// AsyncOrderCreateDTOLinesInner struct for AsyncOrderCreateDTOLinesInner
type AsyncOrderCreateDTOLinesInner struct {
	// The reseller's line item number for reference in their system.
	CustomerLineNumber *string `json:"customerLineNumber,omitempty"`
	// Unique IngramMicro part number.
	IngramPartNumber *string `json:"ingramPartNumber,omitempty"`
	// The quantity of the line item.
	Quantity *string `json:"quantity,omitempty"`
	// Unit Price of Item
	UnitPrice *string `json:"unitPrice,omitempty"`
	SpecialBidNumber *string `json:"specialBidNumber,omitempty"`
	EndUserPrice *string `json:"endUserPrice,omitempty"`
	Notes *string `json:"notes,omitempty"`
	// The contact information for the end user/customer provided by the reseller. Used to determine pricing and discounts.
	EndUserInfo []AsyncOrderCreateDTOLinesInnerEndUserInfoInner `json:"endUserInfo,omitempty"`
}

// NewAsyncOrderCreateDTOLinesInner instantiates a new AsyncOrderCreateDTOLinesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAsyncOrderCreateDTOLinesInner() *AsyncOrderCreateDTOLinesInner {
	this := AsyncOrderCreateDTOLinesInner{}
	return &this
}

// NewAsyncOrderCreateDTOLinesInnerWithDefaults instantiates a new AsyncOrderCreateDTOLinesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAsyncOrderCreateDTOLinesInnerWithDefaults() *AsyncOrderCreateDTOLinesInner {
	this := AsyncOrderCreateDTOLinesInner{}
	return &this
}

// GetCustomerLineNumber returns the CustomerLineNumber field value if set, zero value otherwise.
func (o *AsyncOrderCreateDTOLinesInner) GetCustomerLineNumber() string {
	if o == nil || IsNil(o.CustomerLineNumber) {
		var ret string
		return ret
	}
	return *o.CustomerLineNumber
}

// GetCustomerLineNumberOk returns a tuple with the CustomerLineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncOrderCreateDTOLinesInner) GetCustomerLineNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerLineNumber) {
		return nil, false
	}
	return o.CustomerLineNumber, true
}

// HasCustomerLineNumber returns a boolean if a field has been set.
func (o *AsyncOrderCreateDTOLinesInner) HasCustomerLineNumber() bool {
	if o != nil && !IsNil(o.CustomerLineNumber) {
		return true
	}

	return false
}

// SetCustomerLineNumber gets a reference to the given string and assigns it to the CustomerLineNumber field.
func (o *AsyncOrderCreateDTOLinesInner) SetCustomerLineNumber(v string) {
	o.CustomerLineNumber = &v
}

// GetIngramPartNumber returns the IngramPartNumber field value if set, zero value otherwise.
func (o *AsyncOrderCreateDTOLinesInner) GetIngramPartNumber() string {
	if o == nil || IsNil(o.IngramPartNumber) {
		var ret string
		return ret
	}
	return *o.IngramPartNumber
}

// GetIngramPartNumberOk returns a tuple with the IngramPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncOrderCreateDTOLinesInner) GetIngramPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.IngramPartNumber) {
		return nil, false
	}
	return o.IngramPartNumber, true
}

// HasIngramPartNumber returns a boolean if a field has been set.
func (o *AsyncOrderCreateDTOLinesInner) HasIngramPartNumber() bool {
	if o != nil && !IsNil(o.IngramPartNumber) {
		return true
	}

	return false
}

// SetIngramPartNumber gets a reference to the given string and assigns it to the IngramPartNumber field.
func (o *AsyncOrderCreateDTOLinesInner) SetIngramPartNumber(v string) {
	o.IngramPartNumber = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *AsyncOrderCreateDTOLinesInner) GetQuantity() string {
	if o == nil || IsNil(o.Quantity) {
		var ret string
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncOrderCreateDTOLinesInner) GetQuantityOk() (*string, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *AsyncOrderCreateDTOLinesInner) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given string and assigns it to the Quantity field.
func (o *AsyncOrderCreateDTOLinesInner) SetQuantity(v string) {
	o.Quantity = &v
}

// GetUnitPrice returns the UnitPrice field value if set, zero value otherwise.
func (o *AsyncOrderCreateDTOLinesInner) GetUnitPrice() string {
	if o == nil || IsNil(o.UnitPrice) {
		var ret string
		return ret
	}
	return *o.UnitPrice
}

// GetUnitPriceOk returns a tuple with the UnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncOrderCreateDTOLinesInner) GetUnitPriceOk() (*string, bool) {
	if o == nil || IsNil(o.UnitPrice) {
		return nil, false
	}
	return o.UnitPrice, true
}

// HasUnitPrice returns a boolean if a field has been set.
func (o *AsyncOrderCreateDTOLinesInner) HasUnitPrice() bool {
	if o != nil && !IsNil(o.UnitPrice) {
		return true
	}

	return false
}

// SetUnitPrice gets a reference to the given string and assigns it to the UnitPrice field.
func (o *AsyncOrderCreateDTOLinesInner) SetUnitPrice(v string) {
	o.UnitPrice = &v
}

// GetSpecialBidNumber returns the SpecialBidNumber field value if set, zero value otherwise.
func (o *AsyncOrderCreateDTOLinesInner) GetSpecialBidNumber() string {
	if o == nil || IsNil(o.SpecialBidNumber) {
		var ret string
		return ret
	}
	return *o.SpecialBidNumber
}

// GetSpecialBidNumberOk returns a tuple with the SpecialBidNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncOrderCreateDTOLinesInner) GetSpecialBidNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SpecialBidNumber) {
		return nil, false
	}
	return o.SpecialBidNumber, true
}

// HasSpecialBidNumber returns a boolean if a field has been set.
func (o *AsyncOrderCreateDTOLinesInner) HasSpecialBidNumber() bool {
	if o != nil && !IsNil(o.SpecialBidNumber) {
		return true
	}

	return false
}

// SetSpecialBidNumber gets a reference to the given string and assigns it to the SpecialBidNumber field.
func (o *AsyncOrderCreateDTOLinesInner) SetSpecialBidNumber(v string) {
	o.SpecialBidNumber = &v
}

// GetEndUserPrice returns the EndUserPrice field value if set, zero value otherwise.
func (o *AsyncOrderCreateDTOLinesInner) GetEndUserPrice() string {
	if o == nil || IsNil(o.EndUserPrice) {
		var ret string
		return ret
	}
	return *o.EndUserPrice
}

// GetEndUserPriceOk returns a tuple with the EndUserPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncOrderCreateDTOLinesInner) GetEndUserPriceOk() (*string, bool) {
	if o == nil || IsNil(o.EndUserPrice) {
		return nil, false
	}
	return o.EndUserPrice, true
}

// HasEndUserPrice returns a boolean if a field has been set.
func (o *AsyncOrderCreateDTOLinesInner) HasEndUserPrice() bool {
	if o != nil && !IsNil(o.EndUserPrice) {
		return true
	}

	return false
}

// SetEndUserPrice gets a reference to the given string and assigns it to the EndUserPrice field.
func (o *AsyncOrderCreateDTOLinesInner) SetEndUserPrice(v string) {
	o.EndUserPrice = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *AsyncOrderCreateDTOLinesInner) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncOrderCreateDTOLinesInner) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *AsyncOrderCreateDTOLinesInner) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *AsyncOrderCreateDTOLinesInner) SetNotes(v string) {
	o.Notes = &v
}

// GetEndUserInfo returns the EndUserInfo field value if set, zero value otherwise.
func (o *AsyncOrderCreateDTOLinesInner) GetEndUserInfo() []AsyncOrderCreateDTOLinesInnerEndUserInfoInner {
	if o == nil || IsNil(o.EndUserInfo) {
		var ret []AsyncOrderCreateDTOLinesInnerEndUserInfoInner
		return ret
	}
	return o.EndUserInfo
}

// GetEndUserInfoOk returns a tuple with the EndUserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncOrderCreateDTOLinesInner) GetEndUserInfoOk() ([]AsyncOrderCreateDTOLinesInnerEndUserInfoInner, bool) {
	if o == nil || IsNil(o.EndUserInfo) {
		return nil, false
	}
	return o.EndUserInfo, true
}

// HasEndUserInfo returns a boolean if a field has been set.
func (o *AsyncOrderCreateDTOLinesInner) HasEndUserInfo() bool {
	if o != nil && !IsNil(o.EndUserInfo) {
		return true
	}

	return false
}

// SetEndUserInfo gets a reference to the given []AsyncOrderCreateDTOLinesInnerEndUserInfoInner and assigns it to the EndUserInfo field.
func (o *AsyncOrderCreateDTOLinesInner) SetEndUserInfo(v []AsyncOrderCreateDTOLinesInnerEndUserInfoInner) {
	o.EndUserInfo = v
}

func (o AsyncOrderCreateDTOLinesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AsyncOrderCreateDTOLinesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerLineNumber) {
		toSerialize["customerLineNumber"] = o.CustomerLineNumber
	}
	if !IsNil(o.IngramPartNumber) {
		toSerialize["ingramPartNumber"] = o.IngramPartNumber
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.UnitPrice) {
		toSerialize["unitPrice"] = o.UnitPrice
	}
	if !IsNil(o.SpecialBidNumber) {
		toSerialize["specialBidNumber"] = o.SpecialBidNumber
	}
	if !IsNil(o.EndUserPrice) {
		toSerialize["endUserPrice"] = o.EndUserPrice
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.EndUserInfo) {
		toSerialize["endUserInfo"] = o.EndUserInfo
	}
	return toSerialize, nil
}

type NullableAsyncOrderCreateDTOLinesInner struct {
	value *AsyncOrderCreateDTOLinesInner
	isSet bool
}

func (v NullableAsyncOrderCreateDTOLinesInner) Get() *AsyncOrderCreateDTOLinesInner {
	return v.value
}

func (v *NullableAsyncOrderCreateDTOLinesInner) Set(val *AsyncOrderCreateDTOLinesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAsyncOrderCreateDTOLinesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAsyncOrderCreateDTOLinesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAsyncOrderCreateDTOLinesInner(val *AsyncOrderCreateDTOLinesInner) *NullableAsyncOrderCreateDTOLinesInner {
	return &NullableAsyncOrderCreateDTOLinesInner{value: val, isSet: true}
}

func (v NullableAsyncOrderCreateDTOLinesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAsyncOrderCreateDTOLinesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


