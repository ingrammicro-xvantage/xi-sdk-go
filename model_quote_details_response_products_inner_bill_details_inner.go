/*
XI Sdk Resellers

For Resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the QuoteDetailsResponseProductsInnerBillDetailsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteDetailsResponseProductsInnerBillDetailsInner{}

// QuoteDetailsResponseProductsInnerBillDetailsInner struct for QuoteDetailsResponseProductsInnerBillDetailsInner
type QuoteDetailsResponseProductsInnerBillDetailsInner struct {
	Type *string `json:"type,omitempty"`
	Unit *string `json:"unit,omitempty"`
	Frequency *int32 `json:"frequency,omitempty"`
	UnitValue *string `json:"unitValue,omitempty"`
}

// NewQuoteDetailsResponseProductsInnerBillDetailsInner instantiates a new QuoteDetailsResponseProductsInnerBillDetailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteDetailsResponseProductsInnerBillDetailsInner() *QuoteDetailsResponseProductsInnerBillDetailsInner {
	this := QuoteDetailsResponseProductsInnerBillDetailsInner{}
	return &this
}

// NewQuoteDetailsResponseProductsInnerBillDetailsInnerWithDefaults instantiates a new QuoteDetailsResponseProductsInnerBillDetailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteDetailsResponseProductsInnerBillDetailsInnerWithDefaults() *QuoteDetailsResponseProductsInnerBillDetailsInner {
	this := QuoteDetailsResponseProductsInnerBillDetailsInner{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) SetType(v string) {
	o.Type = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) SetUnit(v string) {
	o.Unit = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) GetFrequency() int32 {
	if o == nil || IsNil(o.Frequency) {
		var ret int32
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) GetFrequencyOk() (*int32, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given int32 and assigns it to the Frequency field.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) SetFrequency(v int32) {
	o.Frequency = &v
}

// GetUnitValue returns the UnitValue field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) GetUnitValue() string {
	if o == nil || IsNil(o.UnitValue) {
		var ret string
		return ret
	}
	return *o.UnitValue
}

// GetUnitValueOk returns a tuple with the UnitValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) GetUnitValueOk() (*string, bool) {
	if o == nil || IsNil(o.UnitValue) {
		return nil, false
	}
	return o.UnitValue, true
}

// HasUnitValue returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) HasUnitValue() bool {
	if o != nil && !IsNil(o.UnitValue) {
		return true
	}

	return false
}

// SetUnitValue gets a reference to the given string and assigns it to the UnitValue field.
func (o *QuoteDetailsResponseProductsInnerBillDetailsInner) SetUnitValue(v string) {
	o.UnitValue = &v
}

func (o QuoteDetailsResponseProductsInnerBillDetailsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteDetailsResponseProductsInnerBillDetailsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	if !IsNil(o.Frequency) {
		toSerialize["frequency"] = o.Frequency
	}
	if !IsNil(o.UnitValue) {
		toSerialize["unitValue"] = o.UnitValue
	}
	return toSerialize, nil
}

type NullableQuoteDetailsResponseProductsInnerBillDetailsInner struct {
	value *QuoteDetailsResponseProductsInnerBillDetailsInner
	isSet bool
}

func (v NullableQuoteDetailsResponseProductsInnerBillDetailsInner) Get() *QuoteDetailsResponseProductsInnerBillDetailsInner {
	return v.value
}

func (v *NullableQuoteDetailsResponseProductsInnerBillDetailsInner) Set(val *QuoteDetailsResponseProductsInnerBillDetailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteDetailsResponseProductsInnerBillDetailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteDetailsResponseProductsInnerBillDetailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteDetailsResponseProductsInnerBillDetailsInner(val *QuoteDetailsResponseProductsInnerBillDetailsInner) *NullableQuoteDetailsResponseProductsInnerBillDetailsInner {
	return &NullableQuoteDetailsResponseProductsInnerBillDetailsInner{value: val, isSet: true}
}

func (v NullableQuoteDetailsResponseProductsInnerBillDetailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteDetailsResponseProductsInnerBillDetailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


