/*
XI Sdk Resellers

For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the InvoiceDetailsv61ResponseSummaryTotals type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceDetailsv61ResponseSummaryTotals{}

// InvoiceDetailsv61ResponseSummaryTotals struct for InvoiceDetailsv61ResponseSummaryTotals
type InvoiceDetailsv61ResponseSummaryTotals struct {
	// Net Invoice amount.
	NetInvoiceAmount *float64 `json:"netInvoiceAmount,omitempty"`
	// Discount amount.
	DiscountAmount *float64 `json:"discountAmount,omitempty"`
	// Type of discount.
	DiscountType *string `json:"discountType,omitempty"`
	// Total Tax amount.
	TotalTaxAmount *float64 `json:"totalTaxAmount,omitempty"`
	// Total amount due for the invoice.
	InvoicesAmountDue *float64 `json:"invoicesAmountDue,omitempty"`
	// Freight amount
	FreightAmount *float64 `json:"freightAmount,omitempty"`
}

// NewInvoiceDetailsv61ResponseSummaryTotals instantiates a new InvoiceDetailsv61ResponseSummaryTotals object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceDetailsv61ResponseSummaryTotals() *InvoiceDetailsv61ResponseSummaryTotals {
	this := InvoiceDetailsv61ResponseSummaryTotals{}
	return &this
}

// NewInvoiceDetailsv61ResponseSummaryTotalsWithDefaults instantiates a new InvoiceDetailsv61ResponseSummaryTotals object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceDetailsv61ResponseSummaryTotalsWithDefaults() *InvoiceDetailsv61ResponseSummaryTotals {
	this := InvoiceDetailsv61ResponseSummaryTotals{}
	return &this
}

// GetNetInvoiceAmount returns the NetInvoiceAmount field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseSummaryTotals) GetNetInvoiceAmount() float64 {
	if o == nil || IsNil(o.NetInvoiceAmount) {
		var ret float64
		return ret
	}
	return *o.NetInvoiceAmount
}

// GetNetInvoiceAmountOk returns a tuple with the NetInvoiceAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseSummaryTotals) GetNetInvoiceAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.NetInvoiceAmount) {
		return nil, false
	}
	return o.NetInvoiceAmount, true
}

// HasNetInvoiceAmount returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseSummaryTotals) HasNetInvoiceAmount() bool {
	if o != nil && !IsNil(o.NetInvoiceAmount) {
		return true
	}

	return false
}

// SetNetInvoiceAmount gets a reference to the given float64 and assigns it to the NetInvoiceAmount field.
func (o *InvoiceDetailsv61ResponseSummaryTotals) SetNetInvoiceAmount(v float64) {
	o.NetInvoiceAmount = &v
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseSummaryTotals) GetDiscountAmount() float64 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret float64
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseSummaryTotals) GetDiscountAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseSummaryTotals) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given float64 and assigns it to the DiscountAmount field.
func (o *InvoiceDetailsv61ResponseSummaryTotals) SetDiscountAmount(v float64) {
	o.DiscountAmount = &v
}

// GetDiscountType returns the DiscountType field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseSummaryTotals) GetDiscountType() string {
	if o == nil || IsNil(o.DiscountType) {
		var ret string
		return ret
	}
	return *o.DiscountType
}

// GetDiscountTypeOk returns a tuple with the DiscountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseSummaryTotals) GetDiscountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountType) {
		return nil, false
	}
	return o.DiscountType, true
}

// HasDiscountType returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseSummaryTotals) HasDiscountType() bool {
	if o != nil && !IsNil(o.DiscountType) {
		return true
	}

	return false
}

// SetDiscountType gets a reference to the given string and assigns it to the DiscountType field.
func (o *InvoiceDetailsv61ResponseSummaryTotals) SetDiscountType(v string) {
	o.DiscountType = &v
}

// GetTotalTaxAmount returns the TotalTaxAmount field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseSummaryTotals) GetTotalTaxAmount() float64 {
	if o == nil || IsNil(o.TotalTaxAmount) {
		var ret float64
		return ret
	}
	return *o.TotalTaxAmount
}

// GetTotalTaxAmountOk returns a tuple with the TotalTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseSummaryTotals) GetTotalTaxAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalTaxAmount) {
		return nil, false
	}
	return o.TotalTaxAmount, true
}

// HasTotalTaxAmount returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseSummaryTotals) HasTotalTaxAmount() bool {
	if o != nil && !IsNil(o.TotalTaxAmount) {
		return true
	}

	return false
}

// SetTotalTaxAmount gets a reference to the given float64 and assigns it to the TotalTaxAmount field.
func (o *InvoiceDetailsv61ResponseSummaryTotals) SetTotalTaxAmount(v float64) {
	o.TotalTaxAmount = &v
}

// GetInvoicesAmountDue returns the InvoicesAmountDue field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseSummaryTotals) GetInvoicesAmountDue() float64 {
	if o == nil || IsNil(o.InvoicesAmountDue) {
		var ret float64
		return ret
	}
	return *o.InvoicesAmountDue
}

// GetInvoicesAmountDueOk returns a tuple with the InvoicesAmountDue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseSummaryTotals) GetInvoicesAmountDueOk() (*float64, bool) {
	if o == nil || IsNil(o.InvoicesAmountDue) {
		return nil, false
	}
	return o.InvoicesAmountDue, true
}

// HasInvoicesAmountDue returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseSummaryTotals) HasInvoicesAmountDue() bool {
	if o != nil && !IsNil(o.InvoicesAmountDue) {
		return true
	}

	return false
}

// SetInvoicesAmountDue gets a reference to the given float64 and assigns it to the InvoicesAmountDue field.
func (o *InvoiceDetailsv61ResponseSummaryTotals) SetInvoicesAmountDue(v float64) {
	o.InvoicesAmountDue = &v
}

// GetFreightAmount returns the FreightAmount field value if set, zero value otherwise.
func (o *InvoiceDetailsv61ResponseSummaryTotals) GetFreightAmount() float64 {
	if o == nil || IsNil(o.FreightAmount) {
		var ret float64
		return ret
	}
	return *o.FreightAmount
}

// GetFreightAmountOk returns a tuple with the FreightAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDetailsv61ResponseSummaryTotals) GetFreightAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.FreightAmount) {
		return nil, false
	}
	return o.FreightAmount, true
}

// HasFreightAmount returns a boolean if a field has been set.
func (o *InvoiceDetailsv61ResponseSummaryTotals) HasFreightAmount() bool {
	if o != nil && !IsNil(o.FreightAmount) {
		return true
	}

	return false
}

// SetFreightAmount gets a reference to the given float64 and assigns it to the FreightAmount field.
func (o *InvoiceDetailsv61ResponseSummaryTotals) SetFreightAmount(v float64) {
	o.FreightAmount = &v
}

func (o InvoiceDetailsv61ResponseSummaryTotals) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceDetailsv61ResponseSummaryTotals) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetInvoiceAmount) {
		toSerialize["netInvoiceAmount"] = o.NetInvoiceAmount
	}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discountAmount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountType) {
		toSerialize["discountType"] = o.DiscountType
	}
	if !IsNil(o.TotalTaxAmount) {
		toSerialize["totalTaxAmount"] = o.TotalTaxAmount
	}
	if !IsNil(o.InvoicesAmountDue) {
		toSerialize["invoicesAmountDue"] = o.InvoicesAmountDue
	}
	if !IsNil(o.FreightAmount) {
		toSerialize["freightAmount"] = o.FreightAmount
	}
	return toSerialize, nil
}

type NullableInvoiceDetailsv61ResponseSummaryTotals struct {
	value *InvoiceDetailsv61ResponseSummaryTotals
	isSet bool
}

func (v NullableInvoiceDetailsv61ResponseSummaryTotals) Get() *InvoiceDetailsv61ResponseSummaryTotals {
	return v.value
}

func (v *NullableInvoiceDetailsv61ResponseSummaryTotals) Set(val *InvoiceDetailsv61ResponseSummaryTotals) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceDetailsv61ResponseSummaryTotals) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceDetailsv61ResponseSummaryTotals) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceDetailsv61ResponseSummaryTotals(val *InvoiceDetailsv61ResponseSummaryTotals) *NullableInvoiceDetailsv61ResponseSummaryTotals {
	return &NullableInvoiceDetailsv61ResponseSummaryTotals{value: val, isSet: true}
}

func (v NullableInvoiceDetailsv61ResponseSummaryTotals) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceDetailsv61ResponseSummaryTotals) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


