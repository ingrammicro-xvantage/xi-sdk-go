/*
XI SDK Resellers

For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the ProductSearchResponseCatalogInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductSearchResponseCatalogInner{}

// ProductSearchResponseCatalogInner struct for ProductSearchResponseCatalogInner
type ProductSearchResponseCatalogInner struct {
	// The description of the product.
	Description *string `json:"description,omitempty"`
	// The category of the product. Example: Displays.
	Category *string `json:"category,omitempty"`
	// The sub category for the product. Example: ComputernMonitors.
	SubCategory *string `json:"subCategory,omitempty"`
	// The product type of the product. Example: LCD Monitors.
	ProductType *string `json:"productType,omitempty"`
	// The Unique IngramMicro part number for the product.
	IngramPartNumber *string `json:"ingramPartNumber,omitempty"`
	// The vendor part number for the product.
	VendorPartNumber *string `json:"vendorPartNumber,omitempty"`
	// The UPC code for the product. Consists of 12 numeric digits that are uniquly assigned to each trade item.
	UpcCode *string `json:"upcCode,omitempty"`
	// The name of the vendor/manufacturer of the product.
	VendorName *string `json:"vendorName,omitempty"`
	// Indicates whether the contact information for the end user/customer is required, which determines pricing and discounts.
	EndUserRequired *string `json:"endUserRequired,omitempty"`
	// Specifies if there are discounts available for the product.
	HasDiscounts *string `json:"hasDiscounts,omitempty"`
	// The SKU type of product. One of Physical, Digital, or Any.
	Type *string `json:"type,omitempty"`
	// Indicates if the product has been discontinued.
	Discontinued *string `json:"discontinued,omitempty"`
	// Indicates if the product is new. For digital products, newer than 10 days. For physical products, newer than 150 days.
	NewProduct *string `json:"newProduct,omitempty"`
	// Indicates if the product will be shipped directly to the reseller or end user from the vendor/manufacturer.
	DirectShip *string `json:"directShip,omitempty"`
	// Indicates if the product has a warranty.
	HasWarranty *string `json:"hasWarranty,omitempty"`
	Links []ProductSearchResponseCatalogInnerLinksInner `json:"links,omitempty"`
	// The extended description of the product.
	ExtraDescription *string `json:"extraDescription,omitempty"`
	// Identifies a SKU that is a comparable subsititution of the current SKU if available.
	ReplacementSku *string `json:"replacementSku,omitempty"`
	// It is true when it exists in matched queries field of ealstic search API.
	AuthorizedToPurchase *string `json:"authorizedToPurchase,omitempty"`
}

// NewProductSearchResponseCatalogInner instantiates a new ProductSearchResponseCatalogInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductSearchResponseCatalogInner() *ProductSearchResponseCatalogInner {
	this := ProductSearchResponseCatalogInner{}
	return &this
}

// NewProductSearchResponseCatalogInnerWithDefaults instantiates a new ProductSearchResponseCatalogInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductSearchResponseCatalogInnerWithDefaults() *ProductSearchResponseCatalogInner {
	this := ProductSearchResponseCatalogInner{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProductSearchResponseCatalogInner) SetDescription(v string) {
	o.Description = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ProductSearchResponseCatalogInner) SetCategory(v string) {
	o.Category = &v
}

// GetSubCategory returns the SubCategory field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetSubCategory() string {
	if o == nil || IsNil(o.SubCategory) {
		var ret string
		return ret
	}
	return *o.SubCategory
}

// GetSubCategoryOk returns a tuple with the SubCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetSubCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.SubCategory) {
		return nil, false
	}
	return o.SubCategory, true
}

// HasSubCategory returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasSubCategory() bool {
	if o != nil && !IsNil(o.SubCategory) {
		return true
	}

	return false
}

// SetSubCategory gets a reference to the given string and assigns it to the SubCategory field.
func (o *ProductSearchResponseCatalogInner) SetSubCategory(v string) {
	o.SubCategory = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetProductType() string {
	if o == nil || IsNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetProductTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasProductType() bool {
	if o != nil && !IsNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *ProductSearchResponseCatalogInner) SetProductType(v string) {
	o.ProductType = &v
}

// GetIngramPartNumber returns the IngramPartNumber field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetIngramPartNumber() string {
	if o == nil || IsNil(o.IngramPartNumber) {
		var ret string
		return ret
	}
	return *o.IngramPartNumber
}

// GetIngramPartNumberOk returns a tuple with the IngramPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetIngramPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.IngramPartNumber) {
		return nil, false
	}
	return o.IngramPartNumber, true
}

// HasIngramPartNumber returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasIngramPartNumber() bool {
	if o != nil && !IsNil(o.IngramPartNumber) {
		return true
	}

	return false
}

// SetIngramPartNumber gets a reference to the given string and assigns it to the IngramPartNumber field.
func (o *ProductSearchResponseCatalogInner) SetIngramPartNumber(v string) {
	o.IngramPartNumber = &v
}

// GetVendorPartNumber returns the VendorPartNumber field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetVendorPartNumber() string {
	if o == nil || IsNil(o.VendorPartNumber) {
		var ret string
		return ret
	}
	return *o.VendorPartNumber
}

// GetVendorPartNumberOk returns a tuple with the VendorPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetVendorPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VendorPartNumber) {
		return nil, false
	}
	return o.VendorPartNumber, true
}

// HasVendorPartNumber returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasVendorPartNumber() bool {
	if o != nil && !IsNil(o.VendorPartNumber) {
		return true
	}

	return false
}

// SetVendorPartNumber gets a reference to the given string and assigns it to the VendorPartNumber field.
func (o *ProductSearchResponseCatalogInner) SetVendorPartNumber(v string) {
	o.VendorPartNumber = &v
}

// GetUpcCode returns the UpcCode field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetUpcCode() string {
	if o == nil || IsNil(o.UpcCode) {
		var ret string
		return ret
	}
	return *o.UpcCode
}

// GetUpcCodeOk returns a tuple with the UpcCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetUpcCodeOk() (*string, bool) {
	if o == nil || IsNil(o.UpcCode) {
		return nil, false
	}
	return o.UpcCode, true
}

// HasUpcCode returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasUpcCode() bool {
	if o != nil && !IsNil(o.UpcCode) {
		return true
	}

	return false
}

// SetUpcCode gets a reference to the given string and assigns it to the UpcCode field.
func (o *ProductSearchResponseCatalogInner) SetUpcCode(v string) {
	o.UpcCode = &v
}

// GetVendorName returns the VendorName field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetVendorName() string {
	if o == nil || IsNil(o.VendorName) {
		var ret string
		return ret
	}
	return *o.VendorName
}

// GetVendorNameOk returns a tuple with the VendorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetVendorNameOk() (*string, bool) {
	if o == nil || IsNil(o.VendorName) {
		return nil, false
	}
	return o.VendorName, true
}

// HasVendorName returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasVendorName() bool {
	if o != nil && !IsNil(o.VendorName) {
		return true
	}

	return false
}

// SetVendorName gets a reference to the given string and assigns it to the VendorName field.
func (o *ProductSearchResponseCatalogInner) SetVendorName(v string) {
	o.VendorName = &v
}

// GetEndUserRequired returns the EndUserRequired field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetEndUserRequired() string {
	if o == nil || IsNil(o.EndUserRequired) {
		var ret string
		return ret
	}
	return *o.EndUserRequired
}

// GetEndUserRequiredOk returns a tuple with the EndUserRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetEndUserRequiredOk() (*string, bool) {
	if o == nil || IsNil(o.EndUserRequired) {
		return nil, false
	}
	return o.EndUserRequired, true
}

// HasEndUserRequired returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasEndUserRequired() bool {
	if o != nil && !IsNil(o.EndUserRequired) {
		return true
	}

	return false
}

// SetEndUserRequired gets a reference to the given string and assigns it to the EndUserRequired field.
func (o *ProductSearchResponseCatalogInner) SetEndUserRequired(v string) {
	o.EndUserRequired = &v
}

// GetHasDiscounts returns the HasDiscounts field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetHasDiscounts() string {
	if o == nil || IsNil(o.HasDiscounts) {
		var ret string
		return ret
	}
	return *o.HasDiscounts
}

// GetHasDiscountsOk returns a tuple with the HasDiscounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetHasDiscountsOk() (*string, bool) {
	if o == nil || IsNil(o.HasDiscounts) {
		return nil, false
	}
	return o.HasDiscounts, true
}

// HasHasDiscounts returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasHasDiscounts() bool {
	if o != nil && !IsNil(o.HasDiscounts) {
		return true
	}

	return false
}

// SetHasDiscounts gets a reference to the given string and assigns it to the HasDiscounts field.
func (o *ProductSearchResponseCatalogInner) SetHasDiscounts(v string) {
	o.HasDiscounts = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ProductSearchResponseCatalogInner) SetType(v string) {
	o.Type = &v
}

// GetDiscontinued returns the Discontinued field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetDiscontinued() string {
	if o == nil || IsNil(o.Discontinued) {
		var ret string
		return ret
	}
	return *o.Discontinued
}

// GetDiscontinuedOk returns a tuple with the Discontinued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetDiscontinuedOk() (*string, bool) {
	if o == nil || IsNil(o.Discontinued) {
		return nil, false
	}
	return o.Discontinued, true
}

// HasDiscontinued returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasDiscontinued() bool {
	if o != nil && !IsNil(o.Discontinued) {
		return true
	}

	return false
}

// SetDiscontinued gets a reference to the given string and assigns it to the Discontinued field.
func (o *ProductSearchResponseCatalogInner) SetDiscontinued(v string) {
	o.Discontinued = &v
}

// GetNewProduct returns the NewProduct field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetNewProduct() string {
	if o == nil || IsNil(o.NewProduct) {
		var ret string
		return ret
	}
	return *o.NewProduct
}

// GetNewProductOk returns a tuple with the NewProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetNewProductOk() (*string, bool) {
	if o == nil || IsNil(o.NewProduct) {
		return nil, false
	}
	return o.NewProduct, true
}

// HasNewProduct returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasNewProduct() bool {
	if o != nil && !IsNil(o.NewProduct) {
		return true
	}

	return false
}

// SetNewProduct gets a reference to the given string and assigns it to the NewProduct field.
func (o *ProductSearchResponseCatalogInner) SetNewProduct(v string) {
	o.NewProduct = &v
}

// GetDirectShip returns the DirectShip field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetDirectShip() string {
	if o == nil || IsNil(o.DirectShip) {
		var ret string
		return ret
	}
	return *o.DirectShip
}

// GetDirectShipOk returns a tuple with the DirectShip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetDirectShipOk() (*string, bool) {
	if o == nil || IsNil(o.DirectShip) {
		return nil, false
	}
	return o.DirectShip, true
}

// HasDirectShip returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasDirectShip() bool {
	if o != nil && !IsNil(o.DirectShip) {
		return true
	}

	return false
}

// SetDirectShip gets a reference to the given string and assigns it to the DirectShip field.
func (o *ProductSearchResponseCatalogInner) SetDirectShip(v string) {
	o.DirectShip = &v
}

// GetHasWarranty returns the HasWarranty field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetHasWarranty() string {
	if o == nil || IsNil(o.HasWarranty) {
		var ret string
		return ret
	}
	return *o.HasWarranty
}

// GetHasWarrantyOk returns a tuple with the HasWarranty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetHasWarrantyOk() (*string, bool) {
	if o == nil || IsNil(o.HasWarranty) {
		return nil, false
	}
	return o.HasWarranty, true
}

// HasHasWarranty returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasHasWarranty() bool {
	if o != nil && !IsNil(o.HasWarranty) {
		return true
	}

	return false
}

// SetHasWarranty gets a reference to the given string and assigns it to the HasWarranty field.
func (o *ProductSearchResponseCatalogInner) SetHasWarranty(v string) {
	o.HasWarranty = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetLinks() []ProductSearchResponseCatalogInnerLinksInner {
	if o == nil || IsNil(o.Links) {
		var ret []ProductSearchResponseCatalogInnerLinksInner
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetLinksOk() ([]ProductSearchResponseCatalogInnerLinksInner, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ProductSearchResponseCatalogInnerLinksInner and assigns it to the Links field.
func (o *ProductSearchResponseCatalogInner) SetLinks(v []ProductSearchResponseCatalogInnerLinksInner) {
	o.Links = v
}

// GetExtraDescription returns the ExtraDescription field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetExtraDescription() string {
	if o == nil || IsNil(o.ExtraDescription) {
		var ret string
		return ret
	}
	return *o.ExtraDescription
}

// GetExtraDescriptionOk returns a tuple with the ExtraDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetExtraDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraDescription) {
		return nil, false
	}
	return o.ExtraDescription, true
}

// HasExtraDescription returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasExtraDescription() bool {
	if o != nil && !IsNil(o.ExtraDescription) {
		return true
	}

	return false
}

// SetExtraDescription gets a reference to the given string and assigns it to the ExtraDescription field.
func (o *ProductSearchResponseCatalogInner) SetExtraDescription(v string) {
	o.ExtraDescription = &v
}

// GetReplacementSku returns the ReplacementSku field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetReplacementSku() string {
	if o == nil || IsNil(o.ReplacementSku) {
		var ret string
		return ret
	}
	return *o.ReplacementSku
}

// GetReplacementSkuOk returns a tuple with the ReplacementSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetReplacementSkuOk() (*string, bool) {
	if o == nil || IsNil(o.ReplacementSku) {
		return nil, false
	}
	return o.ReplacementSku, true
}

// HasReplacementSku returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasReplacementSku() bool {
	if o != nil && !IsNil(o.ReplacementSku) {
		return true
	}

	return false
}

// SetReplacementSku gets a reference to the given string and assigns it to the ReplacementSku field.
func (o *ProductSearchResponseCatalogInner) SetReplacementSku(v string) {
	o.ReplacementSku = &v
}

// GetAuthorizedToPurchase returns the AuthorizedToPurchase field value if set, zero value otherwise.
func (o *ProductSearchResponseCatalogInner) GetAuthorizedToPurchase() string {
	if o == nil || IsNil(o.AuthorizedToPurchase) {
		var ret string
		return ret
	}
	return *o.AuthorizedToPurchase
}

// GetAuthorizedToPurchaseOk returns a tuple with the AuthorizedToPurchase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponseCatalogInner) GetAuthorizedToPurchaseOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizedToPurchase) {
		return nil, false
	}
	return o.AuthorizedToPurchase, true
}

// HasAuthorizedToPurchase returns a boolean if a field has been set.
func (o *ProductSearchResponseCatalogInner) HasAuthorizedToPurchase() bool {
	if o != nil && !IsNil(o.AuthorizedToPurchase) {
		return true
	}

	return false
}

// SetAuthorizedToPurchase gets a reference to the given string and assigns it to the AuthorizedToPurchase field.
func (o *ProductSearchResponseCatalogInner) SetAuthorizedToPurchase(v string) {
	o.AuthorizedToPurchase = &v
}

func (o ProductSearchResponseCatalogInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductSearchResponseCatalogInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.SubCategory) {
		toSerialize["subCategory"] = o.SubCategory
	}
	if !IsNil(o.ProductType) {
		toSerialize["productType"] = o.ProductType
	}
	if !IsNil(o.IngramPartNumber) {
		toSerialize["ingramPartNumber"] = o.IngramPartNumber
	}
	if !IsNil(o.VendorPartNumber) {
		toSerialize["vendorPartNumber"] = o.VendorPartNumber
	}
	if !IsNil(o.UpcCode) {
		toSerialize["upcCode"] = o.UpcCode
	}
	if !IsNil(o.VendorName) {
		toSerialize["vendorName"] = o.VendorName
	}
	if !IsNil(o.EndUserRequired) {
		toSerialize["endUserRequired"] = o.EndUserRequired
	}
	if !IsNil(o.HasDiscounts) {
		toSerialize["hasDiscounts"] = o.HasDiscounts
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Discontinued) {
		toSerialize["discontinued"] = o.Discontinued
	}
	if !IsNil(o.NewProduct) {
		toSerialize["newProduct"] = o.NewProduct
	}
	if !IsNil(o.DirectShip) {
		toSerialize["directShip"] = o.DirectShip
	}
	if !IsNil(o.HasWarranty) {
		toSerialize["hasWarranty"] = o.HasWarranty
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.ExtraDescription) {
		toSerialize["extraDescription"] = o.ExtraDescription
	}
	if !IsNil(o.ReplacementSku) {
		toSerialize["replacementSku"] = o.ReplacementSku
	}
	if !IsNil(o.AuthorizedToPurchase) {
		toSerialize["authorizedToPurchase"] = o.AuthorizedToPurchase
	}
	return toSerialize, nil
}

type NullableProductSearchResponseCatalogInner struct {
	value *ProductSearchResponseCatalogInner
	isSet bool
}

func (v NullableProductSearchResponseCatalogInner) Get() *ProductSearchResponseCatalogInner {
	return v.value
}

func (v *NullableProductSearchResponseCatalogInner) Set(val *ProductSearchResponseCatalogInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProductSearchResponseCatalogInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProductSearchResponseCatalogInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductSearchResponseCatalogInner(val *ProductSearchResponseCatalogInner) *NullableProductSearchResponseCatalogInner {
	return &NullableProductSearchResponseCatalogInner{value: val, isSet: true}
}

func (v NullableProductSearchResponseCatalogInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductSearchResponseCatalogInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


