/*
Reseller API Documentation

For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

API version: 6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi-sdk-resellers-go

import (
	"encoding/json"
)

// checks if the MultiSKUPriceAndStockRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiSKUPriceAndStockRequest{}

// MultiSKUPriceAndStockRequest Request object model for the multi sku price and stock API endpoint
type MultiSKUPriceAndStockRequest struct {
	Servicerequest *MultiSKUPriceAndStockRequestServicerequest `json:"servicerequest,omitempty"`
}

// NewMultiSKUPriceAndStockRequest instantiates a new MultiSKUPriceAndStockRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiSKUPriceAndStockRequest() *MultiSKUPriceAndStockRequest {
	this := MultiSKUPriceAndStockRequest{}
	return &this
}

// NewMultiSKUPriceAndStockRequestWithDefaults instantiates a new MultiSKUPriceAndStockRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiSKUPriceAndStockRequestWithDefaults() *MultiSKUPriceAndStockRequest {
	this := MultiSKUPriceAndStockRequest{}
	return &this
}

// GetServicerequest returns the Servicerequest field value if set, zero value otherwise.
func (o *MultiSKUPriceAndStockRequest) GetServicerequest() MultiSKUPriceAndStockRequestServicerequest {
	if o == nil || IsNil(o.Servicerequest) {
		var ret MultiSKUPriceAndStockRequestServicerequest
		return ret
	}
	return *o.Servicerequest
}

// GetServicerequestOk returns a tuple with the Servicerequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiSKUPriceAndStockRequest) GetServicerequestOk() (*MultiSKUPriceAndStockRequestServicerequest, bool) {
	if o == nil || IsNil(o.Servicerequest) {
		return nil, false
	}
	return o.Servicerequest, true
}

// HasServicerequest returns a boolean if a field has been set.
func (o *MultiSKUPriceAndStockRequest) HasServicerequest() bool {
	if o != nil && !IsNil(o.Servicerequest) {
		return true
	}

	return false
}

// SetServicerequest gets a reference to the given MultiSKUPriceAndStockRequestServicerequest and assigns it to the Servicerequest field.
func (o *MultiSKUPriceAndStockRequest) SetServicerequest(v MultiSKUPriceAndStockRequestServicerequest) {
	o.Servicerequest = &v
}

func (o MultiSKUPriceAndStockRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiSKUPriceAndStockRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Servicerequest) {
		toSerialize["servicerequest"] = o.Servicerequest
	}
	return toSerialize, nil
}

type NullableMultiSKUPriceAndStockRequest struct {
	value *MultiSKUPriceAndStockRequest
	isSet bool
}

func (v NullableMultiSKUPriceAndStockRequest) Get() *MultiSKUPriceAndStockRequest {
	return v.value
}

func (v *NullableMultiSKUPriceAndStockRequest) Set(val *MultiSKUPriceAndStockRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiSKUPriceAndStockRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiSKUPriceAndStockRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiSKUPriceAndStockRequest(val *MultiSKUPriceAndStockRequest) *NullableMultiSKUPriceAndStockRequest {
	return &NullableMultiSKUPriceAndStockRequest{value: val, isSet: true}
}

func (v NullableMultiSKUPriceAndStockRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiSKUPriceAndStockRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


