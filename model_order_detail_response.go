/*
XI Sdk Resellers

For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the OrderDetailResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderDetailResponse{}

// OrderDetailResponse struct for OrderDetailResponse
type OrderDetailResponse struct {
	// The IngramMicro sales order number.
	IngramOrderNumber *string `json:"ingramOrderNumber,omitempty"`
	// The date and time in UTC format that the order was created.
	IngramOrderDate *string `json:"ingramOrderDate,omitempty"`
	// The order type. One of B = Branch Transfer, C = COD, D = Direct Ship, F = Future Order, P = Special Order, M = Memo, Q = Quote, S = Sales Order.
	OrderType *string `json:"orderType,omitempty"`
	// The reseller's order number for reference in their system.
	CustomerOrderNumber *string `json:"customerOrderNumber,omitempty"`
	// The end user/customer's order number for reference in their system.
	EndCustomerOrderNumber *string `json:"endCustomerOrderNumber,omitempty"`
	// The vendor's order number for reference in their system.
	VendorSalesOrderNumber *string `json:"vendorSalesOrderNumber,omitempty"`
	// The header-level status of the order. One of- Shipped, Canceled, Backordered, Processing, On Hold, Delivered.
	OrderStatus *string `json:"orderStatus,omitempty"`
	// The total cost for the order, includes subtotal, freight charges, and tax.
	OrderTotal *float32 `json:"orderTotal,omitempty"`
	// The sub total cost for the order, not including tax and freight.
	OrderSubTotal *float32 `json:"orderSubTotal,omitempty"`
	// The freight charges for the order.
	FreightCharges *float32 `json:"freightCharges,omitempty"`
	// The country-specific three digit ISO 4217 currency code for the order.
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// The total weight of the order. Pounds in North America, KG in all other countries.
	TotalWeight *float32 `json:"totalWeight,omitempty"`
	// The total tax for the order.
	TotalTax *float32 `json:"totalTax,omitempty"`
	// The payment terms of the order. (Ex- Net 30 days).
	PaymentTerms *string `json:"paymentTerms,omitempty"`
	// The header-level notes for the order.
	Notes *string `json:"notes,omitempty"`
	BillToInfo *OrderDetailResponseBillToInfo `json:"billToInfo,omitempty"`
	ShipToInfo *OrderDetailResponseShipToInfo `json:"shipToInfo,omitempty"`
	EndUserInfo *OrderDetailResponseEndUserInfo `json:"endUserInfo,omitempty"`
	Lines []OrderDetailResponseLinesInner `json:"lines,omitempty"`
	MiscellaneousCharges []OrderDetailResponseMiscellaneousChargesInner `json:"miscellaneousCharges,omitempty"`
	AdditionalAttributes []OrderDetailResponseLinesInnerAdditionalAttributesInner `json:"additionalAttributes,omitempty"`
}

// NewOrderDetailResponse instantiates a new OrderDetailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderDetailResponse() *OrderDetailResponse {
	this := OrderDetailResponse{}
	return &this
}

// NewOrderDetailResponseWithDefaults instantiates a new OrderDetailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderDetailResponseWithDefaults() *OrderDetailResponse {
	this := OrderDetailResponse{}
	return &this
}

// GetIngramOrderNumber returns the IngramOrderNumber field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetIngramOrderNumber() string {
	if o == nil || IsNil(o.IngramOrderNumber) {
		var ret string
		return ret
	}
	return *o.IngramOrderNumber
}

// GetIngramOrderNumberOk returns a tuple with the IngramOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetIngramOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.IngramOrderNumber) {
		return nil, false
	}
	return o.IngramOrderNumber, true
}

// HasIngramOrderNumber returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasIngramOrderNumber() bool {
	if o != nil && !IsNil(o.IngramOrderNumber) {
		return true
	}

	return false
}

// SetIngramOrderNumber gets a reference to the given string and assigns it to the IngramOrderNumber field.
func (o *OrderDetailResponse) SetIngramOrderNumber(v string) {
	o.IngramOrderNumber = &v
}

// GetIngramOrderDate returns the IngramOrderDate field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetIngramOrderDate() string {
	if o == nil || IsNil(o.IngramOrderDate) {
		var ret string
		return ret
	}
	return *o.IngramOrderDate
}

// GetIngramOrderDateOk returns a tuple with the IngramOrderDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetIngramOrderDateOk() (*string, bool) {
	if o == nil || IsNil(o.IngramOrderDate) {
		return nil, false
	}
	return o.IngramOrderDate, true
}

// HasIngramOrderDate returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasIngramOrderDate() bool {
	if o != nil && !IsNil(o.IngramOrderDate) {
		return true
	}

	return false
}

// SetIngramOrderDate gets a reference to the given string and assigns it to the IngramOrderDate field.
func (o *OrderDetailResponse) SetIngramOrderDate(v string) {
	o.IngramOrderDate = &v
}

// GetOrderType returns the OrderType field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetOrderType() string {
	if o == nil || IsNil(o.OrderType) {
		var ret string
		return ret
	}
	return *o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetOrderTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OrderType) {
		return nil, false
	}
	return o.OrderType, true
}

// HasOrderType returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasOrderType() bool {
	if o != nil && !IsNil(o.OrderType) {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given string and assigns it to the OrderType field.
func (o *OrderDetailResponse) SetOrderType(v string) {
	o.OrderType = &v
}

// GetCustomerOrderNumber returns the CustomerOrderNumber field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetCustomerOrderNumber() string {
	if o == nil || IsNil(o.CustomerOrderNumber) {
		var ret string
		return ret
	}
	return *o.CustomerOrderNumber
}

// GetCustomerOrderNumberOk returns a tuple with the CustomerOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetCustomerOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerOrderNumber) {
		return nil, false
	}
	return o.CustomerOrderNumber, true
}

// HasCustomerOrderNumber returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasCustomerOrderNumber() bool {
	if o != nil && !IsNil(o.CustomerOrderNumber) {
		return true
	}

	return false
}

// SetCustomerOrderNumber gets a reference to the given string and assigns it to the CustomerOrderNumber field.
func (o *OrderDetailResponse) SetCustomerOrderNumber(v string) {
	o.CustomerOrderNumber = &v
}

// GetEndCustomerOrderNumber returns the EndCustomerOrderNumber field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetEndCustomerOrderNumber() string {
	if o == nil || IsNil(o.EndCustomerOrderNumber) {
		var ret string
		return ret
	}
	return *o.EndCustomerOrderNumber
}

// GetEndCustomerOrderNumberOk returns a tuple with the EndCustomerOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetEndCustomerOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EndCustomerOrderNumber) {
		return nil, false
	}
	return o.EndCustomerOrderNumber, true
}

// HasEndCustomerOrderNumber returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasEndCustomerOrderNumber() bool {
	if o != nil && !IsNil(o.EndCustomerOrderNumber) {
		return true
	}

	return false
}

// SetEndCustomerOrderNumber gets a reference to the given string and assigns it to the EndCustomerOrderNumber field.
func (o *OrderDetailResponse) SetEndCustomerOrderNumber(v string) {
	o.EndCustomerOrderNumber = &v
}

// GetVendorSalesOrderNumber returns the VendorSalesOrderNumber field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetVendorSalesOrderNumber() string {
	if o == nil || IsNil(o.VendorSalesOrderNumber) {
		var ret string
		return ret
	}
	return *o.VendorSalesOrderNumber
}

// GetVendorSalesOrderNumberOk returns a tuple with the VendorSalesOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetVendorSalesOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VendorSalesOrderNumber) {
		return nil, false
	}
	return o.VendorSalesOrderNumber, true
}

// HasVendorSalesOrderNumber returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasVendorSalesOrderNumber() bool {
	if o != nil && !IsNil(o.VendorSalesOrderNumber) {
		return true
	}

	return false
}

// SetVendorSalesOrderNumber gets a reference to the given string and assigns it to the VendorSalesOrderNumber field.
func (o *OrderDetailResponse) SetVendorSalesOrderNumber(v string) {
	o.VendorSalesOrderNumber = &v
}

// GetOrderStatus returns the OrderStatus field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetOrderStatus() string {
	if o == nil || IsNil(o.OrderStatus) {
		var ret string
		return ret
	}
	return *o.OrderStatus
}

// GetOrderStatusOk returns a tuple with the OrderStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetOrderStatusOk() (*string, bool) {
	if o == nil || IsNil(o.OrderStatus) {
		return nil, false
	}
	return o.OrderStatus, true
}

// HasOrderStatus returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasOrderStatus() bool {
	if o != nil && !IsNil(o.OrderStatus) {
		return true
	}

	return false
}

// SetOrderStatus gets a reference to the given string and assigns it to the OrderStatus field.
func (o *OrderDetailResponse) SetOrderStatus(v string) {
	o.OrderStatus = &v
}

// GetOrderTotal returns the OrderTotal field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetOrderTotal() float32 {
	if o == nil || IsNil(o.OrderTotal) {
		var ret float32
		return ret
	}
	return *o.OrderTotal
}

// GetOrderTotalOk returns a tuple with the OrderTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetOrderTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.OrderTotal) {
		return nil, false
	}
	return o.OrderTotal, true
}

// HasOrderTotal returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasOrderTotal() bool {
	if o != nil && !IsNil(o.OrderTotal) {
		return true
	}

	return false
}

// SetOrderTotal gets a reference to the given float32 and assigns it to the OrderTotal field.
func (o *OrderDetailResponse) SetOrderTotal(v float32) {
	o.OrderTotal = &v
}

// GetOrderSubTotal returns the OrderSubTotal field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetOrderSubTotal() float32 {
	if o == nil || IsNil(o.OrderSubTotal) {
		var ret float32
		return ret
	}
	return *o.OrderSubTotal
}

// GetOrderSubTotalOk returns a tuple with the OrderSubTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetOrderSubTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.OrderSubTotal) {
		return nil, false
	}
	return o.OrderSubTotal, true
}

// HasOrderSubTotal returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasOrderSubTotal() bool {
	if o != nil && !IsNil(o.OrderSubTotal) {
		return true
	}

	return false
}

// SetOrderSubTotal gets a reference to the given float32 and assigns it to the OrderSubTotal field.
func (o *OrderDetailResponse) SetOrderSubTotal(v float32) {
	o.OrderSubTotal = &v
}

// GetFreightCharges returns the FreightCharges field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetFreightCharges() float32 {
	if o == nil || IsNil(o.FreightCharges) {
		var ret float32
		return ret
	}
	return *o.FreightCharges
}

// GetFreightChargesOk returns a tuple with the FreightCharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetFreightChargesOk() (*float32, bool) {
	if o == nil || IsNil(o.FreightCharges) {
		return nil, false
	}
	return o.FreightCharges, true
}

// HasFreightCharges returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasFreightCharges() bool {
	if o != nil && !IsNil(o.FreightCharges) {
		return true
	}

	return false
}

// SetFreightCharges gets a reference to the given float32 and assigns it to the FreightCharges field.
func (o *OrderDetailResponse) SetFreightCharges(v float32) {
	o.FreightCharges = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *OrderDetailResponse) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetTotalWeight returns the TotalWeight field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetTotalWeight() float32 {
	if o == nil || IsNil(o.TotalWeight) {
		var ret float32
		return ret
	}
	return *o.TotalWeight
}

// GetTotalWeightOk returns a tuple with the TotalWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetTotalWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalWeight) {
		return nil, false
	}
	return o.TotalWeight, true
}

// HasTotalWeight returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasTotalWeight() bool {
	if o != nil && !IsNil(o.TotalWeight) {
		return true
	}

	return false
}

// SetTotalWeight gets a reference to the given float32 and assigns it to the TotalWeight field.
func (o *OrderDetailResponse) SetTotalWeight(v float32) {
	o.TotalWeight = &v
}

// GetTotalTax returns the TotalTax field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetTotalTax() float32 {
	if o == nil || IsNil(o.TotalTax) {
		var ret float32
		return ret
	}
	return *o.TotalTax
}

// GetTotalTaxOk returns a tuple with the TotalTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetTotalTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalTax) {
		return nil, false
	}
	return o.TotalTax, true
}

// HasTotalTax returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasTotalTax() bool {
	if o != nil && !IsNil(o.TotalTax) {
		return true
	}

	return false
}

// SetTotalTax gets a reference to the given float32 and assigns it to the TotalTax field.
func (o *OrderDetailResponse) SetTotalTax(v float32) {
	o.TotalTax = &v
}

// GetPaymentTerms returns the PaymentTerms field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetPaymentTerms() string {
	if o == nil || IsNil(o.PaymentTerms) {
		var ret string
		return ret
	}
	return *o.PaymentTerms
}

// GetPaymentTermsOk returns a tuple with the PaymentTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetPaymentTermsOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentTerms) {
		return nil, false
	}
	return o.PaymentTerms, true
}

// HasPaymentTerms returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasPaymentTerms() bool {
	if o != nil && !IsNil(o.PaymentTerms) {
		return true
	}

	return false
}

// SetPaymentTerms gets a reference to the given string and assigns it to the PaymentTerms field.
func (o *OrderDetailResponse) SetPaymentTerms(v string) {
	o.PaymentTerms = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *OrderDetailResponse) SetNotes(v string) {
	o.Notes = &v
}

// GetBillToInfo returns the BillToInfo field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetBillToInfo() OrderDetailResponseBillToInfo {
	if o == nil || IsNil(o.BillToInfo) {
		var ret OrderDetailResponseBillToInfo
		return ret
	}
	return *o.BillToInfo
}

// GetBillToInfoOk returns a tuple with the BillToInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetBillToInfoOk() (*OrderDetailResponseBillToInfo, bool) {
	if o == nil || IsNil(o.BillToInfo) {
		return nil, false
	}
	return o.BillToInfo, true
}

// HasBillToInfo returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasBillToInfo() bool {
	if o != nil && !IsNil(o.BillToInfo) {
		return true
	}

	return false
}

// SetBillToInfo gets a reference to the given OrderDetailResponseBillToInfo and assigns it to the BillToInfo field.
func (o *OrderDetailResponse) SetBillToInfo(v OrderDetailResponseBillToInfo) {
	o.BillToInfo = &v
}

// GetShipToInfo returns the ShipToInfo field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetShipToInfo() OrderDetailResponseShipToInfo {
	if o == nil || IsNil(o.ShipToInfo) {
		var ret OrderDetailResponseShipToInfo
		return ret
	}
	return *o.ShipToInfo
}

// GetShipToInfoOk returns a tuple with the ShipToInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetShipToInfoOk() (*OrderDetailResponseShipToInfo, bool) {
	if o == nil || IsNil(o.ShipToInfo) {
		return nil, false
	}
	return o.ShipToInfo, true
}

// HasShipToInfo returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasShipToInfo() bool {
	if o != nil && !IsNil(o.ShipToInfo) {
		return true
	}

	return false
}

// SetShipToInfo gets a reference to the given OrderDetailResponseShipToInfo and assigns it to the ShipToInfo field.
func (o *OrderDetailResponse) SetShipToInfo(v OrderDetailResponseShipToInfo) {
	o.ShipToInfo = &v
}

// GetEndUserInfo returns the EndUserInfo field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetEndUserInfo() OrderDetailResponseEndUserInfo {
	if o == nil || IsNil(o.EndUserInfo) {
		var ret OrderDetailResponseEndUserInfo
		return ret
	}
	return *o.EndUserInfo
}

// GetEndUserInfoOk returns a tuple with the EndUserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetEndUserInfoOk() (*OrderDetailResponseEndUserInfo, bool) {
	if o == nil || IsNil(o.EndUserInfo) {
		return nil, false
	}
	return o.EndUserInfo, true
}

// HasEndUserInfo returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasEndUserInfo() bool {
	if o != nil && !IsNil(o.EndUserInfo) {
		return true
	}

	return false
}

// SetEndUserInfo gets a reference to the given OrderDetailResponseEndUserInfo and assigns it to the EndUserInfo field.
func (o *OrderDetailResponse) SetEndUserInfo(v OrderDetailResponseEndUserInfo) {
	o.EndUserInfo = &v
}

// GetLines returns the Lines field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetLines() []OrderDetailResponseLinesInner {
	if o == nil || IsNil(o.Lines) {
		var ret []OrderDetailResponseLinesInner
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetLinesOk() ([]OrderDetailResponseLinesInner, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []OrderDetailResponseLinesInner and assigns it to the Lines field.
func (o *OrderDetailResponse) SetLines(v []OrderDetailResponseLinesInner) {
	o.Lines = v
}

// GetMiscellaneousCharges returns the MiscellaneousCharges field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetMiscellaneousCharges() []OrderDetailResponseMiscellaneousChargesInner {
	if o == nil || IsNil(o.MiscellaneousCharges) {
		var ret []OrderDetailResponseMiscellaneousChargesInner
		return ret
	}
	return o.MiscellaneousCharges
}

// GetMiscellaneousChargesOk returns a tuple with the MiscellaneousCharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetMiscellaneousChargesOk() ([]OrderDetailResponseMiscellaneousChargesInner, bool) {
	if o == nil || IsNil(o.MiscellaneousCharges) {
		return nil, false
	}
	return o.MiscellaneousCharges, true
}

// HasMiscellaneousCharges returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasMiscellaneousCharges() bool {
	if o != nil && !IsNil(o.MiscellaneousCharges) {
		return true
	}

	return false
}

// SetMiscellaneousCharges gets a reference to the given []OrderDetailResponseMiscellaneousChargesInner and assigns it to the MiscellaneousCharges field.
func (o *OrderDetailResponse) SetMiscellaneousCharges(v []OrderDetailResponseMiscellaneousChargesInner) {
	o.MiscellaneousCharges = v
}

// GetAdditionalAttributes returns the AdditionalAttributes field value if set, zero value otherwise.
func (o *OrderDetailResponse) GetAdditionalAttributes() []OrderDetailResponseLinesInnerAdditionalAttributesInner {
	if o == nil || IsNil(o.AdditionalAttributes) {
		var ret []OrderDetailResponseLinesInnerAdditionalAttributesInner
		return ret
	}
	return o.AdditionalAttributes
}

// GetAdditionalAttributesOk returns a tuple with the AdditionalAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetailResponse) GetAdditionalAttributesOk() ([]OrderDetailResponseLinesInnerAdditionalAttributesInner, bool) {
	if o == nil || IsNil(o.AdditionalAttributes) {
		return nil, false
	}
	return o.AdditionalAttributes, true
}

// HasAdditionalAttributes returns a boolean if a field has been set.
func (o *OrderDetailResponse) HasAdditionalAttributes() bool {
	if o != nil && !IsNil(o.AdditionalAttributes) {
		return true
	}

	return false
}

// SetAdditionalAttributes gets a reference to the given []OrderDetailResponseLinesInnerAdditionalAttributesInner and assigns it to the AdditionalAttributes field.
func (o *OrderDetailResponse) SetAdditionalAttributes(v []OrderDetailResponseLinesInnerAdditionalAttributesInner) {
	o.AdditionalAttributes = v
}

func (o OrderDetailResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderDetailResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IngramOrderNumber) {
		toSerialize["ingramOrderNumber"] = o.IngramOrderNumber
	}
	if !IsNil(o.IngramOrderDate) {
		toSerialize["ingramOrderDate"] = o.IngramOrderDate
	}
	if !IsNil(o.OrderType) {
		toSerialize["orderType"] = o.OrderType
	}
	if !IsNil(o.CustomerOrderNumber) {
		toSerialize["customerOrderNumber"] = o.CustomerOrderNumber
	}
	if !IsNil(o.EndCustomerOrderNumber) {
		toSerialize["endCustomerOrderNumber"] = o.EndCustomerOrderNumber
	}
	if !IsNil(o.VendorSalesOrderNumber) {
		toSerialize["vendorSalesOrderNumber"] = o.VendorSalesOrderNumber
	}
	if !IsNil(o.OrderStatus) {
		toSerialize["orderStatus"] = o.OrderStatus
	}
	if !IsNil(o.OrderTotal) {
		toSerialize["orderTotal"] = o.OrderTotal
	}
	if !IsNil(o.OrderSubTotal) {
		toSerialize["orderSubTotal"] = o.OrderSubTotal
	}
	if !IsNil(o.FreightCharges) {
		toSerialize["freightCharges"] = o.FreightCharges
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.TotalWeight) {
		toSerialize["totalWeight"] = o.TotalWeight
	}
	if !IsNil(o.TotalTax) {
		toSerialize["totalTax"] = o.TotalTax
	}
	if !IsNil(o.PaymentTerms) {
		toSerialize["paymentTerms"] = o.PaymentTerms
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.BillToInfo) {
		toSerialize["billToInfo"] = o.BillToInfo
	}
	if !IsNil(o.ShipToInfo) {
		toSerialize["shipToInfo"] = o.ShipToInfo
	}
	if !IsNil(o.EndUserInfo) {
		toSerialize["endUserInfo"] = o.EndUserInfo
	}
	if !IsNil(o.Lines) {
		toSerialize["lines"] = o.Lines
	}
	if !IsNil(o.MiscellaneousCharges) {
		toSerialize["miscellaneousCharges"] = o.MiscellaneousCharges
	}
	if !IsNil(o.AdditionalAttributes) {
		toSerialize["additionalAttributes"] = o.AdditionalAttributes
	}
	return toSerialize, nil
}

type NullableOrderDetailResponse struct {
	value *OrderDetailResponse
	isSet bool
}

func (v NullableOrderDetailResponse) Get() *OrderDetailResponse {
	return v.value
}

func (v *NullableOrderDetailResponse) Set(val *OrderDetailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderDetailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderDetailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderDetailResponse(val *OrderDetailResponse) *NullableOrderDetailResponse {
	return &NullableOrderDetailResponse{value: val, isSet: true}
}

func (v NullableOrderDetailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderDetailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


