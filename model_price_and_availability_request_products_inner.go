/*
XI Sdk Resellers

For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the PriceAndAvailabilityRequestProductsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceAndAvailabilityRequestProductsInner{}

// PriceAndAvailabilityRequestProductsInner struct for PriceAndAvailabilityRequestProductsInner
type PriceAndAvailabilityRequestProductsInner struct {
	// Ingram Micro unique part number for the product.
	IngramPartNumber NullableString `json:"ingramPartNumber,omitempty"`
	// Vendor’s part number for the product.
	VendorPartNumber NullableString `json:"vendorPartNumber,omitempty"`
	// Reseller/end-user’s part number for the product.
	CustomerPartNumber NullableString `json:"customerPartNumber,omitempty"`
	// The UPC code for the product. Consists of 12 numeric digits that are uniquely assigned to each trade item.
	Upc NullableString `json:"upc,omitempty"`
	QuantityRequested NullablePriceAndAvailabilityRequestProductsInnerQuantityRequested `json:"quantityRequested,omitempty"`
	PlanID NullablePriceAndAvailabilityRequestProductsInnerPlanID `json:"planID,omitempty"`
	AdditionalAttributes []PriceAndAvailabilityRequestProductsInnerAdditionalAttributesInner `json:"additionalAttributes,omitempty"`
}

// NewPriceAndAvailabilityRequestProductsInner instantiates a new PriceAndAvailabilityRequestProductsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceAndAvailabilityRequestProductsInner() *PriceAndAvailabilityRequestProductsInner {
	this := PriceAndAvailabilityRequestProductsInner{}
	return &this
}

// NewPriceAndAvailabilityRequestProductsInnerWithDefaults instantiates a new PriceAndAvailabilityRequestProductsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceAndAvailabilityRequestProductsInnerWithDefaults() *PriceAndAvailabilityRequestProductsInner {
	this := PriceAndAvailabilityRequestProductsInner{}
	return &this
}

// GetIngramPartNumber returns the IngramPartNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityRequestProductsInner) GetIngramPartNumber() string {
	if o == nil || IsNil(o.IngramPartNumber.Get()) {
		var ret string
		return ret
	}
	return *o.IngramPartNumber.Get()
}

// GetIngramPartNumberOk returns a tuple with the IngramPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityRequestProductsInner) GetIngramPartNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IngramPartNumber.Get(), o.IngramPartNumber.IsSet()
}

// HasIngramPartNumber returns a boolean if a field has been set.
func (o *PriceAndAvailabilityRequestProductsInner) HasIngramPartNumber() bool {
	if o != nil && o.IngramPartNumber.IsSet() {
		return true
	}

	return false
}

// SetIngramPartNumber gets a reference to the given NullableString and assigns it to the IngramPartNumber field.
func (o *PriceAndAvailabilityRequestProductsInner) SetIngramPartNumber(v string) {
	o.IngramPartNumber.Set(&v)
}
// SetIngramPartNumberNil sets the value for IngramPartNumber to be an explicit nil
func (o *PriceAndAvailabilityRequestProductsInner) SetIngramPartNumberNil() {
	o.IngramPartNumber.Set(nil)
}

// UnsetIngramPartNumber ensures that no value is present for IngramPartNumber, not even an explicit nil
func (o *PriceAndAvailabilityRequestProductsInner) UnsetIngramPartNumber() {
	o.IngramPartNumber.Unset()
}

// GetVendorPartNumber returns the VendorPartNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityRequestProductsInner) GetVendorPartNumber() string {
	if o == nil || IsNil(o.VendorPartNumber.Get()) {
		var ret string
		return ret
	}
	return *o.VendorPartNumber.Get()
}

// GetVendorPartNumberOk returns a tuple with the VendorPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityRequestProductsInner) GetVendorPartNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VendorPartNumber.Get(), o.VendorPartNumber.IsSet()
}

// HasVendorPartNumber returns a boolean if a field has been set.
func (o *PriceAndAvailabilityRequestProductsInner) HasVendorPartNumber() bool {
	if o != nil && o.VendorPartNumber.IsSet() {
		return true
	}

	return false
}

// SetVendorPartNumber gets a reference to the given NullableString and assigns it to the VendorPartNumber field.
func (o *PriceAndAvailabilityRequestProductsInner) SetVendorPartNumber(v string) {
	o.VendorPartNumber.Set(&v)
}
// SetVendorPartNumberNil sets the value for VendorPartNumber to be an explicit nil
func (o *PriceAndAvailabilityRequestProductsInner) SetVendorPartNumberNil() {
	o.VendorPartNumber.Set(nil)
}

// UnsetVendorPartNumber ensures that no value is present for VendorPartNumber, not even an explicit nil
func (o *PriceAndAvailabilityRequestProductsInner) UnsetVendorPartNumber() {
	o.VendorPartNumber.Unset()
}

// GetCustomerPartNumber returns the CustomerPartNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityRequestProductsInner) GetCustomerPartNumber() string {
	if o == nil || IsNil(o.CustomerPartNumber.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerPartNumber.Get()
}

// GetCustomerPartNumberOk returns a tuple with the CustomerPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityRequestProductsInner) GetCustomerPartNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerPartNumber.Get(), o.CustomerPartNumber.IsSet()
}

// HasCustomerPartNumber returns a boolean if a field has been set.
func (o *PriceAndAvailabilityRequestProductsInner) HasCustomerPartNumber() bool {
	if o != nil && o.CustomerPartNumber.IsSet() {
		return true
	}

	return false
}

// SetCustomerPartNumber gets a reference to the given NullableString and assigns it to the CustomerPartNumber field.
func (o *PriceAndAvailabilityRequestProductsInner) SetCustomerPartNumber(v string) {
	o.CustomerPartNumber.Set(&v)
}
// SetCustomerPartNumberNil sets the value for CustomerPartNumber to be an explicit nil
func (o *PriceAndAvailabilityRequestProductsInner) SetCustomerPartNumberNil() {
	o.CustomerPartNumber.Set(nil)
}

// UnsetCustomerPartNumber ensures that no value is present for CustomerPartNumber, not even an explicit nil
func (o *PriceAndAvailabilityRequestProductsInner) UnsetCustomerPartNumber() {
	o.CustomerPartNumber.Unset()
}

// GetUpc returns the Upc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityRequestProductsInner) GetUpc() string {
	if o == nil || IsNil(o.Upc.Get()) {
		var ret string
		return ret
	}
	return *o.Upc.Get()
}

// GetUpcOk returns a tuple with the Upc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityRequestProductsInner) GetUpcOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Upc.Get(), o.Upc.IsSet()
}

// HasUpc returns a boolean if a field has been set.
func (o *PriceAndAvailabilityRequestProductsInner) HasUpc() bool {
	if o != nil && o.Upc.IsSet() {
		return true
	}

	return false
}

// SetUpc gets a reference to the given NullableString and assigns it to the Upc field.
func (o *PriceAndAvailabilityRequestProductsInner) SetUpc(v string) {
	o.Upc.Set(&v)
}
// SetUpcNil sets the value for Upc to be an explicit nil
func (o *PriceAndAvailabilityRequestProductsInner) SetUpcNil() {
	o.Upc.Set(nil)
}

// UnsetUpc ensures that no value is present for Upc, not even an explicit nil
func (o *PriceAndAvailabilityRequestProductsInner) UnsetUpc() {
	o.Upc.Unset()
}

// GetQuantityRequested returns the QuantityRequested field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityRequestProductsInner) GetQuantityRequested() PriceAndAvailabilityRequestProductsInnerQuantityRequested {
	if o == nil || IsNil(o.QuantityRequested.Get()) {
		var ret PriceAndAvailabilityRequestProductsInnerQuantityRequested
		return ret
	}
	return *o.QuantityRequested.Get()
}

// GetQuantityRequestedOk returns a tuple with the QuantityRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityRequestProductsInner) GetQuantityRequestedOk() (*PriceAndAvailabilityRequestProductsInnerQuantityRequested, bool) {
	if o == nil {
		return nil, false
	}
	return o.QuantityRequested.Get(), o.QuantityRequested.IsSet()
}

// HasQuantityRequested returns a boolean if a field has been set.
func (o *PriceAndAvailabilityRequestProductsInner) HasQuantityRequested() bool {
	if o != nil && o.QuantityRequested.IsSet() {
		return true
	}

	return false
}

// SetQuantityRequested gets a reference to the given NullablePriceAndAvailabilityRequestProductsInnerQuantityRequested and assigns it to the QuantityRequested field.
func (o *PriceAndAvailabilityRequestProductsInner) SetQuantityRequested(v PriceAndAvailabilityRequestProductsInnerQuantityRequested) {
	o.QuantityRequested.Set(&v)
}
// SetQuantityRequestedNil sets the value for QuantityRequested to be an explicit nil
func (o *PriceAndAvailabilityRequestProductsInner) SetQuantityRequestedNil() {
	o.QuantityRequested.Set(nil)
}

// UnsetQuantityRequested ensures that no value is present for QuantityRequested, not even an explicit nil
func (o *PriceAndAvailabilityRequestProductsInner) UnsetQuantityRequested() {
	o.QuantityRequested.Unset()
}

// GetPlanID returns the PlanID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityRequestProductsInner) GetPlanID() PriceAndAvailabilityRequestProductsInnerPlanID {
	if o == nil || IsNil(o.PlanID.Get()) {
		var ret PriceAndAvailabilityRequestProductsInnerPlanID
		return ret
	}
	return *o.PlanID.Get()
}

// GetPlanIDOk returns a tuple with the PlanID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityRequestProductsInner) GetPlanIDOk() (*PriceAndAvailabilityRequestProductsInnerPlanID, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlanID.Get(), o.PlanID.IsSet()
}

// HasPlanID returns a boolean if a field has been set.
func (o *PriceAndAvailabilityRequestProductsInner) HasPlanID() bool {
	if o != nil && o.PlanID.IsSet() {
		return true
	}

	return false
}

// SetPlanID gets a reference to the given NullablePriceAndAvailabilityRequestProductsInnerPlanID and assigns it to the PlanID field.
func (o *PriceAndAvailabilityRequestProductsInner) SetPlanID(v PriceAndAvailabilityRequestProductsInnerPlanID) {
	o.PlanID.Set(&v)
}
// SetPlanIDNil sets the value for PlanID to be an explicit nil
func (o *PriceAndAvailabilityRequestProductsInner) SetPlanIDNil() {
	o.PlanID.Set(nil)
}

// UnsetPlanID ensures that no value is present for PlanID, not even an explicit nil
func (o *PriceAndAvailabilityRequestProductsInner) UnsetPlanID() {
	o.PlanID.Unset()
}

// GetAdditionalAttributes returns the AdditionalAttributes field value if set, zero value otherwise.
func (o *PriceAndAvailabilityRequestProductsInner) GetAdditionalAttributes() []PriceAndAvailabilityRequestProductsInnerAdditionalAttributesInner {
	if o == nil || IsNil(o.AdditionalAttributes) {
		var ret []PriceAndAvailabilityRequestProductsInnerAdditionalAttributesInner
		return ret
	}
	return o.AdditionalAttributes
}

// GetAdditionalAttributesOk returns a tuple with the AdditionalAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityRequestProductsInner) GetAdditionalAttributesOk() ([]PriceAndAvailabilityRequestProductsInnerAdditionalAttributesInner, bool) {
	if o == nil || IsNil(o.AdditionalAttributes) {
		return nil, false
	}
	return o.AdditionalAttributes, true
}

// HasAdditionalAttributes returns a boolean if a field has been set.
func (o *PriceAndAvailabilityRequestProductsInner) HasAdditionalAttributes() bool {
	if o != nil && !IsNil(o.AdditionalAttributes) {
		return true
	}

	return false
}

// SetAdditionalAttributes gets a reference to the given []PriceAndAvailabilityRequestProductsInnerAdditionalAttributesInner and assigns it to the AdditionalAttributes field.
func (o *PriceAndAvailabilityRequestProductsInner) SetAdditionalAttributes(v []PriceAndAvailabilityRequestProductsInnerAdditionalAttributesInner) {
	o.AdditionalAttributes = v
}

func (o PriceAndAvailabilityRequestProductsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceAndAvailabilityRequestProductsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IngramPartNumber.IsSet() {
		toSerialize["ingramPartNumber"] = o.IngramPartNumber.Get()
	}
	if o.VendorPartNumber.IsSet() {
		toSerialize["vendorPartNumber"] = o.VendorPartNumber.Get()
	}
	if o.CustomerPartNumber.IsSet() {
		toSerialize["customerPartNumber"] = o.CustomerPartNumber.Get()
	}
	if o.Upc.IsSet() {
		toSerialize["upc"] = o.Upc.Get()
	}
	if o.QuantityRequested.IsSet() {
		toSerialize["quantityRequested"] = o.QuantityRequested.Get()
	}
	if o.PlanID.IsSet() {
		toSerialize["planID"] = o.PlanID.Get()
	}
	if !IsNil(o.AdditionalAttributes) {
		toSerialize["additionalAttributes"] = o.AdditionalAttributes
	}
	return toSerialize, nil
}

type NullablePriceAndAvailabilityRequestProductsInner struct {
	value *PriceAndAvailabilityRequestProductsInner
	isSet bool
}

func (v NullablePriceAndAvailabilityRequestProductsInner) Get() *PriceAndAvailabilityRequestProductsInner {
	return v.value
}

func (v *NullablePriceAndAvailabilityRequestProductsInner) Set(val *PriceAndAvailabilityRequestProductsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceAndAvailabilityRequestProductsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceAndAvailabilityRequestProductsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceAndAvailabilityRequestProductsInner(val *PriceAndAvailabilityRequestProductsInner) *NullablePriceAndAvailabilityRequestProductsInner {
	return &NullablePriceAndAvailabilityRequestProductsInner{value: val, isSet: true}
}

func (v NullablePriceAndAvailabilityRequestProductsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceAndAvailabilityRequestProductsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


