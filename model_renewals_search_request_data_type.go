/*
Reseller API

For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

API version: 6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi.sdk.resellers

import (
	"encoding/json"
)

// checks if the RenewalsSearchRequestDataType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RenewalsSearchRequestDataType{}

// RenewalsSearchRequestDataType struct for RenewalsSearchRequestDataType
type RenewalsSearchRequestDataType struct {
	StartDate *RenewalsSearchRequestDataTypeStartDate `json:"startDate,omitempty"`
	EndDate *RenewalsSearchRequestDataTypeEndDate `json:"endDate,omitempty"`
	InvoiceDate *RenewalsSearchRequestDataTypeInvoiceDate `json:"invoiceDate,omitempty"`
	ExpirationDate *RenewalsSearchRequestDataTypeExpirationDate `json:"expirationDate,omitempty"`
}

// NewRenewalsSearchRequestDataType instantiates a new RenewalsSearchRequestDataType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenewalsSearchRequestDataType() *RenewalsSearchRequestDataType {
	this := RenewalsSearchRequestDataType{}
	return &this
}

// NewRenewalsSearchRequestDataTypeWithDefaults instantiates a new RenewalsSearchRequestDataType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenewalsSearchRequestDataTypeWithDefaults() *RenewalsSearchRequestDataType {
	this := RenewalsSearchRequestDataType{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *RenewalsSearchRequestDataType) GetStartDate() RenewalsSearchRequestDataTypeStartDate {
	if o == nil || IsNil(o.StartDate) {
		var ret RenewalsSearchRequestDataTypeStartDate
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenewalsSearchRequestDataType) GetStartDateOk() (*RenewalsSearchRequestDataTypeStartDate, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *RenewalsSearchRequestDataType) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given RenewalsSearchRequestDataTypeStartDate and assigns it to the StartDate field.
func (o *RenewalsSearchRequestDataType) SetStartDate(v RenewalsSearchRequestDataTypeStartDate) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *RenewalsSearchRequestDataType) GetEndDate() RenewalsSearchRequestDataTypeEndDate {
	if o == nil || IsNil(o.EndDate) {
		var ret RenewalsSearchRequestDataTypeEndDate
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenewalsSearchRequestDataType) GetEndDateOk() (*RenewalsSearchRequestDataTypeEndDate, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *RenewalsSearchRequestDataType) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given RenewalsSearchRequestDataTypeEndDate and assigns it to the EndDate field.
func (o *RenewalsSearchRequestDataType) SetEndDate(v RenewalsSearchRequestDataTypeEndDate) {
	o.EndDate = &v
}

// GetInvoiceDate returns the InvoiceDate field value if set, zero value otherwise.
func (o *RenewalsSearchRequestDataType) GetInvoiceDate() RenewalsSearchRequestDataTypeInvoiceDate {
	if o == nil || IsNil(o.InvoiceDate) {
		var ret RenewalsSearchRequestDataTypeInvoiceDate
		return ret
	}
	return *o.InvoiceDate
}

// GetInvoiceDateOk returns a tuple with the InvoiceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenewalsSearchRequestDataType) GetInvoiceDateOk() (*RenewalsSearchRequestDataTypeInvoiceDate, bool) {
	if o == nil || IsNil(o.InvoiceDate) {
		return nil, false
	}
	return o.InvoiceDate, true
}

// HasInvoiceDate returns a boolean if a field has been set.
func (o *RenewalsSearchRequestDataType) HasInvoiceDate() bool {
	if o != nil && !IsNil(o.InvoiceDate) {
		return true
	}

	return false
}

// SetInvoiceDate gets a reference to the given RenewalsSearchRequestDataTypeInvoiceDate and assigns it to the InvoiceDate field.
func (o *RenewalsSearchRequestDataType) SetInvoiceDate(v RenewalsSearchRequestDataTypeInvoiceDate) {
	o.InvoiceDate = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *RenewalsSearchRequestDataType) GetExpirationDate() RenewalsSearchRequestDataTypeExpirationDate {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret RenewalsSearchRequestDataTypeExpirationDate
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenewalsSearchRequestDataType) GetExpirationDateOk() (*RenewalsSearchRequestDataTypeExpirationDate, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *RenewalsSearchRequestDataType) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given RenewalsSearchRequestDataTypeExpirationDate and assigns it to the ExpirationDate field.
func (o *RenewalsSearchRequestDataType) SetExpirationDate(v RenewalsSearchRequestDataTypeExpirationDate) {
	o.ExpirationDate = &v
}

func (o RenewalsSearchRequestDataType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RenewalsSearchRequestDataType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.InvoiceDate) {
		toSerialize["invoiceDate"] = o.InvoiceDate
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	return toSerialize, nil
}

type NullableRenewalsSearchRequestDataType struct {
	value *RenewalsSearchRequestDataType
	isSet bool
}

func (v NullableRenewalsSearchRequestDataType) Get() *RenewalsSearchRequestDataType {
	return v.value
}

func (v *NullableRenewalsSearchRequestDataType) Set(val *RenewalsSearchRequestDataType) {
	v.value = val
	v.isSet = true
}

func (v NullableRenewalsSearchRequestDataType) IsSet() bool {
	return v.isSet
}

func (v *NullableRenewalsSearchRequestDataType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenewalsSearchRequestDataType(val *RenewalsSearchRequestDataType) *NullableRenewalsSearchRequestDataType {
	return &NullableRenewalsSearchRequestDataType{value: val, isSet: true}
}

func (v NullableRenewalsSearchRequestDataType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenewalsSearchRequestDataType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


