/*
XI Sdk Resellers

For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the PriceAndAvailabilityResponseInnerSubscriptionPriceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceAndAvailabilityResponseInnerSubscriptionPriceInner{}

// PriceAndAvailabilityResponseInnerSubscriptionPriceInner struct for PriceAndAvailabilityResponseInnerSubscriptionPriceInner
type PriceAndAvailabilityResponseInnerSubscriptionPriceInner struct {
	// Id of the plan.
	PlanId *string `json:"planId,omitempty"`
	// Name of the plan.
	PlanName *string `json:"planName,omitempty"`
	// The description of the plan.
	PlanDescription *float32 `json:"planDescription,omitempty"`
	Groups []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner `json:"groups,omitempty"`
	BillingPeriod []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriodInner `json:"billingPeriod,omitempty"`
	SubscriptionPeriod []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner `json:"subscriptionPeriod,omitempty"`
	Options []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner `json:"options,omitempty"`
}

// NewPriceAndAvailabilityResponseInnerSubscriptionPriceInner instantiates a new PriceAndAvailabilityResponseInnerSubscriptionPriceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceAndAvailabilityResponseInnerSubscriptionPriceInner() *PriceAndAvailabilityResponseInnerSubscriptionPriceInner {
	this := PriceAndAvailabilityResponseInnerSubscriptionPriceInner{}
	return &this
}

// NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerWithDefaults instantiates a new PriceAndAvailabilityResponseInnerSubscriptionPriceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerWithDefaults() *PriceAndAvailabilityResponseInnerSubscriptionPriceInner {
	this := PriceAndAvailabilityResponseInnerSubscriptionPriceInner{}
	return &this
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetPlanId() string {
	if o == nil || IsNil(o.PlanId) {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) SetPlanId(v string) {
	o.PlanId = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetPlanName() string {
	if o == nil || IsNil(o.PlanName) {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanName) {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) HasPlanName() bool {
	if o != nil && !IsNil(o.PlanName) {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) SetPlanName(v string) {
	o.PlanName = &v
}

// GetPlanDescription returns the PlanDescription field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetPlanDescription() float32 {
	if o == nil || IsNil(o.PlanDescription) {
		var ret float32
		return ret
	}
	return *o.PlanDescription
}

// GetPlanDescriptionOk returns a tuple with the PlanDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetPlanDescriptionOk() (*float32, bool) {
	if o == nil || IsNil(o.PlanDescription) {
		return nil, false
	}
	return o.PlanDescription, true
}

// HasPlanDescription returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) HasPlanDescription() bool {
	if o != nil && !IsNil(o.PlanDescription) {
		return true
	}

	return false
}

// SetPlanDescription gets a reference to the given float32 and assigns it to the PlanDescription field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) SetPlanDescription(v float32) {
	o.PlanDescription = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetGroups() []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner {
	if o == nil || IsNil(o.Groups) {
		var ret []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetGroupsOk() ([]PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner and assigns it to the Groups field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) SetGroups(v []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerGroupsInner) {
	o.Groups = v
}

// GetBillingPeriod returns the BillingPeriod field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetBillingPeriod() []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriodInner {
	if o == nil || IsNil(o.BillingPeriod) {
		var ret []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriodInner
		return ret
	}
	return o.BillingPeriod
}

// GetBillingPeriodOk returns a tuple with the BillingPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetBillingPeriodOk() ([]PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriodInner, bool) {
	if o == nil || IsNil(o.BillingPeriod) {
		return nil, false
	}
	return o.BillingPeriod, true
}

// HasBillingPeriod returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) HasBillingPeriod() bool {
	if o != nil && !IsNil(o.BillingPeriod) {
		return true
	}

	return false
}

// SetBillingPeriod gets a reference to the given []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriodInner and assigns it to the BillingPeriod field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) SetBillingPeriod(v []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerBillingPeriodInner) {
	o.BillingPeriod = v
}

// GetSubscriptionPeriod returns the SubscriptionPeriod field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetSubscriptionPeriod() []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner {
	if o == nil || IsNil(o.SubscriptionPeriod) {
		var ret []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner
		return ret
	}
	return o.SubscriptionPeriod
}

// GetSubscriptionPeriodOk returns a tuple with the SubscriptionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetSubscriptionPeriodOk() ([]PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner, bool) {
	if o == nil || IsNil(o.SubscriptionPeriod) {
		return nil, false
	}
	return o.SubscriptionPeriod, true
}

// HasSubscriptionPeriod returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) HasSubscriptionPeriod() bool {
	if o != nil && !IsNil(o.SubscriptionPeriod) {
		return true
	}

	return false
}

// SetSubscriptionPeriod gets a reference to the given []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner and assigns it to the SubscriptionPeriod field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) SetSubscriptionPeriod(v []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) {
	o.SubscriptionPeriod = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetOptions() []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner {
	if o == nil || IsNil(o.Options) {
		var ret []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) GetOptionsOk() ([]PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner and assigns it to the Options field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) SetOptions(v []PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner) {
	o.Options = v
}

func (o PriceAndAvailabilityResponseInnerSubscriptionPriceInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceAndAvailabilityResponseInnerSubscriptionPriceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PlanId) {
		toSerialize["planId"] = o.PlanId
	}
	if !IsNil(o.PlanName) {
		toSerialize["planName"] = o.PlanName
	}
	if !IsNil(o.PlanDescription) {
		toSerialize["planDescription"] = o.PlanDescription
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.BillingPeriod) {
		toSerialize["billingPeriod"] = o.BillingPeriod
	}
	if !IsNil(o.SubscriptionPeriod) {
		toSerialize["subscriptionPeriod"] = o.SubscriptionPeriod
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return toSerialize, nil
}

type NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInner struct {
	value *PriceAndAvailabilityResponseInnerSubscriptionPriceInner
	isSet bool
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInner) Get() *PriceAndAvailabilityResponseInnerSubscriptionPriceInner {
	return v.value
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInner) Set(val *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceAndAvailabilityResponseInnerSubscriptionPriceInner(val *PriceAndAvailabilityResponseInnerSubscriptionPriceInner) *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInner {
	return &NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInner{value: val, isSet: true}
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


