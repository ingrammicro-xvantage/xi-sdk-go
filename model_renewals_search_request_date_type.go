/*
XI Sdk Resellers

For Ingram Micro Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the RenewalsSearchRequestDateType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RenewalsSearchRequestDateType{}

// RenewalsSearchRequestDateType struct for RenewalsSearchRequestDateType
type RenewalsSearchRequestDateType struct {
	StartDate *RenewalsSearchRequestDateTypeStartDate `json:"startDate,omitempty"`
	EndDate *RenewalsSearchRequestDateTypeEndDate `json:"endDate,omitempty"`
	InvoiceDate *RenewalsSearchRequestDateTypeInvoiceDate `json:"invoiceDate,omitempty"`
	ExpirationDate *RenewalsSearchRequestDateTypeExpirationDate `json:"expirationDate,omitempty"`
}

// NewRenewalsSearchRequestDateType instantiates a new RenewalsSearchRequestDateType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenewalsSearchRequestDateType() *RenewalsSearchRequestDateType {
	this := RenewalsSearchRequestDateType{}
	return &this
}

// NewRenewalsSearchRequestDateTypeWithDefaults instantiates a new RenewalsSearchRequestDateType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenewalsSearchRequestDateTypeWithDefaults() *RenewalsSearchRequestDateType {
	this := RenewalsSearchRequestDateType{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *RenewalsSearchRequestDateType) GetStartDate() RenewalsSearchRequestDateTypeStartDate {
	if o == nil || IsNil(o.StartDate) {
		var ret RenewalsSearchRequestDateTypeStartDate
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenewalsSearchRequestDateType) GetStartDateOk() (*RenewalsSearchRequestDateTypeStartDate, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *RenewalsSearchRequestDateType) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given RenewalsSearchRequestDateTypeStartDate and assigns it to the StartDate field.
func (o *RenewalsSearchRequestDateType) SetStartDate(v RenewalsSearchRequestDateTypeStartDate) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *RenewalsSearchRequestDateType) GetEndDate() RenewalsSearchRequestDateTypeEndDate {
	if o == nil || IsNil(o.EndDate) {
		var ret RenewalsSearchRequestDateTypeEndDate
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenewalsSearchRequestDateType) GetEndDateOk() (*RenewalsSearchRequestDateTypeEndDate, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *RenewalsSearchRequestDateType) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given RenewalsSearchRequestDateTypeEndDate and assigns it to the EndDate field.
func (o *RenewalsSearchRequestDateType) SetEndDate(v RenewalsSearchRequestDateTypeEndDate) {
	o.EndDate = &v
}

// GetInvoiceDate returns the InvoiceDate field value if set, zero value otherwise.
func (o *RenewalsSearchRequestDateType) GetInvoiceDate() RenewalsSearchRequestDateTypeInvoiceDate {
	if o == nil || IsNil(o.InvoiceDate) {
		var ret RenewalsSearchRequestDateTypeInvoiceDate
		return ret
	}
	return *o.InvoiceDate
}

// GetInvoiceDateOk returns a tuple with the InvoiceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenewalsSearchRequestDateType) GetInvoiceDateOk() (*RenewalsSearchRequestDateTypeInvoiceDate, bool) {
	if o == nil || IsNil(o.InvoiceDate) {
		return nil, false
	}
	return o.InvoiceDate, true
}

// HasInvoiceDate returns a boolean if a field has been set.
func (o *RenewalsSearchRequestDateType) HasInvoiceDate() bool {
	if o != nil && !IsNil(o.InvoiceDate) {
		return true
	}

	return false
}

// SetInvoiceDate gets a reference to the given RenewalsSearchRequestDateTypeInvoiceDate and assigns it to the InvoiceDate field.
func (o *RenewalsSearchRequestDateType) SetInvoiceDate(v RenewalsSearchRequestDateTypeInvoiceDate) {
	o.InvoiceDate = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *RenewalsSearchRequestDateType) GetExpirationDate() RenewalsSearchRequestDateTypeExpirationDate {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret RenewalsSearchRequestDateTypeExpirationDate
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenewalsSearchRequestDateType) GetExpirationDateOk() (*RenewalsSearchRequestDateTypeExpirationDate, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *RenewalsSearchRequestDateType) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given RenewalsSearchRequestDateTypeExpirationDate and assigns it to the ExpirationDate field.
func (o *RenewalsSearchRequestDateType) SetExpirationDate(v RenewalsSearchRequestDateTypeExpirationDate) {
	o.ExpirationDate = &v
}

func (o RenewalsSearchRequestDateType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RenewalsSearchRequestDateType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.InvoiceDate) {
		toSerialize["invoiceDate"] = o.InvoiceDate
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	return toSerialize, nil
}

type NullableRenewalsSearchRequestDateType struct {
	value *RenewalsSearchRequestDateType
	isSet bool
}

func (v NullableRenewalsSearchRequestDateType) Get() *RenewalsSearchRequestDateType {
	return v.value
}

func (v *NullableRenewalsSearchRequestDateType) Set(val *RenewalsSearchRequestDateType) {
	v.value = val
	v.isSet = true
}

func (v NullableRenewalsSearchRequestDateType) IsSet() bool {
	return v.isSet
}

func (v *NullableRenewalsSearchRequestDateType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenewalsSearchRequestDateType(val *RenewalsSearchRequestDateType) *NullableRenewalsSearchRequestDateType {
	return &NullableRenewalsSearchRequestDateType{value: val, isSet: true}
}

func (v NullableRenewalsSearchRequestDateType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenewalsSearchRequestDateType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


