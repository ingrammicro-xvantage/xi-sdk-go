/*
XI Sdk Resellers

For Resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner{}

// PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner struct for PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner
type PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner struct {
	// The unit of the subscription period.
	SubscriptionPeriodUnit NullableString `json:"subscriptionPeriodUnit,omitempty"`
	// The subscription period value.
	SubscriptionPeriod NullableString `json:"subscriptionPeriod,omitempty"`
}

// NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner instantiates a new PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner {
	this := PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner{}
	return &this
}

// NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInnerWithDefaults instantiates a new PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInnerWithDefaults() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner {
	this := PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner{}
	return &this
}

// GetSubscriptionPeriodUnit returns the SubscriptionPeriodUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) GetSubscriptionPeriodUnit() string {
	if o == nil || IsNil(o.SubscriptionPeriodUnit.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionPeriodUnit.Get()
}

// GetSubscriptionPeriodUnitOk returns a tuple with the SubscriptionPeriodUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) GetSubscriptionPeriodUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionPeriodUnit.Get(), o.SubscriptionPeriodUnit.IsSet()
}

// HasSubscriptionPeriodUnit returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) HasSubscriptionPeriodUnit() bool {
	if o != nil && o.SubscriptionPeriodUnit.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionPeriodUnit gets a reference to the given NullableString and assigns it to the SubscriptionPeriodUnit field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) SetSubscriptionPeriodUnit(v string) {
	o.SubscriptionPeriodUnit.Set(&v)
}
// SetSubscriptionPeriodUnitNil sets the value for SubscriptionPeriodUnit to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) SetSubscriptionPeriodUnitNil() {
	o.SubscriptionPeriodUnit.Set(nil)
}

// UnsetSubscriptionPeriodUnit ensures that no value is present for SubscriptionPeriodUnit, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) UnsetSubscriptionPeriodUnit() {
	o.SubscriptionPeriodUnit.Unset()
}

// GetSubscriptionPeriod returns the SubscriptionPeriod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) GetSubscriptionPeriod() string {
	if o == nil || IsNil(o.SubscriptionPeriod.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionPeriod.Get()
}

// GetSubscriptionPeriodOk returns a tuple with the SubscriptionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) GetSubscriptionPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionPeriod.Get(), o.SubscriptionPeriod.IsSet()
}

// HasSubscriptionPeriod returns a boolean if a field has been set.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) HasSubscriptionPeriod() bool {
	if o != nil && o.SubscriptionPeriod.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionPeriod gets a reference to the given NullableString and assigns it to the SubscriptionPeriod field.
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) SetSubscriptionPeriod(v string) {
	o.SubscriptionPeriod.Set(&v)
}
// SetSubscriptionPeriodNil sets the value for SubscriptionPeriod to be an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) SetSubscriptionPeriodNil() {
	o.SubscriptionPeriod.Set(nil)
}

// UnsetSubscriptionPeriod ensures that no value is present for SubscriptionPeriod, not even an explicit nil
func (o *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) UnsetSubscriptionPeriod() {
	o.SubscriptionPeriod.Unset()
}

func (o PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SubscriptionPeriodUnit.IsSet() {
		toSerialize["subscriptionPeriodUnit"] = o.SubscriptionPeriodUnit.Get()
	}
	if o.SubscriptionPeriod.IsSet() {
		toSerialize["subscriptionPeriod"] = o.SubscriptionPeriod.Get()
	}
	return toSerialize, nil
}

type NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner struct {
	value *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner
	isSet bool
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) Get() *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner {
	return v.value
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) Set(val *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner(val *PriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner {
	return &NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner{value: val, isSet: true}
}

func (v NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceAndAvailabilityResponseInnerSubscriptionPriceInnerSubscriptionPeriodInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


