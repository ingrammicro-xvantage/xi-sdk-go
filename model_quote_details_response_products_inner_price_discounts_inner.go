/*
XI Sdk Resellers

For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xi_sdk_resellers

import (
	"encoding/json"
)

// checks if the QuoteDetailsResponseProductsInnerPriceDiscountsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteDetailsResponseProductsInnerPriceDiscountsInner{}

// QuoteDetailsResponseProductsInnerPriceDiscountsInner struct for QuoteDetailsResponseProductsInnerPriceDiscountsInner
type QuoteDetailsResponseProductsInnerPriceDiscountsInner struct {
	Type *string `json:"type,omitempty"`
	Amount *float32 `json:"amount,omitempty"`
	ExpirationDate *string `json:"expirationDate,omitempty"`
	Description *string `json:"description,omitempty"`
	AvaliableQunatity *int32 `json:"avaliableQunatity,omitempty"`
	MinimumQuantity *int32 `json:"minimumQuantity,omitempty"`
	BidNumber *string `json:"bidNumber,omitempty"`
	BidVersion *string `json:"bidVersion,omitempty"`
	ValidFrom *string `json:"validFrom,omitempty"`
	ValidTo *string `json:"validTo,omitempty"`
	DiscountOffList *float32 `json:"discountOffList,omitempty"`
}

// NewQuoteDetailsResponseProductsInnerPriceDiscountsInner instantiates a new QuoteDetailsResponseProductsInnerPriceDiscountsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteDetailsResponseProductsInnerPriceDiscountsInner() *QuoteDetailsResponseProductsInnerPriceDiscountsInner {
	this := QuoteDetailsResponseProductsInnerPriceDiscountsInner{}
	return &this
}

// NewQuoteDetailsResponseProductsInnerPriceDiscountsInnerWithDefaults instantiates a new QuoteDetailsResponseProductsInnerPriceDiscountsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteDetailsResponseProductsInnerPriceDiscountsInnerWithDefaults() *QuoteDetailsResponseProductsInnerPriceDiscountsInner {
	this := QuoteDetailsResponseProductsInnerPriceDiscountsInner{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) SetType(v string) {
	o.Type = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) SetAmount(v float32) {
	o.Amount = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetExpirationDate() string {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) SetDescription(v string) {
	o.Description = &v
}

// GetAvaliableQunatity returns the AvaliableQunatity field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetAvaliableQunatity() int32 {
	if o == nil || IsNil(o.AvaliableQunatity) {
		var ret int32
		return ret
	}
	return *o.AvaliableQunatity
}

// GetAvaliableQunatityOk returns a tuple with the AvaliableQunatity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetAvaliableQunatityOk() (*int32, bool) {
	if o == nil || IsNil(o.AvaliableQunatity) {
		return nil, false
	}
	return o.AvaliableQunatity, true
}

// HasAvaliableQunatity returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) HasAvaliableQunatity() bool {
	if o != nil && !IsNil(o.AvaliableQunatity) {
		return true
	}

	return false
}

// SetAvaliableQunatity gets a reference to the given int32 and assigns it to the AvaliableQunatity field.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) SetAvaliableQunatity(v int32) {
	o.AvaliableQunatity = &v
}

// GetMinimumQuantity returns the MinimumQuantity field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetMinimumQuantity() int32 {
	if o == nil || IsNil(o.MinimumQuantity) {
		var ret int32
		return ret
	}
	return *o.MinimumQuantity
}

// GetMinimumQuantityOk returns a tuple with the MinimumQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetMinimumQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.MinimumQuantity) {
		return nil, false
	}
	return o.MinimumQuantity, true
}

// HasMinimumQuantity returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) HasMinimumQuantity() bool {
	if o != nil && !IsNil(o.MinimumQuantity) {
		return true
	}

	return false
}

// SetMinimumQuantity gets a reference to the given int32 and assigns it to the MinimumQuantity field.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) SetMinimumQuantity(v int32) {
	o.MinimumQuantity = &v
}

// GetBidNumber returns the BidNumber field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetBidNumber() string {
	if o == nil || IsNil(o.BidNumber) {
		var ret string
		return ret
	}
	return *o.BidNumber
}

// GetBidNumberOk returns a tuple with the BidNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetBidNumberOk() (*string, bool) {
	if o == nil || IsNil(o.BidNumber) {
		return nil, false
	}
	return o.BidNumber, true
}

// HasBidNumber returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) HasBidNumber() bool {
	if o != nil && !IsNil(o.BidNumber) {
		return true
	}

	return false
}

// SetBidNumber gets a reference to the given string and assigns it to the BidNumber field.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) SetBidNumber(v string) {
	o.BidNumber = &v
}

// GetBidVersion returns the BidVersion field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetBidVersion() string {
	if o == nil || IsNil(o.BidVersion) {
		var ret string
		return ret
	}
	return *o.BidVersion
}

// GetBidVersionOk returns a tuple with the BidVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetBidVersionOk() (*string, bool) {
	if o == nil || IsNil(o.BidVersion) {
		return nil, false
	}
	return o.BidVersion, true
}

// HasBidVersion returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) HasBidVersion() bool {
	if o != nil && !IsNil(o.BidVersion) {
		return true
	}

	return false
}

// SetBidVersion gets a reference to the given string and assigns it to the BidVersion field.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) SetBidVersion(v string) {
	o.BidVersion = &v
}

// GetValidFrom returns the ValidFrom field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetValidFrom() string {
	if o == nil || IsNil(o.ValidFrom) {
		var ret string
		return ret
	}
	return *o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetValidFromOk() (*string, bool) {
	if o == nil || IsNil(o.ValidFrom) {
		return nil, false
	}
	return o.ValidFrom, true
}

// HasValidFrom returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) HasValidFrom() bool {
	if o != nil && !IsNil(o.ValidFrom) {
		return true
	}

	return false
}

// SetValidFrom gets a reference to the given string and assigns it to the ValidFrom field.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) SetValidFrom(v string) {
	o.ValidFrom = &v
}

// GetValidTo returns the ValidTo field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetValidTo() string {
	if o == nil || IsNil(o.ValidTo) {
		var ret string
		return ret
	}
	return *o.ValidTo
}

// GetValidToOk returns a tuple with the ValidTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetValidToOk() (*string, bool) {
	if o == nil || IsNil(o.ValidTo) {
		return nil, false
	}
	return o.ValidTo, true
}

// HasValidTo returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) HasValidTo() bool {
	if o != nil && !IsNil(o.ValidTo) {
		return true
	}

	return false
}

// SetValidTo gets a reference to the given string and assigns it to the ValidTo field.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) SetValidTo(v string) {
	o.ValidTo = &v
}

// GetDiscountOffList returns the DiscountOffList field value if set, zero value otherwise.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetDiscountOffList() float32 {
	if o == nil || IsNil(o.DiscountOffList) {
		var ret float32
		return ret
	}
	return *o.DiscountOffList
}

// GetDiscountOffListOk returns a tuple with the DiscountOffList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) GetDiscountOffListOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountOffList) {
		return nil, false
	}
	return o.DiscountOffList, true
}

// HasDiscountOffList returns a boolean if a field has been set.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) HasDiscountOffList() bool {
	if o != nil && !IsNil(o.DiscountOffList) {
		return true
	}

	return false
}

// SetDiscountOffList gets a reference to the given float32 and assigns it to the DiscountOffList field.
func (o *QuoteDetailsResponseProductsInnerPriceDiscountsInner) SetDiscountOffList(v float32) {
	o.DiscountOffList = &v
}

func (o QuoteDetailsResponseProductsInnerPriceDiscountsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteDetailsResponseProductsInnerPriceDiscountsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.AvaliableQunatity) {
		toSerialize["avaliableQunatity"] = o.AvaliableQunatity
	}
	if !IsNil(o.MinimumQuantity) {
		toSerialize["minimumQuantity"] = o.MinimumQuantity
	}
	if !IsNil(o.BidNumber) {
		toSerialize["bidNumber"] = o.BidNumber
	}
	if !IsNil(o.BidVersion) {
		toSerialize["bidVersion"] = o.BidVersion
	}
	if !IsNil(o.ValidFrom) {
		toSerialize["validFrom"] = o.ValidFrom
	}
	if !IsNil(o.ValidTo) {
		toSerialize["validTo"] = o.ValidTo
	}
	if !IsNil(o.DiscountOffList) {
		toSerialize["discountOffList"] = o.DiscountOffList
	}
	return toSerialize, nil
}

type NullableQuoteDetailsResponseProductsInnerPriceDiscountsInner struct {
	value *QuoteDetailsResponseProductsInnerPriceDiscountsInner
	isSet bool
}

func (v NullableQuoteDetailsResponseProductsInnerPriceDiscountsInner) Get() *QuoteDetailsResponseProductsInnerPriceDiscountsInner {
	return v.value
}

func (v *NullableQuoteDetailsResponseProductsInnerPriceDiscountsInner) Set(val *QuoteDetailsResponseProductsInnerPriceDiscountsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteDetailsResponseProductsInnerPriceDiscountsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteDetailsResponseProductsInnerPriceDiscountsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteDetailsResponseProductsInnerPriceDiscountsInner(val *QuoteDetailsResponseProductsInnerPriceDiscountsInner) *NullableQuoteDetailsResponseProductsInnerPriceDiscountsInner {
	return &NullableQuoteDetailsResponseProductsInnerPriceDiscountsInner{value: val, isSet: true}
}

func (v NullableQuoteDetailsResponseProductsInnerPriceDiscountsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteDetailsResponseProductsInnerPriceDiscountsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


